diff --git a/node_modules/expo-gl/build/Canvas.js b/node_modules/expo-gl/build/Canvas.js
index aa85dcb..aa7511a 100644
--- a/node_modules/expo-gl/build/Canvas.js
+++ b/node_modules/expo-gl/build/Canvas.js
@@ -1,4 +1,4 @@
-import { Platform } from '@unimodules/core';
+import { Platform } from 'expo-modules-core';
 import * as React from 'react';
 import { findDOMNode } from 'react-dom';
 import { PixelRatio, StyleSheet, View } from 'react-native';
@@ -74,7 +74,7 @@ const CanvasWrapper = ({ pointerEvents, children, ...props }) => {
         }
         setRef(props.canvasRef, canvas);
     }, [_canvasRef]);
-    return (React.createElement(View, Object.assign({}, props, { pointerEvents: "box-none", ref: ref, onLayout: onLayout }),
+    return (React.createElement(View, { ...props, pointerEvents: "box-none", ref: ref, onLayout: onLayout },
         React.createElement(Canvas, { ref: _canvasRef, pointerEvents: pointerEvents, style: StyleSheet.absoluteFill }),
         children));
 };
diff --git a/node_modules/expo-gl/build/Canvas.js.map b/node_modules/expo-gl/build/Canvas.js.map
index bffe660..7c63e81 100644
--- a/node_modules/expo-gl/build/Canvas.js.map
+++ b/node_modules/expo-gl/build/Canvas.js.map
@@ -1 +1 @@
-{"version":3,"file":"Canvas.js","sourceRoot":"","sources":["../src/Canvas.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Platform } from '@unimodules/core';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport { LayoutChangeEvent, PixelRatio, StyleSheet, View, ViewProps } from 'react-native';\nimport createElement from 'react-native-web/dist/exports/createElement';\n\nfunction getElement(component) {\n  try {\n    return findDOMNode(component);\n  } catch (e) {\n    return component;\n  }\n}\n\nfunction setRef<T>(refProp: React.Ref<T>, ref: T | null) {\n  if (!refProp) return;\n\n  if (typeof refProp === 'function') {\n    refProp(ref);\n  } else if ('current' in refProp) {\n    // @ts-ignore\n    refProp.current = ref;\n  }\n}\n\nconst Canvas = React.forwardRef(\n  (props: React.ComponentProps<typeof View>, ref: React.Ref<HTMLCanvasElement>) =>\n    createElement('canvas', { ...props, ref })\n);\n\nconst CanvasWrapper: React.FunctionComponent<ViewProps & {\n  canvasRef: React.Ref<HTMLCanvasElement>;\n}> = ({ pointerEvents, children, ...props }) => {\n  const [size, setSize] = React.useState<{ width: number; height: number } | null>(null);\n\n  const ref = React.useRef<View>(null);\n  const _canvasRef = React.useRef<HTMLCanvasElement>(null);\n\n  function updateCanvasSize(): void {\n    const canvas = _canvasRef.current;\n    // eslint-disable-next-line no-undef\n    if (typeof HTMLCanvasElement !== 'undefined' && canvas instanceof HTMLCanvasElement) {\n      const size = getSize();\n      const scale = PixelRatio.get();\n\n      canvas.style.width = `${size.width}px`;\n      canvas.style.height = `${size.height}px`;\n\n      canvas.width = size.width * scale;\n      canvas.height = size.height * scale;\n    }\n  }\n\n  function getSize(): { width: number; height: number } {\n    if (size) {\n      return size;\n    } else if (!ref.current || !Platform.isDOMAvailable) {\n      return { width: 0, height: 0 };\n    }\n    const element = getElement(ref.current);\n    const { offsetWidth: width = 0, offsetHeight: height = 0 } = element;\n    return { width, height };\n  }\n\n  function onLayout(event: LayoutChangeEvent): void {\n    const {\n      nativeEvent: {\n        layout: { width, height },\n      },\n    } = event;\n\n    if (width !== size?.width || height !== size.height) {\n      setSize({ width, height });\n\n      if (props.onLayout) {\n        props.onLayout(event);\n      }\n    }\n  }\n\n  React.useEffect(() => {\n    if (ref.current != null) {\n      setSize(getSize());\n    }\n  }, [ref]);\n\n  React.useEffect(() => {\n    updateCanvasSize();\n  }, [size]);\n\n  React.useEffect(() => {\n    const canvas = _canvasRef.current;\n    if (canvas) {\n      updateCanvasSize();\n    }\n    setRef(props.canvasRef, canvas);\n  }, [_canvasRef]);\n\n  return (\n    <View {...props} pointerEvents=\"box-none\" ref={ref} onLayout={onLayout}>\n      <Canvas ref={_canvasRef} pointerEvents={pointerEvents} style={StyleSheet.absoluteFill} />\n      {children}\n    </View>\n  );\n};\n\nexport default CanvasWrapper;\n"]}
\ No newline at end of file
+{"version":3,"file":"Canvas.js","sourceRoot":"","sources":["../src/Canvas.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Platform } from 'expo-modules-core';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport { LayoutChangeEvent, PixelRatio, StyleSheet, View, ViewProps } from 'react-native';\nimport createElement from 'react-native-web/dist/exports/createElement';\n\nfunction getElement(component) {\n  try {\n    return findDOMNode(component);\n  } catch (e) {\n    return component;\n  }\n}\n\nfunction setRef<T>(refProp: React.Ref<T>, ref: T | null) {\n  if (!refProp) return;\n\n  if (typeof refProp === 'function') {\n    refProp(ref);\n  } else if ('current' in refProp) {\n    // @ts-ignore\n    refProp.current = ref;\n  }\n}\n\nconst Canvas = React.forwardRef(\n  (props: React.ComponentProps<typeof View>, ref: React.Ref<HTMLCanvasElement>) =>\n    createElement('canvas', { ...props, ref })\n);\n\nconst CanvasWrapper: React.FunctionComponent<\n  ViewProps & {\n    canvasRef: React.Ref<HTMLCanvasElement>;\n  }\n> = ({ pointerEvents, children, ...props }) => {\n  const [size, setSize] = React.useState<{ width: number; height: number } | null>(null);\n\n  const ref = React.useRef<View>(null);\n  const _canvasRef = React.useRef<HTMLCanvasElement>(null);\n\n  function updateCanvasSize(): void {\n    const canvas = _canvasRef.current;\n    // eslint-disable-next-line no-undef\n    if (typeof HTMLCanvasElement !== 'undefined' && canvas instanceof HTMLCanvasElement) {\n      const size = getSize();\n      const scale = PixelRatio.get();\n\n      canvas.style.width = `${size.width}px`;\n      canvas.style.height = `${size.height}px`;\n\n      canvas.width = size.width * scale;\n      canvas.height = size.height * scale;\n    }\n  }\n\n  function getSize(): { width: number; height: number } {\n    if (size) {\n      return size;\n    } else if (!ref.current || !Platform.isDOMAvailable) {\n      return { width: 0, height: 0 };\n    }\n    const element = getElement(ref.current);\n    const { offsetWidth: width = 0, offsetHeight: height = 0 } = element;\n    return { width, height };\n  }\n\n  function onLayout(event: LayoutChangeEvent): void {\n    const {\n      nativeEvent: {\n        layout: { width, height },\n      },\n    } = event;\n\n    if (width !== size?.width || height !== size.height) {\n      setSize({ width, height });\n\n      if (props.onLayout) {\n        props.onLayout(event);\n      }\n    }\n  }\n\n  React.useEffect(() => {\n    if (ref.current != null) {\n      setSize(getSize());\n    }\n  }, [ref]);\n\n  React.useEffect(() => {\n    updateCanvasSize();\n  }, [size]);\n\n  React.useEffect(() => {\n    const canvas = _canvasRef.current;\n    if (canvas) {\n      updateCanvasSize();\n    }\n    setRef(props.canvasRef, canvas);\n  }, [_canvasRef]);\n\n  return (\n    <View {...props} pointerEvents=\"box-none\" ref={ref} onLayout={onLayout}>\n      <Canvas ref={_canvasRef} pointerEvents={pointerEvents} style={StyleSheet.absoluteFill} />\n      {children}\n    </View>\n  );\n};\n\nexport default CanvasWrapper;\n"]}
\ No newline at end of file
diff --git a/node_modules/expo-gl/build/GLUtils.js b/node_modules/expo-gl/build/GLUtils.js
index 55bfd6a..ec30e43 100644
--- a/node_modules/expo-gl/build/GLUtils.js
+++ b/node_modules/expo-gl/build/GLUtils.js
@@ -34,7 +34,7 @@ export function configureLogging(gl) {
             }
             gl[key] = (...args) => {
                 if (loggingOption & GLLoggingOption.METHOD_CALLS) {
-                    const params = args.map(arg => {
+                    const params = args.map((arg) => {
                         // If the type is `number`, then try to find name of the constant that has such value,
                         // so it's easier to read these logs. In some cases it might be misleading
                         // if the parameter is for example a width or height, so the number is still logged.
diff --git a/node_modules/expo-gl/build/GLUtils.js.map b/node_modules/expo-gl/build/GLUtils.js.map
index 770c930..48bcc85 100644
--- a/node_modules/expo-gl/build/GLUtils.js.map
+++ b/node_modules/expo-gl/build/GLUtils.js.map
@@ -1 +1 @@
-{"version":3,"file":"GLUtils.js","sourceRoot":"","sources":["../src/GLUtils.ts"],"names":[],"mappings":"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","sourcesContent":["import GLErrors from './GLErrors';\nimport { ExpoWebGLRenderingContext, GLLoggingOption } from './GLView.types';\n\n/**\n * Maximum length of the strings printed to the console.\n */\nconst MAX_STRING_LENGTH = 20;\n\n/**\n * Sets up `__expoSetLogging` method providing some logging options useful when debugging GL calls.\n */\nexport function configureLogging(gl: ExpoWebGLRenderingContext): void {\n  // Enable/disable logging of all GL function calls\n  let loggingOption = GLLoggingOption.DISABLED;\n\n  gl.__expoSetLogging = (option: GLLoggingOption): void => {\n    // If boolean values are the same, just change the internal value,\n    // there is no need to wrap/unwrap functions in this case.\n    if (!loggingOption === !option) {\n      loggingOption = option;\n      return;\n    }\n\n    // Turn off logging.\n    if (!option || option === GLLoggingOption.DISABLED) {\n      Object.entries(gl).forEach(([key, value]) => {\n        if (typeof value === 'function' && value.original) {\n          gl[key] = value.original;\n        }\n      });\n      loggingOption = option;\n      return;\n    }\n\n    // Turn on logging.\n    Object.entries(gl).forEach(([key, originalValue]) => {\n      if (typeof originalValue !== 'function' || key === '__expoSetLogging') {\n        return;\n      }\n\n      gl[key] = (...args) => {\n        if (loggingOption & GLLoggingOption.METHOD_CALLS) {\n          const params = args.map(arg => {\n            // If the type is `number`, then try to find name of the constant that has such value,\n            // so it's easier to read these logs. In some cases it might be misleading\n            // if the parameter is for example a width or height, so the number is still logged.\n            if (loggingOption & GLLoggingOption.RESOLVE_CONSTANTS && typeof arg === 'number') {\n              for (const prop in gl) {\n                if (gl[prop] === arg) {\n                  return `${arg} (${prop})`;\n                }\n              }\n            }\n\n            // Truncate strings so they don't produce too much output and don't block the bridge.\n            // It mostly applies to shaders which might be very long...\n            if (loggingOption & GLLoggingOption.TRUNCATE_STRINGS && typeof arg === 'string') {\n              if (arg.length > MAX_STRING_LENGTH) {\n                const lastIndex = arg.lastIndexOf(' ', MAX_STRING_LENGTH);\n                return arg.substr(0, lastIndex >= 0 ? lastIndex : MAX_STRING_LENGTH) + '...';\n              }\n            }\n\n            // Just return the parameter as a string.\n            return '' + arg;\n          });\n          console.log(`ExpoGL: ${key}(${params.join(', ')})`);\n        }\n\n        const result = originalValue.apply(gl, args);\n\n        if (loggingOption & GLLoggingOption.METHOD_CALLS) {\n          console.log(`ExpoGL:   = ${result}`);\n        }\n        if (loggingOption & GLLoggingOption.GET_ERRORS && key !== 'getError') {\n          // @ts-ignore We need to call into the original `getError`.\n          const error = gl.getError.original.call(gl);\n\n          if (error && error !== gl.NO_ERROR) {\n            // `console.error` would cause a red screen, so let's just log with red color.\n            console.log(`\\x1b[31mExpoGL: Error ${GLErrors[error]}\\x1b[0m`);\n          }\n        }\n        return result;\n      };\n      gl[key].original = originalValue;\n    });\n\n    loggingOption = option;\n  };\n}\n"]}
\ No newline at end of file
+{"version":3,"file":"GLUtils.js","sourceRoot":"","sources":["../src/GLUtils.ts"],"names":[],"mappings":"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","sourcesContent":["import GLErrors from './GLErrors';\nimport { ExpoWebGLRenderingContext, GLLoggingOption } from './GLView.types';\n\n/**\n * Maximum length of the strings printed to the console.\n */\nconst MAX_STRING_LENGTH = 20;\n\n/**\n * Sets up `__expoSetLogging` method providing some logging options useful when debugging GL calls.\n */\nexport function configureLogging(gl: ExpoWebGLRenderingContext): void {\n  // Enable/disable logging of all GL function calls\n  let loggingOption = GLLoggingOption.DISABLED;\n\n  gl.__expoSetLogging = (option: GLLoggingOption): void => {\n    // If boolean values are the same, just change the internal value,\n    // there is no need to wrap/unwrap functions in this case.\n    if (!loggingOption === !option) {\n      loggingOption = option;\n      return;\n    }\n\n    // Turn off logging.\n    if (!option || option === GLLoggingOption.DISABLED) {\n      Object.entries(gl).forEach(([key, value]) => {\n        if (typeof value === 'function' && value.original) {\n          gl[key] = value.original;\n        }\n      });\n      loggingOption = option;\n      return;\n    }\n\n    // Turn on logging.\n    Object.entries(gl).forEach(([key, originalValue]) => {\n      if (typeof originalValue !== 'function' || key === '__expoSetLogging') {\n        return;\n      }\n\n      gl[key] = (...args) => {\n        if (loggingOption & GLLoggingOption.METHOD_CALLS) {\n          const params = args.map((arg) => {\n            // If the type is `number`, then try to find name of the constant that has such value,\n            // so it's easier to read these logs. In some cases it might be misleading\n            // if the parameter is for example a width or height, so the number is still logged.\n            if (loggingOption & GLLoggingOption.RESOLVE_CONSTANTS && typeof arg === 'number') {\n              for (const prop in gl) {\n                if (gl[prop] === arg) {\n                  return `${arg} (${prop})`;\n                }\n              }\n            }\n\n            // Truncate strings so they don't produce too much output and don't block the bridge.\n            // It mostly applies to shaders which might be very long...\n            if (loggingOption & GLLoggingOption.TRUNCATE_STRINGS && typeof arg === 'string') {\n              if (arg.length > MAX_STRING_LENGTH) {\n                const lastIndex = arg.lastIndexOf(' ', MAX_STRING_LENGTH);\n                return arg.substr(0, lastIndex >= 0 ? lastIndex : MAX_STRING_LENGTH) + '...';\n              }\n            }\n\n            // Just return the parameter as a string.\n            return '' + arg;\n          });\n          console.log(`ExpoGL: ${key}(${params.join(', ')})`);\n        }\n\n        const result = originalValue.apply(gl, args);\n\n        if (loggingOption & GLLoggingOption.METHOD_CALLS) {\n          console.log(`ExpoGL:   = ${result}`);\n        }\n        if (loggingOption & GLLoggingOption.GET_ERRORS && key !== 'getError') {\n          // @ts-ignore We need to call into the original `getError`.\n          const error = gl.getError.original.call(gl);\n\n          if (error && error !== gl.NO_ERROR) {\n            // `console.error` would cause a red screen, so let's just log with red color.\n            console.log(`\\x1b[31mExpoGL: Error ${GLErrors[error]}\\x1b[0m`);\n          }\n        }\n        return result;\n      };\n      gl[key].original = originalValue;\n    });\n\n    loggingOption = option;\n  };\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/expo-gl/build/GLView.js b/node_modules/expo-gl/build/GLView.js
index 899ef7b..a731079 100644
--- a/node_modules/expo-gl/build/GLView.js
+++ b/node_modules/expo-gl/build/GLView.js
@@ -1,4 +1,4 @@
-import { NativeModulesProxy, UnavailabilityError, requireNativeViewManager, CodedError, } from '@unimodules/core';
+import { NativeModulesProxy, UnavailabilityError, requireNativeViewManager, CodedError, } from 'expo-modules-core';
 import * as React from 'react';
 import { Platform, View, findNodeHandle } from 'react-native';
 import { configureLogging } from './GLUtils';
@@ -9,23 +9,10 @@ const NativeView = requireNativeViewManager('ExponentGLView');
  * A component that acts as an OpenGL render target
  */
 export class GLView extends React.Component {
-    constructor() {
-        super(...arguments);
-        this.nativeRef = null;
-        this._setNativeRef = (nativeRef) => {
-            if (this.props.nativeRef_EXPERIMENTAL) {
-                this.props.nativeRef_EXPERIMENTAL(nativeRef);
-            }
-            this.nativeRef = nativeRef;
-        };
-        this._onSurfaceCreate = ({ nativeEvent: { exglCtxId } }) => {
-            const gl = getGl(exglCtxId);
-            this.exglCtxId = exglCtxId;
-            if (this.props.onContextCreate) {
-                this.props.onContextCreate(gl);
-            }
-        };
-    }
+    static NativeView;
+    static defaultProps = {
+        msaaSamples: 4,
+    };
     static async createContextAsync() {
         const { exglCtxId } = await ExponentGLObjectManager.createContextAsync();
         return getGl(exglCtxId);
@@ -38,10 +25,12 @@ export class GLView extends React.Component {
         const exglCtxId = getContextId(exgl);
         return ExponentGLObjectManager.takeSnapshotAsync(exglCtxId, options);
     }
+    nativeRef = null;
+    exglCtxId;
     render() {
         const { onContextCreate, // eslint-disable-line no-unused-vars
         msaaSamples, ...viewProps } = this.props;
-        return (React.createElement(View, Object.assign({}, viewProps),
+        return (React.createElement(View, { ...viewProps },
             React.createElement(NativeView, { ref: this._setNativeRef, style: {
                     flex: 1,
                     ...(Platform.OS === 'ios'
@@ -51,6 +40,19 @@ export class GLView extends React.Component {
                         : {}),
                 }, onSurfaceCreate: this._onSurfaceCreate, msaaSamples: Platform.OS === 'ios' ? msaaSamples : undefined })));
     }
+    _setNativeRef = (nativeRef) => {
+        if (this.props.nativeRef_EXPERIMENTAL) {
+            this.props.nativeRef_EXPERIMENTAL(nativeRef);
+        }
+        this.nativeRef = nativeRef;
+    };
+    _onSurfaceCreate = ({ nativeEvent: { exglCtxId } }) => {
+        const gl = getGl(exglCtxId);
+        this.exglCtxId = exglCtxId;
+        if (this.props.onContextCreate) {
+            this.props.onContextCreate(gl);
+        }
+    };
     async startARSessionAsync() {
         if (!ExponentGLViewManager.startARSessionAsync) {
             throw new UnavailabilityError('expo-gl', 'startARSessionAsync');
@@ -83,17 +85,16 @@ export class GLView extends React.Component {
         return await GLView.takeSnapshotAsync(exglCtxId, options);
     }
 }
-GLView.defaultProps = {
-    msaaSamples: 4,
-};
 GLView.NativeView = NativeView;
 // JavaScript WebGL types to wrap around native objects
 class WebGLRenderingContext {
+    __exglCtxId;
 }
 class WebGL2RenderingContext extends WebGLRenderingContext {
 }
 const idToObject = {};
 export class WebGLObject {
+    id;
     constructor(id) {
         if (idToObject[id]) {
             throw new Error(`WebGL object with underlying EXGLObjectId '${id}' already exists!`);
@@ -125,6 +126,7 @@ class WebGLShader extends WebGLObject {
 class WebGLTexture extends WebGLObject {
 }
 class WebGLUniformLocation {
+    id;
     constructor(id) {
         this.id = id; // Native GL object id
     }
@@ -133,6 +135,9 @@ class WebGLUniformLocation {
     }
 }
 class WebGLActiveInfo {
+    name;
+    size;
+    type;
     constructor(obj) {
         Object.assign(this, obj);
     }
@@ -141,6 +146,9 @@ class WebGLActiveInfo {
     }
 }
 class WebGLShaderPrecisionFormat {
+    rangeMin;
+    rangeMax;
+    precision;
     constructor(obj) {
         Object.assign(this, obj);
     }
@@ -161,8 +169,8 @@ class WebGLVertexArrayObject extends WebGLObject {
 }
 // Many functions need wrapping/unwrapping of arguments and return value. We handle each case
 // specifically so we can write the tightest code for better performance.
-const wrapMethods = gl => {
-    const wrap = (methodNames, wrapper) => (Array.isArray(methodNames) ? methodNames : [methodNames]).forEach(methodName => (gl[methodName] = wrapper(gl[methodName])));
+const wrapMethods = (gl) => {
+    const wrap = (methodNames, wrapper) => (Array.isArray(methodNames) ? methodNames : [methodNames]).forEach((methodName) => (gl[methodName] = wrapper(gl[methodName])));
     // We can be slow in `gl.getParameter(...)` since it's a blocking call anyways
     const getParameterTypes = {
         [gl.ARRAY_BUFFER_BINDING]: WebGLBuffer,
@@ -183,7 +191,7 @@ const wrapMethods = gl => {
         [gl.UNIFORM_BUFFER_BINDING]: WebGLBuffer,
         [gl.VERTEX_ARRAY_BINDING]: WebGLVertexArrayObject,
     };
-    wrap('getParameter', orig => pname => {
+    wrap('getParameter', (orig) => (pname) => {
         let ret = orig.call(gl, pname);
         if (pname === gl.VERSION) {
             // Wrap native version name
@@ -193,66 +201,66 @@ const wrapMethods = gl => {
         return type ? wrapObject(type, ret) : ret;
     });
     // Buffers
-    wrap('bindBuffer', orig => (target, buffer) => orig.call(gl, target, buffer && buffer.id));
-    wrap('createBuffer', orig => () => wrapObject(WebGLBuffer, orig.call(gl)));
-    wrap('deleteBuffer', orig => buffer => orig.call(gl, buffer && buffer.id));
-    wrap('isBuffer', orig => buffer => buffer instanceof WebGLBuffer && orig.call(gl, buffer.id));
+    wrap('bindBuffer', (orig) => (target, buffer) => orig.call(gl, target, buffer && buffer.id));
+    wrap('createBuffer', (orig) => () => wrapObject(WebGLBuffer, orig.call(gl)));
+    wrap('deleteBuffer', (orig) => (buffer) => orig.call(gl, buffer && buffer.id));
+    wrap('isBuffer', (orig) => (buffer) => buffer instanceof WebGLBuffer && orig.call(gl, buffer.id));
     // Framebuffers
-    wrap('bindFramebuffer', orig => (target, framebuffer) => orig.call(gl, target, framebuffer && framebuffer.id));
-    wrap('createFramebuffer', orig => () => wrapObject(WebGLFramebuffer, orig.call(gl)));
-    wrap('deleteFramebuffer', orig => framebuffer => orig.call(gl, framebuffer && framebuffer.id));
-    wrap('framebufferRenderbuffer', orig => (target, attachment, rbtarget, rb) => orig.call(gl, target, attachment, rbtarget, rb && rb.id));
-    wrap('framebufferTexture2D', orig => (target, attachment, textarget, tex, level) => orig.call(gl, target, attachment, textarget, tex && tex.id, level));
-    wrap('isFramebuffer', orig => framebuffer => framebuffer instanceof WebGLFramebuffer && orig.call(gl, framebuffer.id));
-    wrap('framebufferTextureLayer', orig => (target, attachment, texture, level, layer) => {
+    wrap('bindFramebuffer', (orig) => (target, framebuffer) => orig.call(gl, target, framebuffer && framebuffer.id));
+    wrap('createFramebuffer', (orig) => () => wrapObject(WebGLFramebuffer, orig.call(gl)));
+    wrap('deleteFramebuffer', (orig) => (framebuffer) => orig.call(gl, framebuffer && framebuffer.id));
+    wrap('framebufferRenderbuffer', (orig) => (target, attachment, rbtarget, rb) => orig.call(gl, target, attachment, rbtarget, rb && rb.id));
+    wrap('framebufferTexture2D', (orig) => (target, attachment, textarget, tex, level) => orig.call(gl, target, attachment, textarget, tex && tex.id, level));
+    wrap('isFramebuffer', (orig) => (framebuffer) => framebuffer instanceof WebGLFramebuffer && orig.call(gl, framebuffer.id));
+    wrap('framebufferTextureLayer', (orig) => (target, attachment, texture, level, layer) => {
         return orig.call(gl, target, attachment, objectId(texture), level, layer);
     });
     // Renderbuffers
-    wrap('bindRenderbuffer', orig => (target, renderbuffer) => orig.call(gl, target, renderbuffer && renderbuffer.id));
-    wrap('createRenderbuffer', orig => () => wrapObject(WebGLRenderbuffer, orig.call(gl)));
-    wrap('deleteRenderbuffer', orig => renderbuffer => orig.call(gl, renderbuffer && renderbuffer.id));
-    wrap('isRenderbuffer', orig => renderbuffer => renderbuffer instanceof WebGLRenderbuffer && orig.call(gl, renderbuffer.id));
+    wrap('bindRenderbuffer', (orig) => (target, renderbuffer) => orig.call(gl, target, renderbuffer && renderbuffer.id));
+    wrap('createRenderbuffer', (orig) => () => wrapObject(WebGLRenderbuffer, orig.call(gl)));
+    wrap('deleteRenderbuffer', (orig) => (renderbuffer) => orig.call(gl, renderbuffer && renderbuffer.id));
+    wrap('isRenderbuffer', (orig) => (renderbuffer) => renderbuffer instanceof WebGLRenderbuffer && orig.call(gl, renderbuffer.id));
     // Textures
-    wrap('bindTexture', orig => (target, texture) => orig.call(gl, target, texture && texture.id));
-    wrap('createTexture', orig => () => wrapObject(WebGLTexture, orig.call(gl)));
-    wrap('deleteTexture', orig => texture => orig.call(gl, texture && texture.id));
-    wrap('isTexture', orig => texture => texture instanceof WebGLTexture && orig.call(gl, texture.id));
+    wrap('bindTexture', (orig) => (target, texture) => orig.call(gl, target, texture && texture.id));
+    wrap('createTexture', (orig) => () => wrapObject(WebGLTexture, orig.call(gl)));
+    wrap('deleteTexture', (orig) => (texture) => orig.call(gl, texture && texture.id));
+    wrap('isTexture', (orig) => (texture) => texture instanceof WebGLTexture && orig.call(gl, texture.id));
     // Programs and shaders
-    wrap('attachShader', orig => (program, shader) => orig.call(gl, program && program.id, shader && shader.id));
-    wrap('bindAttribLocation', orig => (program, index, name) => orig.call(gl, program && program.id, index, name));
-    wrap('compileShader', orig => shader => orig.call(gl, shader && shader.id));
-    wrap('createProgram', orig => () => wrapObject(WebGLProgram, orig.call(gl)));
-    wrap('createShader', orig => type => wrapObject(WebGLShader, orig.call(gl, type)));
-    wrap('deleteProgram', orig => program => orig.call(gl, program && program.id));
-    wrap('deleteShader', orig => shader => orig.call(gl, shader && shader.id));
-    wrap('detachShader', orig => (program, shader) => orig.call(gl, program && program.id, shader && shader.id));
-    wrap('getAttachedShaders', orig => program => orig.call(gl, program && program.id).map(id => wrapObject(WebGLShader, id)));
-    wrap('getProgramParameter', orig => (program, pname) => orig.call(gl, program && program.id, pname));
-    wrap('getProgramInfoLog', orig => program => orig.call(gl, program && program.id));
-    wrap('getShaderParameter', orig => (shader, pname) => orig.call(gl, shader && shader.id, pname));
-    wrap('getShaderPrecisionFormat', orig => (shadertype, precisiontype) => new WebGLShaderPrecisionFormat(orig.call(gl, shadertype, precisiontype)));
-    wrap('getShaderInfoLog', orig => shader => orig.call(gl, shader && shader.id));
-    wrap('getShaderSource', orig => shader => orig.call(gl, shader && shader.id));
-    wrap('linkProgram', orig => program => orig.call(gl, program && program.id));
-    wrap('shaderSource', orig => (shader, source) => orig.call(gl, shader && shader.id, source));
-    wrap('useProgram', orig => program => orig.call(gl, program && program.id));
-    wrap('validateProgram', orig => program => orig.call(gl, program && program.id));
-    wrap('isShader', orig => shader => shader instanceof WebGLShader && orig.call(gl, shader.id));
-    wrap('isProgram', orig => program => program instanceof WebGLProgram && orig.call(gl, program.id));
-    wrap('getFragDataLocation', orig => program => orig.call(gl, objectId(program)));
+    wrap('attachShader', (orig) => (program, shader) => orig.call(gl, program && program.id, shader && shader.id));
+    wrap('bindAttribLocation', (orig) => (program, index, name) => orig.call(gl, program && program.id, index, name));
+    wrap('compileShader', (orig) => (shader) => orig.call(gl, shader && shader.id));
+    wrap('createProgram', (orig) => () => wrapObject(WebGLProgram, orig.call(gl)));
+    wrap('createShader', (orig) => (type) => wrapObject(WebGLShader, orig.call(gl, type)));
+    wrap('deleteProgram', (orig) => (program) => orig.call(gl, program && program.id));
+    wrap('deleteShader', (orig) => (shader) => orig.call(gl, shader && shader.id));
+    wrap('detachShader', (orig) => (program, shader) => orig.call(gl, program && program.id, shader && shader.id));
+    wrap('getAttachedShaders', (orig) => (program) => orig.call(gl, program && program.id).map((id) => wrapObject(WebGLShader, id)));
+    wrap('getProgramParameter', (orig) => (program, pname) => orig.call(gl, program && program.id, pname));
+    wrap('getProgramInfoLog', (orig) => (program) => orig.call(gl, program && program.id));
+    wrap('getShaderParameter', (orig) => (shader, pname) => orig.call(gl, shader && shader.id, pname));
+    wrap('getShaderPrecisionFormat', (orig) => (shadertype, precisiontype) => new WebGLShaderPrecisionFormat(orig.call(gl, shadertype, precisiontype)));
+    wrap('getShaderInfoLog', (orig) => (shader) => orig.call(gl, shader && shader.id));
+    wrap('getShaderSource', (orig) => (shader) => orig.call(gl, shader && shader.id));
+    wrap('linkProgram', (orig) => (program) => orig.call(gl, program && program.id));
+    wrap('shaderSource', (orig) => (shader, source) => orig.call(gl, shader && shader.id, source));
+    wrap('useProgram', (orig) => (program) => orig.call(gl, program && program.id));
+    wrap('validateProgram', (orig) => (program) => orig.call(gl, program && program.id));
+    wrap('isShader', (orig) => (shader) => shader instanceof WebGLShader && orig.call(gl, shader.id));
+    wrap('isProgram', (orig) => (program) => program instanceof WebGLProgram && orig.call(gl, program.id));
+    wrap('getFragDataLocation', (orig) => (program) => orig.call(gl, objectId(program)));
     // Uniforms and attributes
-    wrap('getActiveAttrib', orig => (program, index) => new WebGLActiveInfo(orig.call(gl, program && program.id, index)));
-    wrap('getActiveUniform', orig => (program, index) => new WebGLActiveInfo(orig.call(gl, program && program.id, index)));
-    wrap('getAttribLocation', orig => (program, name) => orig.call(gl, program && program.id, name));
-    wrap('getUniform', orig => (program, location) => orig.call(gl, program && program.id, location && location.id));
-    wrap('getUniformLocation', orig => (program, name) => new WebGLUniformLocation(orig.call(gl, program && program.id, name)));
-    wrap(['uniform1f', 'uniform1i', 'uniform1ui'], orig => (loc, x) => orig.call(gl, objectId(loc), x));
-    wrap(['uniform2f', 'uniform2i', 'uniform2ui'], orig => (loc, x, y) => orig.call(gl, objectId(loc), x, y));
-    wrap(['uniform3f', 'uniform3i', 'uniform3ui'], orig => (loc, x, y, z) => orig.call(gl, objectId(loc), x, y, z));
-    wrap(['uniform4f', 'uniform4i', 'uniform4ui'], orig => (loc, x, y, z, w) => orig.call(gl, objectId(loc), x, y, z, w));
-    wrap(['uniform1fv', 'uniform2fv', 'uniform3fv', 'uniform4fv'], orig => (loc, val) => orig.call(gl, objectId(loc), new Float32Array(val)));
-    wrap(['uniform1iv', 'uniform2iv', 'uniform3iv', 'uniform4iv'], orig => (loc, val) => orig.call(gl, objectId(loc), new Int32Array(val)));
-    wrap(['uniform1uiv', 'uniform2uiv', 'uniform3uiv', 'uniform4uiv'], orig => (loc, val) => orig.call(gl, objectId(loc), new Uint32Array(val)));
+    wrap('getActiveAttrib', (orig) => (program, index) => new WebGLActiveInfo(orig.call(gl, program && program.id, index)));
+    wrap('getActiveUniform', (orig) => (program, index) => new WebGLActiveInfo(orig.call(gl, program && program.id, index)));
+    wrap('getAttribLocation', (orig) => (program, name) => orig.call(gl, program && program.id, name));
+    wrap('getUniform', (orig) => (program, location) => orig.call(gl, program && program.id, location && location.id));
+    wrap('getUniformLocation', (orig) => (program, name) => new WebGLUniformLocation(orig.call(gl, program && program.id, name)));
+    wrap(['uniform1f', 'uniform1i', 'uniform1ui'], (orig) => (loc, x) => orig.call(gl, objectId(loc), x));
+    wrap(['uniform2f', 'uniform2i', 'uniform2ui'], (orig) => (loc, x, y) => orig.call(gl, objectId(loc), x, y));
+    wrap(['uniform3f', 'uniform3i', 'uniform3ui'], (orig) => (loc, x, y, z) => orig.call(gl, objectId(loc), x, y, z));
+    wrap(['uniform4f', 'uniform4i', 'uniform4ui'], (orig) => (loc, x, y, z, w) => orig.call(gl, objectId(loc), x, y, z, w));
+    wrap(['uniform1fv', 'uniform2fv', 'uniform3fv', 'uniform4fv'], (orig) => (loc, val) => orig.call(gl, objectId(loc), new Float32Array(val)));
+    wrap(['uniform1iv', 'uniform2iv', 'uniform3iv', 'uniform4iv'], (orig) => (loc, val) => orig.call(gl, objectId(loc), new Int32Array(val)));
+    wrap(['uniform1uiv', 'uniform2uiv', 'uniform3uiv', 'uniform4uiv'], (orig) => (loc, val) => orig.call(gl, objectId(loc), new Uint32Array(val)));
     wrap([
         'uniformMatrix2fv',
         'uniformMatrix3fv',
@@ -263,70 +271,70 @@ const wrapMethods = gl => {
         'uniformMatrix4x3fv',
         'uniformMatrix2x4fv',
         'uniformMatrix3x4fv',
-    ], orig => (loc, transpose, val) => orig.call(gl, loc && loc.id, transpose, new Float32Array(val)));
-    wrap(['vertexAttrib1fv', 'vertexAttrib2fv', 'vertexAttrib3fv', 'vertexAttrib4fv'], orig => (index, val) => orig.call(gl, index, new Float32Array(val)));
-    wrap('vertexAttribI4iv', orig => (index, val) => orig.call(gl, index, new Int32Array(val)));
-    wrap('vertexAttribI4uiv', orig => (index, val) => orig.call(gl, index, new Uint32Array(val)));
+    ], (orig) => (loc, transpose, val) => orig.call(gl, loc && loc.id, transpose, new Float32Array(val)));
+    wrap(['vertexAttrib1fv', 'vertexAttrib2fv', 'vertexAttrib3fv', 'vertexAttrib4fv'], (orig) => (index, val) => orig.call(gl, index, new Float32Array(val)));
+    wrap('vertexAttribI4iv', (orig) => (index, val) => orig.call(gl, index, new Int32Array(val)));
+    wrap('vertexAttribI4uiv', (orig) => (index, val) => orig.call(gl, index, new Uint32Array(val)));
     // Query objects
-    wrap('createQuery', orig => () => wrapObject(WebGLQuery, orig.call(gl)));
-    wrap('deleteQuery', orig => query => orig.call(gl, objectId(query)));
-    wrap('beginQuery', orig => (target, query) => orig.call(gl, target, objectId(query)));
-    wrap('getQuery', orig => (target, pname) => {
+    wrap('createQuery', (orig) => () => wrapObject(WebGLQuery, orig.call(gl)));
+    wrap('deleteQuery', (orig) => (query) => orig.call(gl, objectId(query)));
+    wrap('beginQuery', (orig) => (target, query) => orig.call(gl, target, objectId(query)));
+    wrap('getQuery', (orig) => (target, pname) => {
         const id = orig.call(gl, target, pname);
         return id ? wrapObject(WebGLQuery, id) : id;
     });
-    wrap('getQueryParameter', orig => (query, pname) => orig.call(gl, objectId(query), pname));
+    wrap('getQueryParameter', (orig) => (query, pname) => orig.call(gl, objectId(query), pname));
     // Samplers
-    wrap('bindSampler', orig => (unit, sampler) => orig.call(gl, unit, objectId(sampler)));
-    wrap('createSampler', orig => () => wrapObject(WebGLSampler, orig.call(gl)));
-    wrap('deleteSampler', orig => sampler => orig.call(gl, objectId(sampler)));
-    wrap('isSampler', orig => sampler => sampler instanceof WebGLSampler && orig.call(gl, sampler.id));
-    wrap(['samplerParameteri', 'samplerParameterf'], orig => (sampler, pname, param) => {
+    wrap('bindSampler', (orig) => (unit, sampler) => orig.call(gl, unit, objectId(sampler)));
+    wrap('createSampler', (orig) => () => wrapObject(WebGLSampler, orig.call(gl)));
+    wrap('deleteSampler', (orig) => (sampler) => orig.call(gl, objectId(sampler)));
+    wrap('isSampler', (orig) => (sampler) => sampler instanceof WebGLSampler && orig.call(gl, sampler.id));
+    wrap(['samplerParameteri', 'samplerParameterf'], (orig) => (sampler, pname, param) => {
         return orig.call(gl, objectId(sampler), pname, param);
     });
-    wrap('getSamplerParameter', orig => (sampler, pname) => {
+    wrap('getSamplerParameter', (orig) => (sampler, pname) => {
         return orig.call(gl, objectId(sampler), pname);
     });
     // Transform feedback
-    wrap('bindTransformFeedback', orig => (target, transformFeedback) => {
+    wrap('bindTransformFeedback', (orig) => (target, transformFeedback) => {
         return orig.call(gl, target, objectId(transformFeedback));
     });
-    wrap('createTransformFeedback', orig => () => wrapObject(WebGLTransformFeedback, orig.call(gl)));
-    wrap('deleteTransformFeedback', orig => transformFeedback => {
+    wrap('createTransformFeedback', (orig) => () => wrapObject(WebGLTransformFeedback, orig.call(gl)));
+    wrap('deleteTransformFeedback', (orig) => (transformFeedback) => {
         return orig.call(gl, objectId(transformFeedback));
     });
-    wrap('transformFeedbackVaryings', orig => (program, varyings, bufferMode) => {
+    wrap('transformFeedbackVaryings', (orig) => (program, varyings, bufferMode) => {
         return orig.call(gl, objectId(program), varyings, bufferMode);
     });
-    wrap('getTransformFeedbackVarying', orig => (program, index) => {
+    wrap('getTransformFeedbackVarying', (orig) => (program, index) => {
         return new WebGLActiveInfo(orig.call(gl, objectId(program), index));
     });
     // Uniforms and attributes
-    wrap(['bindBufferBase', 'bindBufferRange'], orig => (target, index, buffer, ...rest) => {
+    wrap(['bindBufferBase', 'bindBufferRange'], (orig) => (target, index, buffer, ...rest) => {
         return orig.call(gl, target, index, objectId(buffer), ...rest);
     });
-    wrap('getUniformIndices', orig => (program, uniformNames) => {
+    wrap('getUniformIndices', (orig) => (program, uniformNames) => {
         // according to WebGL2 specs, it returns Array instead of Uint32Array
         const uintArray = orig.call(gl, objectId(program), uniformNames);
         return Array.from(uintArray);
     });
-    wrap('getActiveUniforms', orig => (program, uniformIndices, pname) => {
+    wrap('getActiveUniforms', (orig) => (program, uniformIndices, pname) => {
         // according to WebGL2 specs, it returns Array instead of Int32Array
         const intArray = orig.call(gl, objectId(program), new Uint32Array(uniformIndices), pname);
         const boolResult = pname === gl.UNIFORM_IS_ROW_MAJOR;
         const arr = Array.from(intArray);
-        return boolResult ? arr.map(val => !!val) : arr;
+        return boolResult ? arr.map((val) => !!val) : arr;
     });
-    wrap('getUniformBlockIndex', orig => (program, uniformBlockName) => orig.call(gl, objectId(program), uniformBlockName));
-    wrap('getActiveUniformBlockName', orig => (program, uniformBlockIndex) => orig.call(gl, objectId(program), uniformBlockIndex));
-    wrap('uniformBlockBinding', orig => (program, uniformBlockIndex, uniformBlockBinding) => {
+    wrap('getUniformBlockIndex', (orig) => (program, uniformBlockName) => orig.call(gl, objectId(program), uniformBlockName));
+    wrap('getActiveUniformBlockName', (orig) => (program, uniformBlockIndex) => orig.call(gl, objectId(program), uniformBlockIndex));
+    wrap('uniformBlockBinding', (orig) => (program, uniformBlockIndex, uniformBlockBinding) => {
         return orig.call(gl, objectId(program), uniformBlockIndex, uniformBlockBinding);
     });
     // Vertex array objects
-    wrap('bindVertexArray', orig => vertexArray => orig.call(gl, vertexArray && vertexArray.id));
-    wrap('createVertexArray', orig => () => wrapObject(WebGLVertexArrayObject, orig.call(gl)));
-    wrap('deleteVertexArray', orig => vertexArray => orig.call(gl, vertexArray && vertexArray.id));
-    wrap('isVertexArray', orig => vertexArray => vertexArray instanceof WebGLVertexArrayObject && orig.call(gl, vertexArray.id));
+    wrap('bindVertexArray', (orig) => (vertexArray) => orig.call(gl, vertexArray && vertexArray.id));
+    wrap('createVertexArray', (orig) => () => wrapObject(WebGLVertexArrayObject, orig.call(gl)));
+    wrap('deleteVertexArray', (orig) => (vertexArray) => orig.call(gl, vertexArray && vertexArray.id));
+    wrap('isVertexArray', (orig) => (vertexArray) => vertexArray instanceof WebGLVertexArrayObject && orig.call(gl, vertexArray.id));
 };
 // Get the GL interface from an EXGLContextID and do JS-side setup
 const getGl = (exglCtxId) => {
diff --git a/node_modules/expo-gl/build/GLView.js.map b/node_modules/expo-gl/build/GLView.js.map
index cb7fad0..2b64d71 100644
--- a/node_modules/expo-gl/build/GLView.js.map
+++ b/node_modules/expo-gl/build/GLView.js.map
@@ -1 +1 @@
-{"version":3,"file":"GLView.js","sourceRoot":"","sources":["../src/GLView.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  NativeModulesProxy,\n  UnavailabilityError,\n  requireNativeViewManager,\n  CodedError,\n} from '@unimodules/core';\nimport * as React from 'react';\nimport { Platform, View, findNodeHandle } from 'react-native';\n\nimport { configureLogging } from './GLUtils';\nimport {\n  ComponentOrHandle,\n  SurfaceCreateEvent,\n  GLSnapshot,\n  ExpoWebGLRenderingContext,\n  SnapshotOptions,\n  BaseGLViewProps,\n} from './GLView.types';\n\nconst packageJSON = require('../package.json');\n\ndeclare let global: any;\n\nconst { ExponentGLObjectManager, ExponentGLViewManager } = NativeModulesProxy;\n\nexport type GLViewProps = {\n  /**\n   * Called when the OpenGL context is created, with the context object as a parameter. The context\n   * object has an API mirroring WebGL's WebGLRenderingContext.\n   */\n  onContextCreate(gl: ExpoWebGLRenderingContext): void;\n\n  /**\n   * [iOS only] Number of samples for Apple's built-in multisampling.\n   */\n  msaaSamples: number;\n\n  /**\n   * A ref callback for the native GLView\n   */\n  nativeRef_EXPERIMENTAL?(callback: ComponentOrHandle | null);\n} & BaseGLViewProps;\n\nconst NativeView = requireNativeViewManager('ExponentGLView');\n\n/**\n * A component that acts as an OpenGL render target\n */\nexport class GLView extends React.Component<GLViewProps> {\n  static NativeView: any;\n\n  static defaultProps = {\n    msaaSamples: 4,\n  };\n\n  static async createContextAsync(): Promise<ExpoWebGLRenderingContext> {\n    const { exglCtxId } = await ExponentGLObjectManager.createContextAsync();\n    return getGl(exglCtxId);\n  }\n\n  static async destroyContextAsync(exgl?: ExpoWebGLRenderingContext | number): Promise<boolean> {\n    const exglCtxId = getContextId(exgl);\n    return ExponentGLObjectManager.destroyContextAsync(exglCtxId);\n  }\n\n  static async takeSnapshotAsync(\n    exgl?: ExpoWebGLRenderingContext | number,\n    options: SnapshotOptions = {}\n  ): Promise<GLSnapshot> {\n    const exglCtxId = getContextId(exgl);\n    return ExponentGLObjectManager.takeSnapshotAsync(exglCtxId, options);\n  }\n\n  nativeRef: ComponentOrHandle = null;\n  exglCtxId?: number;\n\n  render() {\n    const {\n      onContextCreate, // eslint-disable-line no-unused-vars\n      msaaSamples,\n      ...viewProps\n    } = this.props;\n\n    return (\n      <View {...viewProps}>\n        <NativeView\n          ref={this._setNativeRef}\n          style={{\n            flex: 1,\n            ...(Platform.OS === 'ios'\n              ? {\n                  backgroundColor: 'transparent',\n                }\n              : {}),\n          }}\n          onSurfaceCreate={this._onSurfaceCreate}\n          msaaSamples={Platform.OS === 'ios' ? msaaSamples : undefined}\n        />\n      </View>\n    );\n  }\n\n  _setNativeRef = (nativeRef: ComponentOrHandle): void => {\n    if (this.props.nativeRef_EXPERIMENTAL) {\n      this.props.nativeRef_EXPERIMENTAL(nativeRef);\n    }\n    this.nativeRef = nativeRef;\n  };\n\n  _onSurfaceCreate = ({ nativeEvent: { exglCtxId } }: SurfaceCreateEvent): void => {\n    const gl = getGl(exglCtxId);\n\n    this.exglCtxId = exglCtxId;\n\n    if (this.props.onContextCreate) {\n      this.props.onContextCreate(gl);\n    }\n  };\n\n  async startARSessionAsync(): Promise<any> {\n    if (!ExponentGLViewManager.startARSessionAsync) {\n      throw new UnavailabilityError('expo-gl', 'startARSessionAsync');\n    }\n    return await ExponentGLViewManager.startARSessionAsync(findNodeHandle(this.nativeRef));\n  }\n\n  async createCameraTextureAsync(cameraRefOrHandle: ComponentOrHandle): Promise<WebGLTexture> {\n    if (!ExponentGLObjectManager.createCameraTextureAsync) {\n      throw new UnavailabilityError('expo-gl', 'createCameraTextureAsync');\n    }\n\n    const { exglCtxId } = this;\n\n    if (!exglCtxId) {\n      throw new Error(\"GLView's surface is not created yet!\");\n    }\n\n    const cameraTag = findNodeHandle(cameraRefOrHandle);\n    const { exglObjId } = await ExponentGLObjectManager.createCameraTextureAsync(\n      exglCtxId,\n      cameraTag\n    );\n    return new WebGLTexture(exglObjId);\n  }\n\n  async destroyObjectAsync(glObject: WebGLObject): Promise<boolean> {\n    if (!ExponentGLObjectManager.destroyObjectAsync) {\n      throw new UnavailabilityError('expo-gl', 'destroyObjectAsync');\n    }\n    return await ExponentGLObjectManager.destroyObjectAsync(glObject.id);\n  }\n\n  async takeSnapshotAsync(options: SnapshotOptions = {}): Promise<GLSnapshot> {\n    if (!GLView.takeSnapshotAsync) {\n      throw new UnavailabilityError('expo-gl', 'takeSnapshotAsync');\n    }\n    const { exglCtxId } = this;\n    return await GLView.takeSnapshotAsync(exglCtxId, options);\n  }\n}\n\nGLView.NativeView = NativeView;\n\n// JavaScript WebGL types to wrap around native objects\n\nclass WebGLRenderingContext {\n  __exglCtxId?: number;\n}\n\nclass WebGL2RenderingContext extends WebGLRenderingContext {}\n\ntype WebGLObjectId = any;\n\nconst idToObject = {};\n\nexport class WebGLObject {\n  id: WebGLObjectId;\n\n  constructor(id: WebGLObjectId) {\n    if (idToObject[id]) {\n      throw new Error(`WebGL object with underlying EXGLObjectId '${id}' already exists!`);\n    }\n    this.id = id; // Native GL object id\n  }\n  toString() {\n    return `[${this.constructor.name} ${this.id}]`;\n  }\n}\n\nconst wrapObject = (type, id: WebGLObjectId) => {\n  const found = idToObject[id];\n  if (found) {\n    return found;\n  }\n  return (idToObject[id] = new type(id));\n};\n\nconst objectId = (obj: WebGLObject) => obj && obj.id;\n\nclass WebGLBuffer extends WebGLObject {}\n\nclass WebGLFramebuffer extends WebGLObject {}\n\nclass WebGLProgram extends WebGLObject {}\n\nclass WebGLRenderbuffer extends WebGLObject {}\n\nclass WebGLShader extends WebGLObject {}\n\nclass WebGLTexture extends WebGLObject {}\n\nclass WebGLUniformLocation {\n  id: WebGLObjectId;\n\n  constructor(id: WebGLObjectId) {\n    this.id = id; // Native GL object id\n  }\n\n  toString() {\n    return `[${this.constructor.name} ${this.id}]`;\n  }\n}\n\nclass WebGLActiveInfo {\n  name?: string;\n  size?: number;\n  type?: number;\n\n  constructor(obj) {\n    Object.assign(this, obj);\n  }\n\n  toString() {\n    return `[${this.constructor.name} ${JSON.stringify(this)}]`;\n  }\n}\n\nclass WebGLShaderPrecisionFormat {\n  rangeMin?: number;\n  rangeMax?: number;\n  precision?: number;\n\n  constructor(obj) {\n    Object.assign(this, obj);\n  }\n\n  toString() {\n    return `[${this.constructor.name} ${JSON.stringify(this)}]`;\n  }\n}\n\n// WebGL2 classes\nclass WebGLQuery extends WebGLObject {}\n\nclass WebGLSampler extends WebGLObject {}\n\nclass WebGLSync extends WebGLObject {}\n\nclass WebGLTransformFeedback extends WebGLObject {}\n\nclass WebGLVertexArrayObject extends WebGLObject {}\n\n// Many functions need wrapping/unwrapping of arguments and return value. We handle each case\n// specifically so we can write the tightest code for better performance.\nconst wrapMethods = gl => {\n  const wrap = (methodNames, wrapper) =>\n    (Array.isArray(methodNames) ? methodNames : [methodNames]).forEach(\n      methodName => (gl[methodName] = wrapper(gl[methodName]))\n    );\n\n  // We can be slow in `gl.getParameter(...)` since it's a blocking call anyways\n  const getParameterTypes = {\n    [gl.ARRAY_BUFFER_BINDING]: WebGLBuffer,\n    [gl.COPY_READ_BUFFER_BINDING]: WebGLBuffer,\n    [gl.COPY_WRITE_BUFFER_BINDING]: WebGLBuffer,\n    [gl.CURRENT_PROGRAM]: WebGLProgram,\n    [gl.DRAW_FRAMEBUFFER_BINDING]: WebGLFramebuffer,\n    [gl.ELEMENT_ARRAY_BUFFER_BINDING]: WebGLBuffer,\n    [gl.READ_FRAMEBUFFER_BINDING]: WebGLFramebuffer,\n    [gl.RENDERBUFFER_BINDING]: WebGLRenderbuffer,\n    [gl.SAMPLER_BINDING]: WebGLSampler,\n    [gl.TEXTURE_BINDING_2D_ARRAY]: WebGLTexture,\n    [gl.TEXTURE_BINDING_2D]: WebGLTexture,\n    [gl.TEXTURE_BINDING_3D]: WebGLTexture,\n    [gl.TEXTURE_BINDING_CUBE_MAP]: WebGLTexture,\n    [gl.TRANSFORM_FEEDBACK_BINDING]: WebGLTransformFeedback,\n    [gl.TRANSFORM_FEEDBACK_BUFFER_BINDING]: WebGLBuffer,\n    [gl.UNIFORM_BUFFER_BINDING]: WebGLBuffer,\n    [gl.VERTEX_ARRAY_BINDING]: WebGLVertexArrayObject,\n  };\n  wrap('getParameter', orig => pname => {\n    let ret = orig.call(gl, pname);\n    if (pname === gl.VERSION) {\n      // Wrap native version name\n      ret = `WebGL 2.0 (Expo-${Platform.OS}-${packageJSON.version}) (${ret})`;\n    }\n    const type = getParameterTypes[pname];\n    return type ? wrapObject(type, ret) : ret;\n  });\n\n  // Buffers\n  wrap('bindBuffer', orig => (target, buffer) => orig.call(gl, target, buffer && buffer.id));\n  wrap('createBuffer', orig => () => wrapObject(WebGLBuffer, orig.call(gl)));\n  wrap('deleteBuffer', orig => buffer => orig.call(gl, buffer && buffer.id));\n  wrap('isBuffer', orig => buffer => buffer instanceof WebGLBuffer && orig.call(gl, buffer.id));\n\n  // Framebuffers\n  wrap('bindFramebuffer', orig => (target, framebuffer) =>\n    orig.call(gl, target, framebuffer && framebuffer.id)\n  );\n  wrap('createFramebuffer', orig => () => wrapObject(WebGLFramebuffer, orig.call(gl)));\n  wrap('deleteFramebuffer', orig => framebuffer => orig.call(gl, framebuffer && framebuffer.id));\n  wrap('framebufferRenderbuffer', orig => (target, attachment, rbtarget, rb) =>\n    orig.call(gl, target, attachment, rbtarget, rb && rb.id)\n  );\n  wrap('framebufferTexture2D', orig => (target, attachment, textarget, tex, level) =>\n    orig.call(gl, target, attachment, textarget, tex && tex.id, level)\n  );\n  wrap('isFramebuffer', orig => framebuffer =>\n    framebuffer instanceof WebGLFramebuffer && orig.call(gl, framebuffer.id)\n  );\n  wrap('framebufferTextureLayer', orig => (target, attachment, texture, level, layer) => {\n    return orig.call(gl, target, attachment, objectId(texture), level, layer);\n  });\n\n  // Renderbuffers\n  wrap('bindRenderbuffer', orig => (target, renderbuffer) =>\n    orig.call(gl, target, renderbuffer && renderbuffer.id)\n  );\n  wrap('createRenderbuffer', orig => () => wrapObject(WebGLRenderbuffer, orig.call(gl)));\n  wrap('deleteRenderbuffer', orig => renderbuffer =>\n    orig.call(gl, renderbuffer && renderbuffer.id)\n  );\n  wrap('isRenderbuffer', orig => renderbuffer =>\n    renderbuffer instanceof WebGLRenderbuffer && orig.call(gl, renderbuffer.id)\n  );\n\n  // Textures\n  wrap('bindTexture', orig => (target, texture) => orig.call(gl, target, texture && texture.id));\n  wrap('createTexture', orig => () => wrapObject(WebGLTexture, orig.call(gl)));\n  wrap('deleteTexture', orig => texture => orig.call(gl, texture && texture.id));\n  wrap('isTexture', orig => texture =>\n    texture instanceof WebGLTexture && orig.call(gl, texture.id)\n  );\n\n  // Programs and shaders\n  wrap('attachShader', orig => (program, shader) =>\n    orig.call(gl, program && program.id, shader && shader.id)\n  );\n  wrap('bindAttribLocation', orig => (program, index, name) =>\n    orig.call(gl, program && program.id, index, name)\n  );\n  wrap('compileShader', orig => shader => orig.call(gl, shader && shader.id));\n  wrap('createProgram', orig => () => wrapObject(WebGLProgram, orig.call(gl)));\n  wrap('createShader', orig => type => wrapObject(WebGLShader, orig.call(gl, type)));\n  wrap('deleteProgram', orig => program => orig.call(gl, program && program.id));\n  wrap('deleteShader', orig => shader => orig.call(gl, shader && shader.id));\n  wrap('detachShader', orig => (program, shader) =>\n    orig.call(gl, program && program.id, shader && shader.id)\n  );\n  wrap('getAttachedShaders', orig => program =>\n    orig.call(gl, program && program.id).map(id => wrapObject(WebGLShader, id))\n  );\n  wrap('getProgramParameter', orig => (program, pname) =>\n    orig.call(gl, program && program.id, pname)\n  );\n  wrap('getProgramInfoLog', orig => program => orig.call(gl, program && program.id));\n  wrap('getShaderParameter', orig => (shader, pname) => orig.call(gl, shader && shader.id, pname));\n  wrap('getShaderPrecisionFormat', orig => (shadertype, precisiontype) =>\n    new WebGLShaderPrecisionFormat(orig.call(gl, shadertype, precisiontype))\n  );\n  wrap('getShaderInfoLog', orig => shader => orig.call(gl, shader && shader.id));\n  wrap('getShaderSource', orig => shader => orig.call(gl, shader && shader.id));\n  wrap('linkProgram', orig => program => orig.call(gl, program && program.id));\n  wrap('shaderSource', orig => (shader, source) => orig.call(gl, shader && shader.id, source));\n  wrap('useProgram', orig => program => orig.call(gl, program && program.id));\n  wrap('validateProgram', orig => program => orig.call(gl, program && program.id));\n  wrap('isShader', orig => shader => shader instanceof WebGLShader && orig.call(gl, shader.id));\n  wrap('isProgram', orig => program =>\n    program instanceof WebGLProgram && orig.call(gl, program.id)\n  );\n  wrap('getFragDataLocation', orig => program => orig.call(gl, objectId(program)));\n\n  // Uniforms and attributes\n  wrap('getActiveAttrib', orig => (program, index) =>\n    new WebGLActiveInfo(orig.call(gl, program && program.id, index))\n  );\n  wrap('getActiveUniform', orig => (program, index) =>\n    new WebGLActiveInfo(orig.call(gl, program && program.id, index))\n  );\n  wrap('getAttribLocation', orig => (program, name) => orig.call(gl, program && program.id, name));\n  wrap('getUniform', orig => (program, location) =>\n    orig.call(gl, program && program.id, location && location.id)\n  );\n  wrap('getUniformLocation', orig => (program, name) =>\n    new WebGLUniformLocation(orig.call(gl, program && program.id, name))\n  );\n  wrap(['uniform1f', 'uniform1i', 'uniform1ui'], orig => (loc, x) =>\n    orig.call(gl, objectId(loc), x)\n  );\n  wrap(['uniform2f', 'uniform2i', 'uniform2ui'], orig => (loc, x, y) =>\n    orig.call(gl, objectId(loc), x, y)\n  );\n  wrap(['uniform3f', 'uniform3i', 'uniform3ui'], orig => (loc, x, y, z) =>\n    orig.call(gl, objectId(loc), x, y, z)\n  );\n  wrap(['uniform4f', 'uniform4i', 'uniform4ui'], orig => (loc, x, y, z, w) =>\n    orig.call(gl, objectId(loc), x, y, z, w)\n  );\n  wrap(['uniform1fv', 'uniform2fv', 'uniform3fv', 'uniform4fv'], orig => (loc, val) =>\n    orig.call(gl, objectId(loc), new Float32Array(val))\n  );\n  wrap(['uniform1iv', 'uniform2iv', 'uniform3iv', 'uniform4iv'], orig => (loc, val) =>\n    orig.call(gl, objectId(loc), new Int32Array(val))\n  );\n  wrap(['uniform1uiv', 'uniform2uiv', 'uniform3uiv', 'uniform4uiv'], orig => (loc, val) =>\n    orig.call(gl, objectId(loc), new Uint32Array(val))\n  );\n  wrap(\n    [\n      'uniformMatrix2fv',\n      'uniformMatrix3fv',\n      'uniformMatrix4fv',\n      'uniformMatrix3x2fv',\n      'uniformMatrix4x2fv',\n      'uniformMatrix2x3fv',\n      'uniformMatrix4x3fv',\n      'uniformMatrix2x4fv',\n      'uniformMatrix3x4fv',\n    ],\n    orig => (loc, transpose, val) => orig.call(gl, loc && loc.id, transpose, new Float32Array(val))\n  );\n  wrap(\n    ['vertexAttrib1fv', 'vertexAttrib2fv', 'vertexAttrib3fv', 'vertexAttrib4fv'],\n    orig => (index, val) => orig.call(gl, index, new Float32Array(val))\n  );\n  wrap('vertexAttribI4iv', orig => (index, val) => orig.call(gl, index, new Int32Array(val)));\n  wrap('vertexAttribI4uiv', orig => (index, val) => orig.call(gl, index, new Uint32Array(val)));\n\n  // Query objects\n  wrap('createQuery', orig => () => wrapObject(WebGLQuery, orig.call(gl)));\n  wrap('deleteQuery', orig => query => orig.call(gl, objectId(query)));\n  wrap('beginQuery', orig => (target, query) => orig.call(gl, target, objectId(query)));\n  wrap('getQuery', orig => (target, pname) => {\n    const id = orig.call(gl, target, pname);\n    return id ? wrapObject(WebGLQuery, id) : id;\n  });\n  wrap('getQueryParameter', orig => (query, pname) => orig.call(gl, objectId(query), pname));\n\n  // Samplers\n  wrap('bindSampler', orig => (unit, sampler) => orig.call(gl, unit, objectId(sampler)));\n  wrap('createSampler', orig => () => wrapObject(WebGLSampler, orig.call(gl)));\n  wrap('deleteSampler', orig => sampler => orig.call(gl, objectId(sampler)));\n  wrap('isSampler', orig => sampler =>\n    sampler instanceof WebGLSampler && orig.call(gl, sampler.id)\n  );\n  wrap(['samplerParameteri', 'samplerParameterf'], orig => (sampler, pname, param) => {\n    return orig.call(gl, objectId(sampler), pname, param);\n  });\n  wrap('getSamplerParameter', orig => (sampler, pname) => {\n    return orig.call(gl, objectId(sampler), pname);\n  });\n\n  // Transform feedback\n  wrap('bindTransformFeedback', orig => (target, transformFeedback) => {\n    return orig.call(gl, target, objectId(transformFeedback));\n  });\n  wrap('createTransformFeedback', orig => () => wrapObject(WebGLTransformFeedback, orig.call(gl)));\n  wrap('deleteTransformFeedback', orig => transformFeedback => {\n    return orig.call(gl, objectId(transformFeedback));\n  });\n  wrap('transformFeedbackVaryings', orig => (program, varyings, bufferMode) => {\n    return orig.call(gl, objectId(program), varyings, bufferMode);\n  });\n  wrap('getTransformFeedbackVarying', orig => (program, index) => {\n    return new WebGLActiveInfo(orig.call(gl, objectId(program), index));\n  });\n\n  // Uniforms and attributes\n  wrap(['bindBufferBase', 'bindBufferRange'], orig => (target, index, buffer, ...rest) => {\n    return orig.call(gl, target, index, objectId(buffer), ...rest);\n  });\n  wrap('getUniformIndices', orig => (program, uniformNames) => {\n    // according to WebGL2 specs, it returns Array instead of Uint32Array\n    const uintArray = orig.call(gl, objectId(program), uniformNames);\n    return Array.from(uintArray);\n  });\n  wrap('getActiveUniforms', orig => (program, uniformIndices, pname) => {\n    // according to WebGL2 specs, it returns Array instead of Int32Array\n    const intArray = orig.call(gl, objectId(program), new Uint32Array(uniformIndices), pname);\n    const boolResult = pname === gl.UNIFORM_IS_ROW_MAJOR;\n    const arr = Array.from(intArray);\n    return boolResult ? arr.map(val => !!val) : arr;\n  });\n  wrap('getUniformBlockIndex', orig => (program, uniformBlockName) =>\n    orig.call(gl, objectId(program), uniformBlockName)\n  );\n  wrap('getActiveUniformBlockName', orig => (program, uniformBlockIndex) =>\n    orig.call(gl, objectId(program), uniformBlockIndex)\n  );\n  wrap('uniformBlockBinding', orig => (program, uniformBlockIndex, uniformBlockBinding) => {\n    return orig.call(gl, objectId(program), uniformBlockIndex, uniformBlockBinding);\n  });\n\n  // Vertex array objects\n  wrap('bindVertexArray', orig => vertexArray => orig.call(gl, vertexArray && vertexArray.id));\n  wrap('createVertexArray', orig => () => wrapObject(WebGLVertexArrayObject, orig.call(gl)));\n  wrap('deleteVertexArray', orig => vertexArray => orig.call(gl, vertexArray && vertexArray.id));\n  wrap('isVertexArray', orig => vertexArray =>\n    vertexArray instanceof WebGLVertexArrayObject && orig.call(gl, vertexArray.id)\n  );\n};\n\n// Get the GL interface from an EXGLContextID and do JS-side setup\nconst getGl = (exglCtxId: number): ExpoWebGLRenderingContext => {\n  if (!global.__EXGLContexts) {\n    throw new CodedError(\n      'ERR_GL_NOT_AVAILABLE',\n      'GL is currently not available. (Have you enabled remote debugging? GL is not available while debugging remotely.)'\n    );\n  }\n  const gl = global.__EXGLContexts[exglCtxId];\n  gl.__exglCtxId = exglCtxId;\n  delete global.__EXGLContexts[exglCtxId];\n\n  // determine the prototype to use, depending on OpenGL ES version\n  const glesVersion = gl.getParameter(gl.VERSION);\n  const supportsWebGL2 = parseFloat(glesVersion.split(/[^\\d.]+/g).join(' ')) >= 3.0;\n  const prototype = supportsWebGL2\n    ? global.WebGL2RenderingContext.prototype\n    : global.WebGLRenderingContext.prototype;\n\n  if (Object.setPrototypeOf) {\n    Object.setPrototypeOf(gl, prototype);\n  } else {\n    // Delete this path when we are competely sure we're using modern JSC on Android. iOS 9+\n    // supports Object.setPrototypeOf.\n    gl.__proto__ = prototype; // eslint-disable-line no-proto\n  }\n\n  wrapMethods(gl);\n\n  // No canvas yet...\n  gl.canvas = null;\n\n  // Drawing buffer width/height\n  // TODO(nikki): Make this dynamic\n  const viewport = gl.getParameter(gl.VIEWPORT);\n  gl.drawingBufferWidth = viewport[2];\n  gl.drawingBufferHeight = viewport[3];\n\n  configureLogging(gl);\n\n  return gl;\n};\n\nconst getContextId = (exgl?: ExpoWebGLRenderingContext | number): number => {\n  const exglCtxId = exgl && typeof exgl === 'object' ? exgl.__exglCtxId : exgl;\n\n  if (!exglCtxId || typeof exglCtxId !== 'number') {\n    throw new Error(`Invalid EXGLContext id: ${String(exglCtxId)}`);\n  }\n  return exglCtxId;\n};\n\nglobal.WebGLRenderingContext = WebGLRenderingContext;\nglobal.WebGL2RenderingContext = WebGL2RenderingContext;\nglobal.WebGLObject = WebGLObject;\nglobal.WebGLBuffer = WebGLBuffer;\nglobal.WebGLFramebuffer = WebGLFramebuffer;\nglobal.WebGLProgram = WebGLProgram;\nglobal.WebGLRenderbuffer = WebGLRenderbuffer;\nglobal.WebGLShader = WebGLShader;\nglobal.WebGLTexture = WebGLTexture;\nglobal.WebGLUniformLocation = WebGLUniformLocation;\nglobal.WebGLActiveInfo = WebGLActiveInfo;\nglobal.WebGLShaderPrecisionFormat = WebGLShaderPrecisionFormat;\nglobal.WebGLQuery = WebGLQuery;\nglobal.WebGLSampler = WebGLSampler;\nglobal.WebGLSync = WebGLSync;\nglobal.WebGLTransformFeedback = WebGLTransformFeedback;\nglobal.WebGLVertexArrayObject = WebGLVertexArrayObject;\n"]}
\ No newline at end of file
+{"version":3,"file":"GLView.js","sourceRoot":"","sources":["../src/GLView.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  NativeModulesProxy,\n  UnavailabilityError,\n  requireNativeViewManager,\n  CodedError,\n} from 'expo-modules-core';\nimport * as React from 'react';\nimport { Platform, View, findNodeHandle } from 'react-native';\n\nimport { configureLogging } from './GLUtils';\nimport {\n  ComponentOrHandle,\n  SurfaceCreateEvent,\n  GLSnapshot,\n  ExpoWebGLRenderingContext,\n  SnapshotOptions,\n  BaseGLViewProps,\n} from './GLView.types';\n\nconst packageJSON = require('../package.json');\n\ndeclare let global: any;\n\nconst { ExponentGLObjectManager, ExponentGLViewManager } = NativeModulesProxy;\n\nexport type GLViewProps = {\n  /**\n   * Called when the OpenGL context is created, with the context object as a parameter. The context\n   * object has an API mirroring WebGL's WebGLRenderingContext.\n   */\n  onContextCreate(gl: ExpoWebGLRenderingContext): void;\n\n  /**\n   * [iOS only] Number of samples for Apple's built-in multisampling.\n   */\n  msaaSamples: number;\n\n  /**\n   * A ref callback for the native GLView\n   */\n  nativeRef_EXPERIMENTAL?(callback: ComponentOrHandle | null);\n} & BaseGLViewProps;\n\nconst NativeView = requireNativeViewManager('ExponentGLView');\n\n/**\n * A component that acts as an OpenGL render target\n */\nexport class GLView extends React.Component<GLViewProps> {\n  static NativeView: any;\n\n  static defaultProps = {\n    msaaSamples: 4,\n  };\n\n  static async createContextAsync(): Promise<ExpoWebGLRenderingContext> {\n    const { exglCtxId } = await ExponentGLObjectManager.createContextAsync();\n    return getGl(exglCtxId);\n  }\n\n  static async destroyContextAsync(exgl?: ExpoWebGLRenderingContext | number): Promise<boolean> {\n    const exglCtxId = getContextId(exgl);\n    return ExponentGLObjectManager.destroyContextAsync(exglCtxId);\n  }\n\n  static async takeSnapshotAsync(\n    exgl?: ExpoWebGLRenderingContext | number,\n    options: SnapshotOptions = {}\n  ): Promise<GLSnapshot> {\n    const exglCtxId = getContextId(exgl);\n    return ExponentGLObjectManager.takeSnapshotAsync(exglCtxId, options);\n  }\n\n  nativeRef: ComponentOrHandle = null;\n  exglCtxId?: number;\n\n  render() {\n    const {\n      onContextCreate, // eslint-disable-line no-unused-vars\n      msaaSamples,\n      ...viewProps\n    } = this.props;\n\n    return (\n      <View {...viewProps}>\n        <NativeView\n          ref={this._setNativeRef}\n          style={{\n            flex: 1,\n            ...(Platform.OS === 'ios'\n              ? {\n                  backgroundColor: 'transparent',\n                }\n              : {}),\n          }}\n          onSurfaceCreate={this._onSurfaceCreate}\n          msaaSamples={Platform.OS === 'ios' ? msaaSamples : undefined}\n        />\n      </View>\n    );\n  }\n\n  _setNativeRef = (nativeRef: ComponentOrHandle): void => {\n    if (this.props.nativeRef_EXPERIMENTAL) {\n      this.props.nativeRef_EXPERIMENTAL(nativeRef);\n    }\n    this.nativeRef = nativeRef;\n  };\n\n  _onSurfaceCreate = ({ nativeEvent: { exglCtxId } }: SurfaceCreateEvent): void => {\n    const gl = getGl(exglCtxId);\n\n    this.exglCtxId = exglCtxId;\n\n    if (this.props.onContextCreate) {\n      this.props.onContextCreate(gl);\n    }\n  };\n\n  async startARSessionAsync(): Promise<any> {\n    if (!ExponentGLViewManager.startARSessionAsync) {\n      throw new UnavailabilityError('expo-gl', 'startARSessionAsync');\n    }\n    return await ExponentGLViewManager.startARSessionAsync(findNodeHandle(this.nativeRef));\n  }\n\n  async createCameraTextureAsync(cameraRefOrHandle: ComponentOrHandle): Promise<WebGLTexture> {\n    if (!ExponentGLObjectManager.createCameraTextureAsync) {\n      throw new UnavailabilityError('expo-gl', 'createCameraTextureAsync');\n    }\n\n    const { exglCtxId } = this;\n\n    if (!exglCtxId) {\n      throw new Error(\"GLView's surface is not created yet!\");\n    }\n\n    const cameraTag = findNodeHandle(cameraRefOrHandle);\n    const { exglObjId } = await ExponentGLObjectManager.createCameraTextureAsync(\n      exglCtxId,\n      cameraTag\n    );\n    return new WebGLTexture(exglObjId);\n  }\n\n  async destroyObjectAsync(glObject: WebGLObject): Promise<boolean> {\n    if (!ExponentGLObjectManager.destroyObjectAsync) {\n      throw new UnavailabilityError('expo-gl', 'destroyObjectAsync');\n    }\n    return await ExponentGLObjectManager.destroyObjectAsync(glObject.id);\n  }\n\n  async takeSnapshotAsync(options: SnapshotOptions = {}): Promise<GLSnapshot> {\n    if (!GLView.takeSnapshotAsync) {\n      throw new UnavailabilityError('expo-gl', 'takeSnapshotAsync');\n    }\n    const { exglCtxId } = this;\n    return await GLView.takeSnapshotAsync(exglCtxId, options);\n  }\n}\n\nGLView.NativeView = NativeView;\n\n// JavaScript WebGL types to wrap around native objects\n\nclass WebGLRenderingContext {\n  __exglCtxId?: number;\n}\n\nclass WebGL2RenderingContext extends WebGLRenderingContext {}\n\ntype WebGLObjectId = any;\n\nconst idToObject = {};\n\nexport class WebGLObject {\n  id: WebGLObjectId;\n\n  constructor(id: WebGLObjectId) {\n    if (idToObject[id]) {\n      throw new Error(`WebGL object with underlying EXGLObjectId '${id}' already exists!`);\n    }\n    this.id = id; // Native GL object id\n  }\n  toString() {\n    return `[${this.constructor.name} ${this.id}]`;\n  }\n}\n\nconst wrapObject = (type, id: WebGLObjectId) => {\n  const found = idToObject[id];\n  if (found) {\n    return found;\n  }\n  return (idToObject[id] = new type(id));\n};\n\nconst objectId = (obj: WebGLObject) => obj && obj.id;\n\nclass WebGLBuffer extends WebGLObject {}\n\nclass WebGLFramebuffer extends WebGLObject {}\n\nclass WebGLProgram extends WebGLObject {}\n\nclass WebGLRenderbuffer extends WebGLObject {}\n\nclass WebGLShader extends WebGLObject {}\n\nclass WebGLTexture extends WebGLObject {}\n\nclass WebGLUniformLocation {\n  id: WebGLObjectId;\n\n  constructor(id: WebGLObjectId) {\n    this.id = id; // Native GL object id\n  }\n\n  toString() {\n    return `[${this.constructor.name} ${this.id}]`;\n  }\n}\n\nclass WebGLActiveInfo {\n  name?: string;\n  size?: number;\n  type?: number;\n\n  constructor(obj) {\n    Object.assign(this, obj);\n  }\n\n  toString() {\n    return `[${this.constructor.name} ${JSON.stringify(this)}]`;\n  }\n}\n\nclass WebGLShaderPrecisionFormat {\n  rangeMin?: number;\n  rangeMax?: number;\n  precision?: number;\n\n  constructor(obj) {\n    Object.assign(this, obj);\n  }\n\n  toString() {\n    return `[${this.constructor.name} ${JSON.stringify(this)}]`;\n  }\n}\n\n// WebGL2 classes\nclass WebGLQuery extends WebGLObject {}\n\nclass WebGLSampler extends WebGLObject {}\n\nclass WebGLSync extends WebGLObject {}\n\nclass WebGLTransformFeedback extends WebGLObject {}\n\nclass WebGLVertexArrayObject extends WebGLObject {}\n\n// Many functions need wrapping/unwrapping of arguments and return value. We handle each case\n// specifically so we can write the tightest code for better performance.\nconst wrapMethods = (gl) => {\n  const wrap = (methodNames, wrapper) =>\n    (Array.isArray(methodNames) ? methodNames : [methodNames]).forEach(\n      (methodName) => (gl[methodName] = wrapper(gl[methodName]))\n    );\n\n  // We can be slow in `gl.getParameter(...)` since it's a blocking call anyways\n  const getParameterTypes = {\n    [gl.ARRAY_BUFFER_BINDING]: WebGLBuffer,\n    [gl.COPY_READ_BUFFER_BINDING]: WebGLBuffer,\n    [gl.COPY_WRITE_BUFFER_BINDING]: WebGLBuffer,\n    [gl.CURRENT_PROGRAM]: WebGLProgram,\n    [gl.DRAW_FRAMEBUFFER_BINDING]: WebGLFramebuffer,\n    [gl.ELEMENT_ARRAY_BUFFER_BINDING]: WebGLBuffer,\n    [gl.READ_FRAMEBUFFER_BINDING]: WebGLFramebuffer,\n    [gl.RENDERBUFFER_BINDING]: WebGLRenderbuffer,\n    [gl.SAMPLER_BINDING]: WebGLSampler,\n    [gl.TEXTURE_BINDING_2D_ARRAY]: WebGLTexture,\n    [gl.TEXTURE_BINDING_2D]: WebGLTexture,\n    [gl.TEXTURE_BINDING_3D]: WebGLTexture,\n    [gl.TEXTURE_BINDING_CUBE_MAP]: WebGLTexture,\n    [gl.TRANSFORM_FEEDBACK_BINDING]: WebGLTransformFeedback,\n    [gl.TRANSFORM_FEEDBACK_BUFFER_BINDING]: WebGLBuffer,\n    [gl.UNIFORM_BUFFER_BINDING]: WebGLBuffer,\n    [gl.VERTEX_ARRAY_BINDING]: WebGLVertexArrayObject,\n  };\n  wrap('getParameter', (orig) => (pname) => {\n    let ret = orig.call(gl, pname);\n    if (pname === gl.VERSION) {\n      // Wrap native version name\n      ret = `WebGL 2.0 (Expo-${Platform.OS}-${packageJSON.version}) (${ret})`;\n    }\n    const type = getParameterTypes[pname];\n    return type ? wrapObject(type, ret) : ret;\n  });\n\n  // Buffers\n  wrap('bindBuffer', (orig) => (target, buffer) => orig.call(gl, target, buffer && buffer.id));\n  wrap('createBuffer', (orig) => () => wrapObject(WebGLBuffer, orig.call(gl)));\n  wrap('deleteBuffer', (orig) => (buffer) => orig.call(gl, buffer && buffer.id));\n  wrap('isBuffer', (orig) => (buffer) => buffer instanceof WebGLBuffer && orig.call(gl, buffer.id));\n\n  // Framebuffers\n  wrap(\n    'bindFramebuffer',\n    (orig) => (target, framebuffer) => orig.call(gl, target, framebuffer && framebuffer.id)\n  );\n  wrap('createFramebuffer', (orig) => () => wrapObject(WebGLFramebuffer, orig.call(gl)));\n  wrap(\n    'deleteFramebuffer',\n    (orig) => (framebuffer) => orig.call(gl, framebuffer && framebuffer.id)\n  );\n  wrap(\n    'framebufferRenderbuffer',\n    (orig) => (target, attachment, rbtarget, rb) =>\n      orig.call(gl, target, attachment, rbtarget, rb && rb.id)\n  );\n  wrap(\n    'framebufferTexture2D',\n    (orig) => (target, attachment, textarget, tex, level) =>\n      orig.call(gl, target, attachment, textarget, tex && tex.id, level)\n  );\n  wrap(\n    'isFramebuffer',\n    (orig) => (framebuffer) =>\n      framebuffer instanceof WebGLFramebuffer && orig.call(gl, framebuffer.id)\n  );\n  wrap('framebufferTextureLayer', (orig) => (target, attachment, texture, level, layer) => {\n    return orig.call(gl, target, attachment, objectId(texture), level, layer);\n  });\n\n  // Renderbuffers\n  wrap(\n    'bindRenderbuffer',\n    (orig) => (target, renderbuffer) => orig.call(gl, target, renderbuffer && renderbuffer.id)\n  );\n  wrap('createRenderbuffer', (orig) => () => wrapObject(WebGLRenderbuffer, orig.call(gl)));\n  wrap(\n    'deleteRenderbuffer',\n    (orig) => (renderbuffer) => orig.call(gl, renderbuffer && renderbuffer.id)\n  );\n  wrap(\n    'isRenderbuffer',\n    (orig) => (renderbuffer) =>\n      renderbuffer instanceof WebGLRenderbuffer && orig.call(gl, renderbuffer.id)\n  );\n\n  // Textures\n  wrap('bindTexture', (orig) => (target, texture) => orig.call(gl, target, texture && texture.id));\n  wrap('createTexture', (orig) => () => wrapObject(WebGLTexture, orig.call(gl)));\n  wrap('deleteTexture', (orig) => (texture) => orig.call(gl, texture && texture.id));\n  wrap(\n    'isTexture',\n    (orig) => (texture) => texture instanceof WebGLTexture && orig.call(gl, texture.id)\n  );\n\n  // Programs and shaders\n  wrap(\n    'attachShader',\n    (orig) => (program, shader) => orig.call(gl, program && program.id, shader && shader.id)\n  );\n  wrap(\n    'bindAttribLocation',\n    (orig) => (program, index, name) => orig.call(gl, program && program.id, index, name)\n  );\n  wrap('compileShader', (orig) => (shader) => orig.call(gl, shader && shader.id));\n  wrap('createProgram', (orig) => () => wrapObject(WebGLProgram, orig.call(gl)));\n  wrap('createShader', (orig) => (type) => wrapObject(WebGLShader, orig.call(gl, type)));\n  wrap('deleteProgram', (orig) => (program) => orig.call(gl, program && program.id));\n  wrap('deleteShader', (orig) => (shader) => orig.call(gl, shader && shader.id));\n  wrap(\n    'detachShader',\n    (orig) => (program, shader) => orig.call(gl, program && program.id, shader && shader.id)\n  );\n  wrap(\n    'getAttachedShaders',\n    (orig) => (program) =>\n      orig.call(gl, program && program.id).map((id) => wrapObject(WebGLShader, id))\n  );\n  wrap(\n    'getProgramParameter',\n    (orig) => (program, pname) => orig.call(gl, program && program.id, pname)\n  );\n  wrap('getProgramInfoLog', (orig) => (program) => orig.call(gl, program && program.id));\n  wrap(\n    'getShaderParameter',\n    (orig) => (shader, pname) => orig.call(gl, shader && shader.id, pname)\n  );\n  wrap(\n    'getShaderPrecisionFormat',\n    (orig) => (shadertype, precisiontype) =>\n      new WebGLShaderPrecisionFormat(orig.call(gl, shadertype, precisiontype))\n  );\n  wrap('getShaderInfoLog', (orig) => (shader) => orig.call(gl, shader && shader.id));\n  wrap('getShaderSource', (orig) => (shader) => orig.call(gl, shader && shader.id));\n  wrap('linkProgram', (orig) => (program) => orig.call(gl, program && program.id));\n  wrap('shaderSource', (orig) => (shader, source) => orig.call(gl, shader && shader.id, source));\n  wrap('useProgram', (orig) => (program) => orig.call(gl, program && program.id));\n  wrap('validateProgram', (orig) => (program) => orig.call(gl, program && program.id));\n  wrap('isShader', (orig) => (shader) => shader instanceof WebGLShader && orig.call(gl, shader.id));\n  wrap(\n    'isProgram',\n    (orig) => (program) => program instanceof WebGLProgram && orig.call(gl, program.id)\n  );\n  wrap('getFragDataLocation', (orig) => (program) => orig.call(gl, objectId(program)));\n\n  // Uniforms and attributes\n  wrap(\n    'getActiveAttrib',\n    (orig) => (program, index) => new WebGLActiveInfo(orig.call(gl, program && program.id, index))\n  );\n  wrap(\n    'getActiveUniform',\n    (orig) => (program, index) => new WebGLActiveInfo(orig.call(gl, program && program.id, index))\n  );\n  wrap(\n    'getAttribLocation',\n    (orig) => (program, name) => orig.call(gl, program && program.id, name)\n  );\n  wrap(\n    'getUniform',\n    (orig) => (program, location) => orig.call(gl, program && program.id, location && location.id)\n  );\n  wrap(\n    'getUniformLocation',\n    (orig) => (program, name) =>\n      new WebGLUniformLocation(orig.call(gl, program && program.id, name))\n  );\n  wrap(\n    ['uniform1f', 'uniform1i', 'uniform1ui'],\n    (orig) => (loc, x) => orig.call(gl, objectId(loc), x)\n  );\n  wrap(\n    ['uniform2f', 'uniform2i', 'uniform2ui'],\n    (orig) => (loc, x, y) => orig.call(gl, objectId(loc), x, y)\n  );\n  wrap(\n    ['uniform3f', 'uniform3i', 'uniform3ui'],\n    (orig) => (loc, x, y, z) => orig.call(gl, objectId(loc), x, y, z)\n  );\n  wrap(\n    ['uniform4f', 'uniform4i', 'uniform4ui'],\n    (orig) => (loc, x, y, z, w) => orig.call(gl, objectId(loc), x, y, z, w)\n  );\n  wrap(\n    ['uniform1fv', 'uniform2fv', 'uniform3fv', 'uniform4fv'],\n    (orig) => (loc, val) => orig.call(gl, objectId(loc), new Float32Array(val))\n  );\n  wrap(\n    ['uniform1iv', 'uniform2iv', 'uniform3iv', 'uniform4iv'],\n    (orig) => (loc, val) => orig.call(gl, objectId(loc), new Int32Array(val))\n  );\n  wrap(\n    ['uniform1uiv', 'uniform2uiv', 'uniform3uiv', 'uniform4uiv'],\n    (orig) => (loc, val) => orig.call(gl, objectId(loc), new Uint32Array(val))\n  );\n  wrap(\n    [\n      'uniformMatrix2fv',\n      'uniformMatrix3fv',\n      'uniformMatrix4fv',\n      'uniformMatrix3x2fv',\n      'uniformMatrix4x2fv',\n      'uniformMatrix2x3fv',\n      'uniformMatrix4x3fv',\n      'uniformMatrix2x4fv',\n      'uniformMatrix3x4fv',\n    ],\n    (orig) => (loc, transpose, val) =>\n      orig.call(gl, loc && loc.id, transpose, new Float32Array(val))\n  );\n  wrap(\n    ['vertexAttrib1fv', 'vertexAttrib2fv', 'vertexAttrib3fv', 'vertexAttrib4fv'],\n    (orig) => (index, val) => orig.call(gl, index, new Float32Array(val))\n  );\n  wrap('vertexAttribI4iv', (orig) => (index, val) => orig.call(gl, index, new Int32Array(val)));\n  wrap('vertexAttribI4uiv', (orig) => (index, val) => orig.call(gl, index, new Uint32Array(val)));\n\n  // Query objects\n  wrap('createQuery', (orig) => () => wrapObject(WebGLQuery, orig.call(gl)));\n  wrap('deleteQuery', (orig) => (query) => orig.call(gl, objectId(query)));\n  wrap('beginQuery', (orig) => (target, query) => orig.call(gl, target, objectId(query)));\n  wrap('getQuery', (orig) => (target, pname) => {\n    const id = orig.call(gl, target, pname);\n    return id ? wrapObject(WebGLQuery, id) : id;\n  });\n  wrap('getQueryParameter', (orig) => (query, pname) => orig.call(gl, objectId(query), pname));\n\n  // Samplers\n  wrap('bindSampler', (orig) => (unit, sampler) => orig.call(gl, unit, objectId(sampler)));\n  wrap('createSampler', (orig) => () => wrapObject(WebGLSampler, orig.call(gl)));\n  wrap('deleteSampler', (orig) => (sampler) => orig.call(gl, objectId(sampler)));\n  wrap(\n    'isSampler',\n    (orig) => (sampler) => sampler instanceof WebGLSampler && orig.call(gl, sampler.id)\n  );\n  wrap(['samplerParameteri', 'samplerParameterf'], (orig) => (sampler, pname, param) => {\n    return orig.call(gl, objectId(sampler), pname, param);\n  });\n  wrap('getSamplerParameter', (orig) => (sampler, pname) => {\n    return orig.call(gl, objectId(sampler), pname);\n  });\n\n  // Transform feedback\n  wrap('bindTransformFeedback', (orig) => (target, transformFeedback) => {\n    return orig.call(gl, target, objectId(transformFeedback));\n  });\n  wrap(\n    'createTransformFeedback',\n    (orig) => () => wrapObject(WebGLTransformFeedback, orig.call(gl))\n  );\n  wrap('deleteTransformFeedback', (orig) => (transformFeedback) => {\n    return orig.call(gl, objectId(transformFeedback));\n  });\n  wrap('transformFeedbackVaryings', (orig) => (program, varyings, bufferMode) => {\n    return orig.call(gl, objectId(program), varyings, bufferMode);\n  });\n  wrap('getTransformFeedbackVarying', (orig) => (program, index) => {\n    return new WebGLActiveInfo(orig.call(gl, objectId(program), index));\n  });\n\n  // Uniforms and attributes\n  wrap(['bindBufferBase', 'bindBufferRange'], (orig) => (target, index, buffer, ...rest) => {\n    return orig.call(gl, target, index, objectId(buffer), ...rest);\n  });\n  wrap('getUniformIndices', (orig) => (program, uniformNames) => {\n    // according to WebGL2 specs, it returns Array instead of Uint32Array\n    const uintArray = orig.call(gl, objectId(program), uniformNames);\n    return Array.from(uintArray);\n  });\n  wrap('getActiveUniforms', (orig) => (program, uniformIndices, pname) => {\n    // according to WebGL2 specs, it returns Array instead of Int32Array\n    const intArray = orig.call(gl, objectId(program), new Uint32Array(uniformIndices), pname);\n    const boolResult = pname === gl.UNIFORM_IS_ROW_MAJOR;\n    const arr = Array.from(intArray);\n    return boolResult ? arr.map((val) => !!val) : arr;\n  });\n  wrap(\n    'getUniformBlockIndex',\n    (orig) => (program, uniformBlockName) => orig.call(gl, objectId(program), uniformBlockName)\n  );\n  wrap(\n    'getActiveUniformBlockName',\n    (orig) => (program, uniformBlockIndex) => orig.call(gl, objectId(program), uniformBlockIndex)\n  );\n  wrap('uniformBlockBinding', (orig) => (program, uniformBlockIndex, uniformBlockBinding) => {\n    return orig.call(gl, objectId(program), uniformBlockIndex, uniformBlockBinding);\n  });\n\n  // Vertex array objects\n  wrap('bindVertexArray', (orig) => (vertexArray) => orig.call(gl, vertexArray && vertexArray.id));\n  wrap('createVertexArray', (orig) => () => wrapObject(WebGLVertexArrayObject, orig.call(gl)));\n  wrap(\n    'deleteVertexArray',\n    (orig) => (vertexArray) => orig.call(gl, vertexArray && vertexArray.id)\n  );\n  wrap(\n    'isVertexArray',\n    (orig) => (vertexArray) =>\n      vertexArray instanceof WebGLVertexArrayObject && orig.call(gl, vertexArray.id)\n  );\n};\n\n// Get the GL interface from an EXGLContextID and do JS-side setup\nconst getGl = (exglCtxId: number): ExpoWebGLRenderingContext => {\n  if (!global.__EXGLContexts) {\n    throw new CodedError(\n      'ERR_GL_NOT_AVAILABLE',\n      'GL is currently not available. (Have you enabled remote debugging? GL is not available while debugging remotely.)'\n    );\n  }\n  const gl = global.__EXGLContexts[exglCtxId];\n  gl.__exglCtxId = exglCtxId;\n  delete global.__EXGLContexts[exglCtxId];\n\n  // determine the prototype to use, depending on OpenGL ES version\n  const glesVersion = gl.getParameter(gl.VERSION);\n  const supportsWebGL2 = parseFloat(glesVersion.split(/[^\\d.]+/g).join(' ')) >= 3.0;\n  const prototype = supportsWebGL2\n    ? global.WebGL2RenderingContext.prototype\n    : global.WebGLRenderingContext.prototype;\n\n  if (Object.setPrototypeOf) {\n    Object.setPrototypeOf(gl, prototype);\n  } else {\n    // Delete this path when we are competely sure we're using modern JSC on Android. iOS 9+\n    // supports Object.setPrototypeOf.\n    gl.__proto__ = prototype; // eslint-disable-line no-proto\n  }\n\n  wrapMethods(gl);\n\n  // No canvas yet...\n  gl.canvas = null;\n\n  // Drawing buffer width/height\n  // TODO(nikki): Make this dynamic\n  const viewport = gl.getParameter(gl.VIEWPORT);\n  gl.drawingBufferWidth = viewport[2];\n  gl.drawingBufferHeight = viewport[3];\n\n  configureLogging(gl);\n\n  return gl;\n};\n\nconst getContextId = (exgl?: ExpoWebGLRenderingContext | number): number => {\n  const exglCtxId = exgl && typeof exgl === 'object' ? exgl.__exglCtxId : exgl;\n\n  if (!exglCtxId || typeof exglCtxId !== 'number') {\n    throw new Error(`Invalid EXGLContext id: ${String(exglCtxId)}`);\n  }\n  return exglCtxId;\n};\n\nglobal.WebGLRenderingContext = WebGLRenderingContext;\nglobal.WebGL2RenderingContext = WebGL2RenderingContext;\nglobal.WebGLObject = WebGLObject;\nglobal.WebGLBuffer = WebGLBuffer;\nglobal.WebGLFramebuffer = WebGLFramebuffer;\nglobal.WebGLProgram = WebGLProgram;\nglobal.WebGLRenderbuffer = WebGLRenderbuffer;\nglobal.WebGLShader = WebGLShader;\nglobal.WebGLTexture = WebGLTexture;\nglobal.WebGLUniformLocation = WebGLUniformLocation;\nglobal.WebGLActiveInfo = WebGLActiveInfo;\nglobal.WebGLShaderPrecisionFormat = WebGLShaderPrecisionFormat;\nglobal.WebGLQuery = WebGLQuery;\nglobal.WebGLSampler = WebGLSampler;\nglobal.WebGLSync = WebGLSync;\nglobal.WebGLTransformFeedback = WebGLTransformFeedback;\nglobal.WebGLVertexArrayObject = WebGLVertexArrayObject;\n"]}
\ No newline at end of file
diff --git a/node_modules/expo-gl/build/GLView.web.d.ts b/node_modules/expo-gl/build/GLView.web.d.ts
index 9893595..46a018f 100644
--- a/node_modules/expo-gl/build/GLView.web.d.ts
+++ b/node_modules/expo-gl/build/GLView.web.d.ts
@@ -1,4 +1,5 @@
 import * as React from 'react';
+import { WebGLObject } from './GLView';
 import { BaseGLViewProps, ComponentOrHandle, GLSnapshot, SnapshotOptions } from './GLView.types';
 export interface GLViewProps extends BaseGLViewProps {
     onContextCreate: (gl: WebGLRenderingContext) => void;
diff --git a/node_modules/expo-gl/build/GLView.web.js b/node_modules/expo-gl/build/GLView.web.js
index e3b9c96..aef872e 100644
--- a/node_modules/expo-gl/build/GLView.web.js
+++ b/node_modules/expo-gl/build/GLView.web.js
@@ -1,4 +1,4 @@
-import { CodedError, Platform, UnavailabilityError } from '@unimodules/core';
+import { CodedError, Platform, UnavailabilityError } from 'expo-modules-core';
 import invariant from 'invariant';
 import * as React from 'react';
 import { Dimensions } from 'react-native';
@@ -60,7 +60,7 @@ async function getBlobFromWebGLRenderingContext(gl, options = {}) {
         blob = await canvas.convertToBlob({ quality: options.compress, type: options.format });
     }
     else {
-        blob = await new Promise(resolve => {
+        blob = await new Promise((resolve) => {
             canvas.toBlob((blob) => resolve(blob), options.format, options.compress);
         });
     }
@@ -71,35 +71,8 @@ async function getBlobFromWebGLRenderingContext(gl, options = {}) {
     };
 }
 export class GLView extends React.Component {
-    constructor() {
-        super(...arguments);
-        this.onContextLost = (event) => {
-            if (event && event.preventDefault) {
-                event.preventDefault();
-            }
-            this.gl = undefined;
-            if (typeof this.props.onContextLost === 'function') {
-                this.props.onContextLost();
-            }
-        };
-        this.onContextRestored = () => {
-            this.gl = undefined;
-            if (this.getGLContext() == null) {
-                throw new CodedError('ERR_GL_INVALID', 'Failed to restore GL context.');
-            }
-        };
-        this.setCanvasRef = (canvas) => {
-            this.canvas = canvas;
-            if (typeof this.props.nativeRef_EXPERIMENTAL === 'function') {
-                this.props.nativeRef_EXPERIMENTAL(canvas);
-            }
-            if (this.canvas) {
-                this.canvas.addEventListener('webglcontextlost', this.onContextLost);
-                this.canvas.addEventListener('webglcontextrestored', this.onContextRestored);
-                this.getGLContext();
-            }
-        };
-    }
+    canvas;
+    gl;
     static async createContextAsync() {
         if (!Platform.isDOMAvailable) {
             return null;
@@ -143,7 +116,7 @@ export class GLView extends React.Component {
         const { onContextCreate, onContextRestored, onContextLost, webglContextAttributes, msaaSamples, nativeRef_EXPERIMENTAL, 
         // @ts-ignore: ref does not exist
         ref, ...domProps } = this.props;
-        return React.createElement(Canvas, Object.assign({}, domProps, { canvasRef: this.setCanvasRef }));
+        return React.createElement(Canvas, { ...domProps, canvasRef: this.setCanvasRef });
     }
     componentDidUpdate(prevProps) {
         const { webglContextAttributes } = this.props;
@@ -159,6 +132,21 @@ export class GLView extends React.Component {
         }
         return gl;
     }
+    onContextLost = (event) => {
+        if (event && event.preventDefault) {
+            event.preventDefault();
+        }
+        this.gl = undefined;
+        if (typeof this.props.onContextLost === 'function') {
+            this.props.onContextLost();
+        }
+    };
+    onContextRestored = () => {
+        this.gl = undefined;
+        if (this.getGLContext() == null) {
+            throw new CodedError('ERR_GL_INVALID', 'Failed to restore GL context.');
+        }
+    };
     getGLContext() {
         if (this.gl)
             return this.gl;
@@ -171,6 +159,17 @@ export class GLView extends React.Component {
         }
         return null;
     }
+    setCanvasRef = (canvas) => {
+        this.canvas = canvas;
+        if (typeof this.props.nativeRef_EXPERIMENTAL === 'function') {
+            this.props.nativeRef_EXPERIMENTAL(canvas);
+        }
+        if (this.canvas) {
+            this.canvas.addEventListener('webglcontextlost', this.onContextLost);
+            this.canvas.addEventListener('webglcontextrestored', this.onContextRestored);
+            this.getGLContext();
+        }
+    };
     async takeSnapshotAsync(options = {}) {
         if (!GLView.takeSnapshotAsync) {
             throw new UnavailabilityError('expo-gl', 'takeSnapshotAsync');
diff --git a/node_modules/expo-gl/build/GLView.web.js.map b/node_modules/expo-gl/build/GLView.web.js.map
index 47d8209..93bf783 100644
--- a/node_modules/expo-gl/build/GLView.web.js.map
+++ b/node_modules/expo-gl/build/GLView.web.js.map
@@ -1 +1 @@
-{"version":3,"file":"GLView.web.js","sourceRoot":"","sources":["../src/GLView.web.tsx"],"names":[],"mappings":"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","sourcesContent":["import { CodedError, Platform, UnavailabilityError } from '@unimodules/core';\nimport invariant from 'invariant';\nimport * as React from 'react';\nimport { Dimensions } from 'react-native';\n\nimport Canvas from './Canvas';\nimport {\n  BaseGLViewProps,\n  ComponentOrHandle,\n  ExpoWebGLRenderingContext,\n  GLSnapshot,\n  SnapshotOptions,\n} from './GLView.types';\n\nfunction getImageForAsset(asset: {\n  downloadAsync: () => Promise<any>;\n  uri?: string;\n  localUri?: string;\n}): HTMLImageElement | any {\n  if (asset != null && typeof asset === 'object' && asset !== null && asset.downloadAsync) {\n    const dataURI = asset.localUri || asset.uri || '';\n    const image = new Image();\n    image.src = dataURI;\n    return image;\n  }\n  return asset;\n}\n\nfunction isOffscreenCanvas(element: any): element is OffscreenCanvas {\n  return element && typeof element.convertToBlob === 'function';\n}\n\nfunction asExpoContext(gl: ExpoWebGLRenderingContext): WebGLRenderingContext {\n  gl.endFrameEXP = function glEndFrameEXP(): void {};\n\n  if (!gl['_expo_texImage2D']) {\n    gl['_expo_texImage2D'] = gl.texImage2D;\n    gl.texImage2D = (...props: any[]): any => {\n      const nextProps = [...props];\n      nextProps.push(getImageForAsset(nextProps.pop()));\n      return gl['_expo_texImage2D'](...nextProps);\n    };\n  }\n\n  if (!gl['_expo_texSubImage2D']) {\n    gl['_expo_texSubImage2D'] = gl.texSubImage2D;\n    gl.texSubImage2D = (...props: any[]): any => {\n      const nextProps = [...props];\n      nextProps.push(getImageForAsset(nextProps.pop()));\n      return gl['_expo_texSubImage2D'](...nextProps);\n    };\n  }\n\n  return gl;\n}\n\nfunction ensureContext(\n  canvas?: HTMLCanvasElement,\n  contextAttributes?: WebGLContextAttributes\n): WebGLRenderingContext {\n  if (!canvas) {\n    throw new CodedError(\n      'ERR_GL_INVALID',\n      'Attempting to use the GL context before it has been created.'\n    );\n  }\n\n  // Apple disables WebGL 2.0 and doesn't provide any way to detect if it's disabled.\n  const isIOS = !!navigator.platform && /iPad|iPhone|iPod/.test(navigator.platform);\n\n  const context =\n    (!isIOS && canvas.getContext('webgl2', contextAttributes)) ||\n    canvas.getContext('webgl', contextAttributes) ||\n    canvas.getContext('webgl-experimental', contextAttributes) ||\n    canvas.getContext('experimental-webgl', contextAttributes);\n  invariant(context, 'Browser does not support WebGL');\n  return asExpoContext(context as ExpoWebGLRenderingContext);\n}\n\nexport interface GLViewProps extends BaseGLViewProps {\n  onContextCreate: (gl: WebGLRenderingContext) => void;\n  onContextRestored?: (gl?: WebGLRenderingContext) => void;\n  onContextLost?: () => void;\n  webglContextAttributes?: WebGLContextAttributes;\n  /**\n   * [iOS only] Number of samples for Apple's built-in multisampling.\n   */\n  msaaSamples: number;\n\n  /**\n   * A ref callback for the native GLView\n   */\n  nativeRef_EXPERIMENTAL?(callback: ComponentOrHandle | HTMLCanvasElement | null);\n}\n\nasync function getBlobFromWebGLRenderingContext(\n  gl: WebGLRenderingContext,\n  options: SnapshotOptions = {}\n): Promise<{ width: number; height: number; blob: Blob | null }> {\n  invariant(gl, 'getBlobFromWebGLRenderingContext(): WebGL Rendering Context is not defined');\n\n  const { canvas } = gl;\n\n  let blob: Blob | null = null;\n\n  if (typeof (canvas as any).msToBlob === 'function') {\n    // @ts-ignore: polyfill: https://stackoverflow.com/a/29815058/4047926\n    blob = await canvas.msToBlob();\n  } else if (isOffscreenCanvas(canvas)) {\n    blob = await canvas.convertToBlob({ quality: options.compress, type: options.format });\n  } else {\n    blob = await new Promise(resolve => {\n      canvas.toBlob((blob: Blob | null) => resolve(blob), options.format, options.compress);\n    });\n  }\n\n  return {\n    blob,\n    width: canvas.width,\n    height: canvas.height,\n  };\n}\n\nexport class GLView extends React.Component<GLViewProps> {\n  canvas?: HTMLCanvasElement;\n\n  gl?: WebGLRenderingContext;\n\n  static async createContextAsync(): Promise<WebGLRenderingContext | null> {\n    if (!Platform.isDOMAvailable) {\n      return null;\n    }\n    const canvas = document.createElement('canvas');\n    const { width, height, scale } = Dimensions.get('window');\n    canvas.width = width * scale;\n    canvas.height = height * scale;\n    return ensureContext(canvas);\n  }\n\n  static async destroyContextAsync(exgl?: WebGLRenderingContext | number): Promise<boolean> {\n    // Do nothing\n    return true;\n  }\n\n  static async takeSnapshotAsync(\n    gl: WebGLRenderingContext,\n    options: SnapshotOptions = {}\n  ): Promise<GLSnapshot> {\n    const { blob, width, height } = await getBlobFromWebGLRenderingContext(gl, options);\n\n    if (!blob) {\n      throw new CodedError('ERR_GL_SNAPSHOT', 'Failed to save the GL context');\n    }\n\n    return {\n      uri: blob,\n      localUri: '',\n      width,\n      height,\n    };\n  }\n\n  componentWillUnmount() {\n    if (this.gl) {\n      const loseContextExt = this.gl.getExtension('WEBGL_lose_context');\n      if (loseContextExt) {\n        loseContextExt.loseContext();\n      }\n      this.gl = undefined;\n    }\n    if (this.canvas) {\n      this.canvas.removeEventListener('webglcontextlost', this.onContextLost);\n      this.canvas.removeEventListener('webglcontextrestored', this.onContextRestored);\n    }\n  }\n\n  render() {\n    const {\n      onContextCreate,\n      onContextRestored,\n      onContextLost,\n      webglContextAttributes,\n      msaaSamples,\n      nativeRef_EXPERIMENTAL,\n      // @ts-ignore: ref does not exist\n      ref,\n      ...domProps\n    } = this.props;\n\n    return <Canvas {...domProps} canvasRef={this.setCanvasRef} />;\n  }\n\n  componentDidUpdate(prevProps: GLViewProps) {\n    const { webglContextAttributes } = this.props;\n    if (this.canvas && webglContextAttributes !== prevProps.webglContextAttributes) {\n      this.onContextLost(null);\n      this.onContextRestored();\n    }\n  }\n\n  private getGLContextOrReject(): WebGLRenderingContext {\n    const gl = this.getGLContext();\n    if (!gl) {\n      throw new CodedError(\n        'ERR_GL_INVALID',\n        'Attempting to use the GL context before it has been created.'\n      );\n    }\n    return gl;\n  }\n\n  private onContextLost = (event: Event | null): void => {\n    if (event && event.preventDefault) {\n      event.preventDefault();\n    }\n    this.gl = undefined;\n\n    if (typeof this.props.onContextLost === 'function') {\n      this.props.onContextLost();\n    }\n  };\n\n  private onContextRestored = (): void => {\n    this.gl = undefined;\n    if (this.getGLContext() == null) {\n      throw new CodedError('ERR_GL_INVALID', 'Failed to restore GL context.');\n    }\n  };\n\n  private getGLContext(): WebGLRenderingContext | null {\n    if (this.gl) return this.gl;\n\n    if (this.canvas) {\n      this.gl = ensureContext(this.canvas, this.props.webglContextAttributes);\n      if (typeof this.props.onContextCreate === 'function') {\n        this.props.onContextCreate(this.gl);\n      }\n      return this.gl;\n    }\n    return null;\n  }\n\n  private setCanvasRef = (canvas: HTMLCanvasElement): void => {\n    this.canvas = canvas;\n\n    if (typeof this.props.nativeRef_EXPERIMENTAL === 'function') {\n      this.props.nativeRef_EXPERIMENTAL(canvas);\n    }\n\n    if (this.canvas) {\n      this.canvas.addEventListener('webglcontextlost', this.onContextLost);\n      this.canvas.addEventListener('webglcontextrestored', this.onContextRestored);\n\n      this.getGLContext();\n    }\n  };\n\n  public async takeSnapshotAsync(options: SnapshotOptions = {}): Promise<GLSnapshot> {\n    if (!GLView.takeSnapshotAsync) {\n      throw new UnavailabilityError('expo-gl', 'takeSnapshotAsync');\n    }\n\n    const gl = this.getGLContextOrReject();\n    return await GLView.takeSnapshotAsync(gl, options);\n  }\n\n  public async startARSessionAsync(): Promise<void> {\n    throw new UnavailabilityError('GLView', 'startARSessionAsync');\n  }\n\n  public async createCameraTextureAsync(): Promise<void> {\n    throw new UnavailabilityError('GLView', 'createCameraTextureAsync');\n  }\n\n  public async destroyObjectAsync(glObject: WebGLObject): Promise<void> {\n    throw new UnavailabilityError('GLView', 'destroyObjectAsync');\n  }\n}\n"]}
\ No newline at end of file
+{"version":3,"file":"GLView.web.js","sourceRoot":"","sources":["../src/GLView.web.tsx"],"names":[],"mappings":"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","sourcesContent":["import { CodedError, Platform, UnavailabilityError } from 'expo-modules-core';\nimport invariant from 'invariant';\nimport * as React from 'react';\nimport { Dimensions } from 'react-native';\n\nimport Canvas from './Canvas';\nimport { WebGLObject } from './GLView';\nimport {\n  BaseGLViewProps,\n  ComponentOrHandle,\n  ExpoWebGLRenderingContext,\n  GLSnapshot,\n  SnapshotOptions,\n} from './GLView.types';\n\nfunction getImageForAsset(asset: {\n  downloadAsync: () => Promise<any>;\n  uri?: string;\n  localUri?: string;\n}): HTMLImageElement | any {\n  if (asset != null && typeof asset === 'object' && asset !== null && asset.downloadAsync) {\n    const dataURI = asset.localUri || asset.uri || '';\n    const image = new Image();\n    image.src = dataURI;\n    return image;\n  }\n  return asset;\n}\n\nfunction isOffscreenCanvas(element: any): element is OffscreenCanvas {\n  return element && typeof element.convertToBlob === 'function';\n}\n\nfunction asExpoContext(gl: ExpoWebGLRenderingContext): WebGLRenderingContext {\n  gl.endFrameEXP = function glEndFrameEXP(): void {};\n\n  if (!gl['_expo_texImage2D']) {\n    gl['_expo_texImage2D'] = gl.texImage2D;\n    gl.texImage2D = (...props: any[]): any => {\n      const nextProps = [...props];\n      nextProps.push(getImageForAsset(nextProps.pop()));\n      return gl['_expo_texImage2D'](...nextProps);\n    };\n  }\n\n  if (!gl['_expo_texSubImage2D']) {\n    gl['_expo_texSubImage2D'] = gl.texSubImage2D;\n    gl.texSubImage2D = (...props: any[]): any => {\n      const nextProps = [...props];\n      nextProps.push(getImageForAsset(nextProps.pop()));\n      return gl['_expo_texSubImage2D'](...nextProps);\n    };\n  }\n\n  return gl;\n}\n\nfunction ensureContext(\n  canvas?: HTMLCanvasElement,\n  contextAttributes?: WebGLContextAttributes\n): WebGLRenderingContext {\n  if (!canvas) {\n    throw new CodedError(\n      'ERR_GL_INVALID',\n      'Attempting to use the GL context before it has been created.'\n    );\n  }\n\n  // Apple disables WebGL 2.0 and doesn't provide any way to detect if it's disabled.\n  const isIOS = !!navigator.platform && /iPad|iPhone|iPod/.test(navigator.platform);\n\n  const context =\n    (!isIOS && canvas.getContext('webgl2', contextAttributes)) ||\n    canvas.getContext('webgl', contextAttributes) ||\n    canvas.getContext('webgl-experimental', contextAttributes) ||\n    canvas.getContext('experimental-webgl', contextAttributes);\n  invariant(context, 'Browser does not support WebGL');\n  return asExpoContext(context as ExpoWebGLRenderingContext);\n}\n\nexport interface GLViewProps extends BaseGLViewProps {\n  onContextCreate: (gl: WebGLRenderingContext) => void;\n  onContextRestored?: (gl?: WebGLRenderingContext) => void;\n  onContextLost?: () => void;\n  webglContextAttributes?: WebGLContextAttributes;\n  /**\n   * [iOS only] Number of samples for Apple's built-in multisampling.\n   */\n  msaaSamples: number;\n\n  /**\n   * A ref callback for the native GLView\n   */\n  nativeRef_EXPERIMENTAL?(callback: ComponentOrHandle | HTMLCanvasElement | null);\n}\n\nasync function getBlobFromWebGLRenderingContext(\n  gl: WebGLRenderingContext,\n  options: SnapshotOptions = {}\n): Promise<{ width: number; height: number; blob: Blob | null }> {\n  invariant(gl, 'getBlobFromWebGLRenderingContext(): WebGL Rendering Context is not defined');\n\n  const { canvas } = gl;\n\n  let blob: Blob | null = null;\n\n  if (typeof (canvas as any).msToBlob === 'function') {\n    // @ts-ignore: polyfill: https://stackoverflow.com/a/29815058/4047926\n    blob = await canvas.msToBlob();\n  } else if (isOffscreenCanvas(canvas)) {\n    blob = await canvas.convertToBlob({ quality: options.compress, type: options.format });\n  } else {\n    blob = await new Promise((resolve) => {\n      canvas.toBlob((blob: Blob | null) => resolve(blob), options.format, options.compress);\n    });\n  }\n\n  return {\n    blob,\n    width: canvas.width,\n    height: canvas.height,\n  };\n}\n\nexport class GLView extends React.Component<GLViewProps> {\n  canvas?: HTMLCanvasElement;\n\n  gl?: WebGLRenderingContext;\n\n  static async createContextAsync(): Promise<WebGLRenderingContext | null> {\n    if (!Platform.isDOMAvailable) {\n      return null;\n    }\n    const canvas = document.createElement('canvas');\n    const { width, height, scale } = Dimensions.get('window');\n    canvas.width = width * scale;\n    canvas.height = height * scale;\n    return ensureContext(canvas);\n  }\n\n  static async destroyContextAsync(exgl?: WebGLRenderingContext | number): Promise<boolean> {\n    // Do nothing\n    return true;\n  }\n\n  static async takeSnapshotAsync(\n    gl: WebGLRenderingContext,\n    options: SnapshotOptions = {}\n  ): Promise<GLSnapshot> {\n    const { blob, width, height } = await getBlobFromWebGLRenderingContext(gl, options);\n\n    if (!blob) {\n      throw new CodedError('ERR_GL_SNAPSHOT', 'Failed to save the GL context');\n    }\n\n    return {\n      uri: blob,\n      localUri: '',\n      width,\n      height,\n    };\n  }\n\n  componentWillUnmount() {\n    if (this.gl) {\n      const loseContextExt = this.gl.getExtension('WEBGL_lose_context');\n      if (loseContextExt) {\n        loseContextExt.loseContext();\n      }\n      this.gl = undefined;\n    }\n    if (this.canvas) {\n      this.canvas.removeEventListener('webglcontextlost', this.onContextLost);\n      this.canvas.removeEventListener('webglcontextrestored', this.onContextRestored);\n    }\n  }\n\n  render() {\n    const {\n      onContextCreate,\n      onContextRestored,\n      onContextLost,\n      webglContextAttributes,\n      msaaSamples,\n      nativeRef_EXPERIMENTAL,\n      // @ts-ignore: ref does not exist\n      ref,\n      ...domProps\n    } = this.props;\n\n    return <Canvas {...domProps} canvasRef={this.setCanvasRef} />;\n  }\n\n  componentDidUpdate(prevProps: GLViewProps) {\n    const { webglContextAttributes } = this.props;\n    if (this.canvas && webglContextAttributes !== prevProps.webglContextAttributes) {\n      this.onContextLost(null);\n      this.onContextRestored();\n    }\n  }\n\n  private getGLContextOrReject(): WebGLRenderingContext {\n    const gl = this.getGLContext();\n    if (!gl) {\n      throw new CodedError(\n        'ERR_GL_INVALID',\n        'Attempting to use the GL context before it has been created.'\n      );\n    }\n    return gl;\n  }\n\n  private onContextLost = (event: Event | null): void => {\n    if (event && event.preventDefault) {\n      event.preventDefault();\n    }\n    this.gl = undefined;\n\n    if (typeof this.props.onContextLost === 'function') {\n      this.props.onContextLost();\n    }\n  };\n\n  private onContextRestored = (): void => {\n    this.gl = undefined;\n    if (this.getGLContext() == null) {\n      throw new CodedError('ERR_GL_INVALID', 'Failed to restore GL context.');\n    }\n  };\n\n  private getGLContext(): WebGLRenderingContext | null {\n    if (this.gl) return this.gl;\n\n    if (this.canvas) {\n      this.gl = ensureContext(this.canvas, this.props.webglContextAttributes);\n      if (typeof this.props.onContextCreate === 'function') {\n        this.props.onContextCreate(this.gl);\n      }\n      return this.gl;\n    }\n    return null;\n  }\n\n  private setCanvasRef = (canvas: HTMLCanvasElement): void => {\n    this.canvas = canvas;\n\n    if (typeof this.props.nativeRef_EXPERIMENTAL === 'function') {\n      this.props.nativeRef_EXPERIMENTAL(canvas);\n    }\n\n    if (this.canvas) {\n      this.canvas.addEventListener('webglcontextlost', this.onContextLost);\n      this.canvas.addEventListener('webglcontextrestored', this.onContextRestored);\n\n      this.getGLContext();\n    }\n  };\n\n  public async takeSnapshotAsync(options: SnapshotOptions = {}): Promise<GLSnapshot> {\n    if (!GLView.takeSnapshotAsync) {\n      throw new UnavailabilityError('expo-gl', 'takeSnapshotAsync');\n    }\n\n    const gl = this.getGLContextOrReject();\n    return await GLView.takeSnapshotAsync(gl, options);\n  }\n\n  public async startARSessionAsync(): Promise<void> {\n    throw new UnavailabilityError('GLView', 'startARSessionAsync');\n  }\n\n  public async createCameraTextureAsync(): Promise<void> {\n    throw new UnavailabilityError('GLView', 'createCameraTextureAsync');\n  }\n\n  public async destroyObjectAsync(glObject: WebGLObject): Promise<void> {\n    throw new UnavailabilityError('GLView', 'destroyObjectAsync');\n  }\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/expo-gl/build/WebGL2RenderingContext.d.ts b/node_modules/expo-gl/build/WebGL2RenderingContext.d.ts
index 0a636b1..8686238 100644
--- a/node_modules/expo-gl/build/WebGL2RenderingContext.d.ts
+++ b/node_modules/expo-gl/build/WebGL2RenderingContext.d.ts
@@ -1,3 +1,4 @@
+import { WebGLObject } from './types';
 export default interface WebGL2RenderingCOntext extends WebGLRenderingContext {
     readonly READ_BUFFER: number;
     readonly UNPACK_ROW_LENGTH: number;
diff --git a/node_modules/expo-gl/build/WebGL2RenderingContext.js.map b/node_modules/expo-gl/build/WebGL2RenderingContext.js.map
index 5254179..58b9703 100644
--- a/node_modules/expo-gl/build/WebGL2RenderingContext.js.map
+++ b/node_modules/expo-gl/build/WebGL2RenderingContext.js.map
@@ -1 +1 @@
-{"version":3,"file":"WebGL2RenderingContext.js","sourceRoot":"","sources":["../src/WebGL2RenderingContext.ts"],"names":[],"mappings":"","sourcesContent":["// TODO: copy-paste from https://github.com/DefinitelyTyped/DefinitelyTyped/blob/5344bfc80508c53a23dae37b860fb0c905ff7b24/types/webgl2/index.d.ts\nexport default interface WebGL2RenderingCOntext extends WebGLRenderingContext {\n  readonly READ_BUFFER: number; // 0x0C02\n  readonly UNPACK_ROW_LENGTH: number; // 0x0CF2\n  readonly UNPACK_SKIP_ROWS: number; // 0x0CF3\n  readonly UNPACK_SKIP_PIXELS: number; // 0x0CF4\n  readonly PACK_ROW_LENGTH: number; // 0x0D02\n  readonly PACK_SKIP_ROWS: number; // 0x0D03\n  readonly PACK_SKIP_PIXELS: number; // 0x0D04\n  readonly COLOR: number; // 0x1800\n  readonly DEPTH: number; // 0x1801\n  readonly STENCIL: number; // 0x1802\n  readonly RED: number; // 0x1903\n  readonly RGB8: number; // 0x8051\n  readonly RGBA8: number; // 0x8058\n  readonly RGB10_A2: number; // 0x8059\n  readonly TEXTURE_BINDING_3D: number; // 0x806A\n  readonly UNPACK_SKIP_IMAGES: number; // 0x806D\n  readonly UNPACK_IMAGE_HEIGHT: number; // 0x806E\n  readonly TEXTURE_3D: number; // 0x806F\n  readonly TEXTURE_WRAP_R: number; // 0x8072\n  readonly MAX_3D_TEXTURE_SIZE: number; // 0x8073\n  readonly UNSIGNED_INT_2_10_10_10_REV: number; // 0x8368\n  readonly MAX_ELEMENTS_VERTICES: number; // 0x80E8\n  readonly MAX_ELEMENTS_INDICES: number; // 0x80E9\n  readonly TEXTURE_MIN_LOD: number; // 0x813A\n  readonly TEXTURE_MAX_LOD: number; // 0x813B\n  readonly TEXTURE_BASE_LEVEL: number; // 0x813C\n  readonly TEXTURE_MAX_LEVEL: number; // 0x813D\n  readonly MIN: number; // 0x8007\n  readonly MAX: number; // 0x8008\n  readonly DEPTH_COMPONENT24: number; // 0x81A6\n  readonly MAX_TEXTURE_LOD_BIAS: number; // 0x84FD\n  readonly TEXTURE_COMPARE_MODE: number; // 0x884C\n  readonly TEXTURE_COMPARE_FUNC: number; // 0x884D\n  readonly CURRENT_QUERY: number; // 0x8865\n  readonly QUERY_RESULT: number; // 0x8866\n  readonly QUERY_RESULT_AVAILABLE: number; // 0x8867\n  readonly STREAM_READ: number; // 0x88E1\n  readonly STREAM_COPY: number; // 0x88E2\n  readonly STATIC_READ: number; // 0x88E5\n  readonly STATIC_COPY: number; // 0x88E6\n  readonly DYNAMIC_READ: number; // 0x88E9\n  readonly DYNAMIC_COPY: number; // 0x88EA\n  readonly MAX_DRAW_BUFFERS: number; // 0x8824\n  readonly DRAW_BUFFER0: number; // 0x8825\n  readonly DRAW_BUFFER1: number; // 0x8826\n  readonly DRAW_BUFFER2: number; // 0x8827\n  readonly DRAW_BUFFER3: number; // 0x8828\n  readonly DRAW_BUFFER4: number; // 0x8829\n  readonly DRAW_BUFFER5: number; // 0x882A\n  readonly DRAW_BUFFER6: number; // 0x882B\n  readonly DRAW_BUFFER7: number; // 0x882C\n  readonly DRAW_BUFFER8: number; // 0x882D\n  readonly DRAW_BUFFER9: number; // 0x882E\n  readonly DRAW_BUFFER10: number; // 0x882F\n  readonly DRAW_BUFFER11: number; // 0x8830\n  readonly DRAW_BUFFER12: number; // 0x8831\n  readonly DRAW_BUFFER13: number; // 0x8832\n  readonly DRAW_BUFFER14: number; // 0x8833\n  readonly DRAW_BUFFER15: number; // 0x8834\n  readonly MAX_FRAGMENT_UNIFORM_COMPONENTS: number; // 0x8B49\n  readonly MAX_VERTEX_UNIFORM_COMPONENTS: number; // 0x8B4A\n  readonly SAMPLER_3D: number; // 0x8B5F\n  readonly SAMPLER_2D_SHADOW: number; // 0x8B62\n  readonly FRAGMENT_SHADER_DERIVATIVE_HINT: number; // 0x8B8B\n  readonly PIXEL_PACK_BUFFER: number; // 0x88EB\n  readonly PIXEL_UNPACK_BUFFER: number; // 0x88EC\n  readonly PIXEL_PACK_BUFFER_BINDING: number; // 0x88ED\n  readonly PIXEL_UNPACK_BUFFER_BINDING: number; // 0x88EF\n  readonly FLOAT_MAT2x3: number; // 0x8B65\n  readonly FLOAT_MAT2x4: number; // 0x8B66\n  readonly FLOAT_MAT3x2: number; // 0x8B67\n  readonly FLOAT_MAT3x4: number; // 0x8B68\n  readonly FLOAT_MAT4x2: number; // 0x8B69\n  readonly FLOAT_MAT4x3: number; // 0x8B6A\n  readonly SRGB: number; // 0x8C40\n  readonly SRGB8: number; // 0x8C41\n  readonly SRGB8_ALPHA8: number; // 0x8C43\n  readonly COMPARE_REF_TO_TEXTURE: number; // 0x884E\n  readonly RGBA32F: number; // 0x8814\n  readonly RGB32F: number; // 0x8815\n  readonly RGBA16F: number; // 0x881A\n  readonly RGB16F: number; // 0x881B\n  readonly VERTEX_ATTRIB_ARRAY_INTEGER: number; // 0x88FD\n  readonly MAX_ARRAY_TEXTURE_LAYERS: number; // 0x88FF\n  readonly MIN_PROGRAM_TEXEL_OFFSET: number; // 0x8904\n  readonly MAX_PROGRAM_TEXEL_OFFSET: number; // 0x8905\n  readonly MAX_VARYING_COMPONENTS: number; // 0x8B4B\n  readonly TEXTURE_2D_ARRAY: number; // 0x8C1A\n  readonly TEXTURE_BINDING_2D_ARRAY: number; // 0x8C1D\n  readonly R11F_G11F_B10F: number; // 0x8C3A\n  readonly UNSIGNED_INT_10F_11F_11F_REV: number; // 0x8C3B\n  readonly RGB9_E5: number; // 0x8C3D\n  readonly UNSIGNED_INT_5_9_9_9_REV: number; // 0x8C3E\n  readonly TRANSFORM_FEEDBACK_BUFFER_MODE: number; // 0x8C7F\n  readonly MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS: number; // 0x8C80\n  readonly TRANSFORM_FEEDBACK_VARYINGS: number; // 0x8C83\n  readonly TRANSFORM_FEEDBACK_BUFFER_START: number; // 0x8C84\n  readonly TRANSFORM_FEEDBACK_BUFFER_SIZE: number; // 0x8C85\n  readonly TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN: number; // 0x8C88\n  readonly RASTERIZER_DISCARD: number; // 0x8C89\n  readonly MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS: number; // 0x8C8A\n  readonly MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS: number; // 0x8C8B\n  readonly INTERLEAVED_ATTRIBS: number; // 0x8C8C\n  readonly SEPARATE_ATTRIBS: number; // 0x8C8D\n  readonly TRANSFORM_FEEDBACK_BUFFER: number; // 0x8C8E\n  readonly TRANSFORM_FEEDBACK_BUFFER_BINDING: number; // 0x8C8F\n  readonly RGBA32UI: number; // 0x8D70\n  readonly RGB32UI: number; // 0x8D71\n  readonly RGBA16UI: number; // 0x8D76\n  readonly RGB16UI: number; // 0x8D77\n  readonly RGBA8UI: number; // 0x8D7C\n  readonly RGB8UI: number; // 0x8D7D\n  readonly RGBA32I: number; // 0x8D82\n  readonly RGB32I: number; // 0x8D83\n  readonly RGBA16I: number; // 0x8D88\n  readonly RGB16I: number; // 0x8D89\n  readonly RGBA8I: number; // 0x8D8E\n  readonly RGB8I: number; // 0x8D8F\n  readonly RED_INTEGER: number; // 0x8D94\n  readonly RGB_INTEGER: number; // 0x8D98\n  readonly RGBA_INTEGER: number; // 0x8D99\n  readonly SAMPLER_2D_ARRAY: number; // 0x8DC1\n  readonly SAMPLER_2D_ARRAY_SHADOW: number; // 0x8DC4\n  readonly SAMPLER_CUBE_SHADOW: number; // 0x8DC5\n  readonly UNSIGNED_INT_VEC2: number; // 0x8DC6\n  readonly UNSIGNED_INT_VEC3: number; // 0x8DC7\n  readonly UNSIGNED_INT_VEC4: number; // 0x8DC8\n  readonly INT_SAMPLER_2D: number; // 0x8DCA\n  readonly INT_SAMPLER_3D: number; // 0x8DCB\n  readonly INT_SAMPLER_CUBE: number; // 0x8DCC\n  readonly INT_SAMPLER_2D_ARRAY: number; // 0x8DCF\n  readonly UNSIGNED_INT_SAMPLER_2D: number; // 0x8DD2\n  readonly UNSIGNED_INT_SAMPLER_3D: number; // 0x8DD3\n  readonly UNSIGNED_INT_SAMPLER_CUBE: number; // 0x8DD4\n  readonly UNSIGNED_INT_SAMPLER_2D_ARRAY: number; // 0x8DD7\n  readonly DEPTH_COMPONENT32F: number; // 0x8CAC\n  readonly DEPTH32F_STENCIL8: number; // 0x8CAD\n  readonly FLOAT_32_UNSIGNED_INT_24_8_REV: number; // 0x8DAD\n  readonly FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING: number; // 0x8210\n  readonly FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE: number; // 0x8211\n  readonly FRAMEBUFFER_ATTACHMENT_RED_SIZE: number; // 0x8212\n  readonly FRAMEBUFFER_ATTACHMENT_GREEN_SIZE: number; // 0x8213\n  readonly FRAMEBUFFER_ATTACHMENT_BLUE_SIZE: number; // 0x8214\n  readonly FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE: number; // 0x8215\n  readonly FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE: number; // 0x8216\n  readonly FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE: number; // 0x8217\n  readonly FRAMEBUFFER_DEFAULT: number; // 0x8218\n  //readonly DEPTH_STENCIL_ATTACHMENT: number;                      // 0x821A /* Already defined in WebGL1 constants */\n  //readonly DEPTH_STENCIL: number;                                 // 0x84F9 /* Already defined in WebGL1 constants */\n  readonly UNSIGNED_INT_24_8: number; // 0x84FA\n  readonly DEPTH24_STENCIL8: number; // 0x88F0\n  readonly UNSIGNED_NORMALIZED: number; // 0x8C17\n  readonly DRAW_FRAMEBUFFER_BINDING: number; // 0x8CA6 /* Same as FRAMEBUFFER_BINDING */\n  readonly READ_FRAMEBUFFER: number; // 0x8CA8\n  readonly DRAW_FRAMEBUFFER: number; // 0x8CA9\n  readonly READ_FRAMEBUFFER_BINDING: number; // 0x8CAA\n  readonly RENDERBUFFER_SAMPLES: number; // 0x8CAB\n  readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER: number; // 0x8CD4\n  readonly MAX_COLOR_ATTACHMENTS: number; // 0x8CDF\n  readonly COLOR_ATTACHMENT1: number; // 0x8CE1\n  readonly COLOR_ATTACHMENT2: number; // 0x8CE2\n  readonly COLOR_ATTACHMENT3: number; // 0x8CE3\n  readonly COLOR_ATTACHMENT4: number; // 0x8CE4\n  readonly COLOR_ATTACHMENT5: number; // 0x8CE5\n  readonly COLOR_ATTACHMENT6: number; // 0x8CE6\n  readonly COLOR_ATTACHMENT7: number; // 0x8CE7\n  readonly COLOR_ATTACHMENT8: number; // 0x8CE8\n  readonly COLOR_ATTACHMENT9: number; // 0x8CE9\n  readonly COLOR_ATTACHMENT10: number; // 0x8CEA\n  readonly COLOR_ATTACHMENT11: number; // 0x8CEB\n  readonly COLOR_ATTACHMENT12: number; // 0x8CEC\n  readonly COLOR_ATTACHMENT13: number; // 0x8CED\n  readonly COLOR_ATTACHMENT14: number; // 0x8CEE\n  readonly COLOR_ATTACHMENT15: number; // 0x8CEF\n  readonly FRAMEBUFFER_INCOMPLETE_MULTISAMPLE: number; // 0x8D56\n  readonly MAX_SAMPLES: number; // 0x8D57\n  readonly HALF_FLOAT: number; // 0x140B\n  readonly RG: number; // 0x8227\n  readonly RG_INTEGER: number; // 0x8228\n  readonly R8: number; // 0x8229\n  readonly RG8: number; // 0x822B\n  readonly R16F: number; // 0x822D\n  readonly R32F: number; // 0x822E\n  readonly RG16F: number; // 0x822F\n  readonly RG32F: number; // 0x8230\n  readonly R8I: number; // 0x8231\n  readonly R8UI: number; // 0x8232\n  readonly R16I: number; // 0x8233\n  readonly R16UI: number; // 0x8234\n  readonly R32I: number; // 0x8235\n  readonly R32UI: number; // 0x8236\n  readonly RG8I: number; // 0x8237\n  readonly RG8UI: number; // 0x8238\n  readonly RG16I: number; // 0x8239\n  readonly RG16UI: number; // 0x823A\n  readonly RG32I: number; // 0x823B\n  readonly RG32UI: number; // 0x823C\n  readonly VERTEX_ARRAY_BINDING: number; // 0x85B5\n  readonly R8_SNORM: number; // 0x8F94\n  readonly RG8_SNORM: number; // 0x8F95\n  readonly RGB8_SNORM: number; // 0x8F96\n  readonly RGBA8_SNORM: number; // 0x8F97\n  readonly SIGNED_NORMALIZED: number; // 0x8F9C\n  readonly COPY_READ_BUFFER: number; // 0x8F36\n  readonly COPY_WRITE_BUFFER: number; // 0x8F37\n  readonly COPY_READ_BUFFER_BINDING: number; // 0x8F36 /* Same as COPY_READ_BUFFER */\n  readonly COPY_WRITE_BUFFER_BINDING: number; // 0x8F37 /* Same as COPY_WRITE_BUFFER */\n  readonly UNIFORM_BUFFER: number; // 0x8A11\n  readonly UNIFORM_BUFFER_BINDING: number; // 0x8A28\n  readonly UNIFORM_BUFFER_START: number; // 0x8A29\n  readonly UNIFORM_BUFFER_SIZE: number; // 0x8A2A\n  readonly MAX_VERTEX_UNIFORM_BLOCKS: number; // 0x8A2B\n  readonly MAX_FRAGMENT_UNIFORM_BLOCKS: number; // 0x8A2D\n  readonly MAX_COMBINED_UNIFORM_BLOCKS: number; // 0x8A2E\n  readonly MAX_UNIFORM_BUFFER_BINDINGS: number; // 0x8A2F\n  readonly MAX_UNIFORM_BLOCK_SIZE: number; // 0x8A30\n  readonly MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS: number; // 0x8A31\n  readonly MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS: number; // 0x8A33\n  readonly UNIFORM_BUFFER_OFFSET_ALIGNMENT: number; // 0x8A34\n  readonly ACTIVE_UNIFORM_BLOCKS: number; // 0x8A36\n  readonly UNIFORM_TYPE: number; // 0x8A37\n  readonly UNIFORM_SIZE: number; // 0x8A38\n  readonly UNIFORM_BLOCK_INDEX: number; // 0x8A3A\n  readonly UNIFORM_OFFSET: number; // 0x8A3B\n  readonly UNIFORM_ARRAY_STRIDE: number; // 0x8A3C\n  readonly UNIFORM_MATRIX_STRIDE: number; // 0x8A3D\n  readonly UNIFORM_IS_ROW_MAJOR: number; // 0x8A3E\n  readonly UNIFORM_BLOCK_BINDING: number; // 0x8A3F\n  readonly UNIFORM_BLOCK_DATA_SIZE: number; // 0x8A40\n  readonly UNIFORM_BLOCK_ACTIVE_UNIFORMS: number; // 0x8A42\n  readonly UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES: number; // 0x8A43\n  readonly UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER: number; // 0x8A44\n  readonly UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER: number; // 0x8A46\n  readonly INVALID_INDEX: number; // 0xFFFFFFFF\n  readonly MAX_VERTEX_OUTPUT_COMPONENTS: number; // 0x9122\n  readonly MAX_FRAGMENT_INPUT_COMPONENTS: number; // 0x9125\n  readonly MAX_SERVER_WAIT_TIMEOUT: number; // 0x9111\n  readonly OBJECT_TYPE: number; // 0x9112\n  readonly SYNC_CONDITION: number; // 0x9113\n  readonly SYNC_STATUS: number; // 0x9114\n  readonly SYNC_FLAGS: number; // 0x9115\n  readonly SYNC_FENCE: number; // 0x9116\n  readonly SYNC_GPU_COMMANDS_COMPLETE: number; // 0x9117\n  readonly UNSIGNALED: number; // 0x9118\n  readonly SIGNALED: number; // 0x9119\n  readonly ALREADY_SIGNALED: number; // 0x911A\n  readonly TIMEOUT_EXPIRED: number; // 0x911B\n  readonly CONDITION_SATISFIED: number; // 0x911C\n  readonly WAIT_FAILED: number; // 0x911D\n  readonly SYNC_FLUSH_COMMANDS_BIT: number; // 0x00000001\n  readonly VERTEX_ATTRIB_ARRAY_DIVISOR: number; // 0x88FE\n  readonly ANY_SAMPLES_PASSED: number; // 0x8C2F\n  readonly ANY_SAMPLES_PASSED_CONSERVATIVE: number; // 0x8D6A\n  readonly SAMPLER_BINDING: number; // 0x8919\n  readonly RGB10_A2UI: number; // 0x906F\n  readonly INT_2_10_10_10_REV: number; // 0x8D9F\n  readonly TRANSFORM_FEEDBACK: number; // 0x8E22\n  readonly TRANSFORM_FEEDBACK_PAUSED: number; // 0x8E23\n  readonly TRANSFORM_FEEDBACK_ACTIVE: number; // 0x8E24\n  readonly TRANSFORM_FEEDBACK_BINDING: number; // 0x8E25\n  readonly TEXTURE_IMMUTABLE_FORMAT: number; // 0x912F\n  readonly MAX_ELEMENT_INDEX: number; // 0x8D6B\n  readonly TEXTURE_IMMUTABLE_LEVELS: number; // 0x82DF\n\n  readonly TIMEOUT_IGNORED: number; // -1\n\n  /* WebGL-specific enums */\n  readonly MAX_CLIENT_WAIT_TIMEOUT_WEBGL: number; // 0x9247\n\n  /* Buffer objects */\n  // WebGL1:\n  bufferData(\n    target: number,\n    sizeOrData:\n      | number\n      | Int8Array\n      | Int16Array\n      | Int32Array\n      | Uint8Array\n      | Uint16Array\n      | Uint32Array\n      | Uint8ClampedArray\n      | Float32Array\n      | Float64Array\n      | DataView\n      | ArrayBuffer\n      | null,\n    usage: number\n  ): void;\n  bufferSubData(\n    target: number,\n    dstByteOffset: number,\n    srcData:\n      | Int8Array\n      | Int16Array\n      | Int32Array\n      | Uint8Array\n      | Uint16Array\n      | Uint32Array\n      | Uint8ClampedArray\n      | Float32Array\n      | Float64Array\n      | DataView\n      | ArrayBuffer\n      | null\n  ): void;\n  // For compatibility with WebGL 1 context in older Typescript versions.\n  bufferData(target: number, data: ArrayBufferView, usage: number): void;\n  bufferSubData(target: number, dstByteOffset: number, srcData: ArrayBufferView): void;\n  // WebGL2:\n  bufferData(\n    target: number,\n    srcData:\n      | Int8Array\n      | Int16Array\n      | Int32Array\n      | Uint8Array\n      | Uint16Array\n      | Uint32Array\n      | Uint8ClampedArray\n      | Float32Array\n      | Float64Array\n      | DataView\n      | ArrayBuffer\n      | null,\n    usage: number,\n    srcOffset: number,\n    length?: number\n  ): void;\n  bufferSubData(\n    target: number,\n    dstByteOffset: number,\n    srcData: ArrayBufferView,\n    srcOffset: number,\n    length?: number\n  ): void;\n\n  copyBufferSubData(\n    readTarget: number,\n    writeTarget: number,\n    readOffset: number,\n    writeOffset: number,\n    size: number\n  ): void;\n  // MapBufferRange, in particular its read-only and write-only modes,\n  // can not be exposed safely to JavaScript. GetBufferSubData\n  // replaces it for the purpose of fetching data back from the GPU.\n  getBufferSubData(\n    target: number,\n    srcByteOffset: number,\n    dstBuffer: ArrayBufferView,\n    dstOffset?: number,\n    length?: number\n  ): void;\n\n  /* Framebuffer objects */\n  blitFramebuffer(\n    srcX0: number,\n    srcY0: number,\n    srcX1: number,\n    srcY1: number,\n    dstX0: number,\n    dstY0: number,\n    dstX1: number,\n    dstY1: number,\n    mask: number,\n    filter: number\n  ): void;\n  framebufferTextureLayer(\n    target: number,\n    attachment: number,\n    texture: WebGLTexture | null,\n    level: number,\n    layer: number\n  ): void;\n  invalidateFramebuffer(target: number, attachments: number[]): void;\n  invalidateSubFramebuffer(\n    target: number,\n    attachments: number[],\n    x: number,\n    y: number,\n    width: number,\n    height: number\n  ): void;\n  readBuffer(src: number): void;\n\n  /* Renderbuffer objects */\n  getInternalformatParameter(target: number, internalformat: number, pname: number): any;\n  renderbufferStorageMultisample(\n    target: number,\n    samples: number,\n    internalformat: number,\n    width: number,\n    height: number\n  ): void;\n\n  /* Texture objects */\n  texStorage2D(\n    target: number,\n    levels: number,\n    internalformat: number,\n    width: number,\n    height: number\n  ): void;\n  texStorage3D(\n    target: number,\n    levels: number,\n    internalformat: number,\n    width: number,\n    height: number,\n    depth: number\n  ): void;\n\n  // WebGL1 legacy entrypoints:\n  texImage2D(\n    target: number,\n    level: number,\n    internalformat: number,\n    width: number,\n    height: number,\n    border: number,\n    format: number,\n    type: number,\n    pixels?: ArrayBufferView | null\n  ): void;\n  texImage2D(\n    target: number,\n    level: number,\n    internalformat: number,\n    format: number,\n    type: number,\n    source: ImageData | HTMLImageElement | HTMLCanvasElement | HTMLVideoElement\n  ): void; // May throw DOMException\n  texImage2D(\n    target: number,\n    level: number,\n    internalformat: number,\n    format: number,\n    type: number,\n    source: ImageBitmap | ImageData | HTMLImageElement | HTMLCanvasElement | HTMLVideoElement\n  ): void; // May throw DOMException\n\n  texSubImage2D(\n    target: number,\n    level: number,\n    xoffset: number,\n    yoffset: number,\n    width: number,\n    height: number,\n    format: number,\n    type: number,\n    pixels?: ArrayBufferView | null\n  ): void;\n  texSubImage2D(\n    target: number,\n    level: number,\n    xoffset: number,\n    yoffset: number,\n    format: number,\n    type: number,\n    source: ImageData | HTMLImageElement | HTMLCanvasElement | HTMLVideoElement\n  ): void; // May throw DOMException\n  texSubImage2D(\n    target: number,\n    level: number,\n    xoffset: number,\n    yoffset: number,\n    format: number,\n    type: number,\n    source: ImageBitmap | ImageData | HTMLImageElement | HTMLCanvasElement | HTMLVideoElement\n  ): void; // May throw DOMException\n\n  // WebGL2 entrypoints:\n  texImage2D(\n    target: number,\n    level: number,\n    internalformat: number,\n    width: number,\n    height: number,\n    border: number,\n    format: number,\n    type: number,\n    pboOffset: number\n  ): void;\n  texImage2D(\n    target: number,\n    level: number,\n    internalformat: number,\n    width: number,\n    height: number,\n    border: number,\n    format: number,\n    type: number,\n    source: ImageBitmap | ImageData | HTMLImageElement | HTMLCanvasElement | HTMLVideoElement\n  ): void; // May throw DOMException\n  texImage2D(\n    target: number,\n    level: number,\n    internalformat: number,\n    width: number,\n    height: number,\n    border: number,\n    format: number,\n    type: number,\n    srcData: ArrayBufferView,\n    srcOffset: number\n  ): void;\n\n  texImage3D(\n    target: number,\n    level: number,\n    internalformat: number,\n    width: number,\n    height: number,\n    depth: number,\n    border: number,\n    format: number,\n    type: number,\n    pboOffset: number\n  ): void;\n  texImage3D(\n    target: number,\n    level: number,\n    internalformat: number,\n    width: number,\n    height: number,\n    depth: number,\n    border: number,\n    format: number,\n    type: number,\n    source: ImageBitmap | ImageData | HTMLImageElement | HTMLCanvasElement | HTMLVideoElement\n  ): void; // May throw DOMException\n  texImage3D(\n    target: number,\n    level: number,\n    internalformat: number,\n    width: number,\n    height: number,\n    depth: number,\n    border: number,\n    format: number,\n    type: number,\n    srcData: ArrayBufferView | null\n  ): void;\n  texImage3D(\n    target: number,\n    level: number,\n    internalformat: number,\n    width: number,\n    height: number,\n    depth: number,\n    border: number,\n    format: number,\n    type: number,\n    srcData: ArrayBufferView,\n    srcOffset: number\n  ): void;\n\n  texSubImage2D(\n    target: number,\n    level: number,\n    xoffset: number,\n    yoffset: number,\n    width: number,\n    height: number,\n    format: number,\n    type: number,\n    pboOffset: number\n  ): void;\n  texSubImage2D(\n    target: number,\n    level: number,\n    xoffset: number,\n    yoffset: number,\n    width: number,\n    height: number,\n    format: number,\n    type: number,\n    source: ImageBitmap | ImageData | HTMLImageElement | HTMLCanvasElement | HTMLVideoElement\n  ): void; // May throw DOMException\n  texSubImage2D(\n    target: number,\n    level: number,\n    xoffset: number,\n    yoffset: number,\n    width: number,\n    height: number,\n    format: number,\n    type: number,\n    srcData: ArrayBufferView,\n    srcOffset: number\n  ): void;\n\n  texSubImage3D(\n    target: number,\n    level: number,\n    xoffset: number,\n    yoffset: number,\n    zoffset: number,\n    width: number,\n    height: number,\n    depth: number,\n    format: number,\n    type: number,\n    pboOffset: number\n  ): void;\n  texSubImage3D(\n    target: number,\n    level: number,\n    xoffset: number,\n    yoffset: number,\n    zoffset: number,\n    width: number,\n    height: number,\n    depth: number,\n    format: number,\n    type: number,\n    source: ImageBitmap | ImageData | HTMLImageElement | HTMLCanvasElement | HTMLVideoElement\n  ): void; // May throw DOMException\n  texSubImage3D(\n    target: number,\n    level: number,\n    xoffset: number,\n    yoffset: number,\n    zoffset: number,\n    width: number,\n    height: number,\n    depth: number,\n    format: number,\n    type: number,\n    srcData: ArrayBufferView | null,\n    srcOffset?: number\n  ): void;\n\n  copyTexSubImage3D(\n    target: number,\n    level: number,\n    xoffset: number,\n    yoffset: number,\n    zoffset: number,\n    x: number,\n    y: number,\n    width: number,\n    height: number\n  ): void;\n\n  compressedTexImage2D(\n    target: number,\n    level: number,\n    internalformat: number,\n    width: number,\n    height: number,\n    border: number,\n    imageSize: number,\n    offset: number\n  ): void;\n  compressedTexImage2D(\n    target: number,\n    level: number,\n    internalformat: number,\n    width: number,\n    height: number,\n    border: number,\n    srcData:\n      | Int8Array\n      | Int16Array\n      | Int32Array\n      | Uint8Array\n      | Uint16Array\n      | Uint32Array\n      | Uint8ClampedArray\n      | Float32Array\n      | Float64Array\n      | DataView\n      | null,\n    srcOffset?: number,\n    srcLengthOverride?: number\n  ): void;\n  // For compatibility with WebGL 1 context in older Typescript versions.\n  compressedTexImage2D(\n    target: number,\n    level: number,\n    internalformat: number,\n    width: number,\n    height: number,\n    border: number,\n    srcData: ArrayBufferView,\n    srcOffset?: number,\n    srcLengthOverride?: number\n  ): void;\n\n  compressedTexImage3D(\n    target: number,\n    level: number,\n    internalformat: number,\n    width: number,\n    height: number,\n    depth: number,\n    border: number,\n    imageSize: number,\n    offset: number\n  ): void;\n  compressedTexImage3D(\n    target: number,\n    level: number,\n    internalformat: number,\n    width: number,\n    height: number,\n    depth: number,\n    border: number,\n    srcData: ArrayBufferView,\n    srcOffset?: number,\n    srcLengthOverride?: number\n  ): void;\n\n  compressedTexSubImage2D(\n    target: number,\n    level: number,\n    xoffset: number,\n    yoffset: number,\n    width: number,\n    height: number,\n    format: number,\n    imageSize: number,\n    offset: number\n  ): void;\n  compressedTexSubImage2D(\n    target: number,\n    level: number,\n    xoffset: number,\n    yoffset: number,\n    width: number,\n    height: number,\n    format: number,\n    srcData:\n      | Int8Array\n      | Int16Array\n      | Int32Array\n      | Uint8Array\n      | Uint16Array\n      | Uint32Array\n      | Uint8ClampedArray\n      | Float32Array\n      | Float64Array\n      | DataView\n      | null,\n    srcOffset?: number,\n    srcLengthOverride?: number\n  ): void;\n  // For compatibility with WebGL 1 context in older Typescript versions.\n  compressedTexSubImage2D(\n    target: number,\n    level: number,\n    xoffset: number,\n    yoffset: number,\n    width: number,\n    height: number,\n    format: number,\n    srcData: ArrayBufferView | null,\n    srcOffset?: number,\n    srcLengthOverride?: number\n  ): void;\n\n  compressedTexSubImage3D(\n    target: number,\n    level: number,\n    xoffset: number,\n    yoffset: number,\n    zoffset: number,\n    width: number,\n    height: number,\n    depth: number,\n    format: number,\n    imageSize: number,\n    offset: number\n  ): void;\n  compressedTexSubImage3D(\n    target: number,\n    level: number,\n    xoffset: number,\n    yoffset: number,\n    zoffset: number,\n    width: number,\n    height: number,\n    depth: number,\n    format: number,\n    srcData: ArrayBufferView,\n    srcOffset?: number,\n    srcLengthOverride?: number\n  ): void;\n\n  /* Programs and shaders */\n  getFragDataLocation(program: WebGLProgram, name: string): number;\n\n  /* Uniforms */\n  uniform1ui(location: WebGLUniformLocation | null, v0: number): void;\n  uniform2ui(location: WebGLUniformLocation | null, v0: number, v1: number): void;\n  uniform3ui(location: WebGLUniformLocation | null, v0: number, v1: number, v2: number): void;\n  uniform4ui(\n    location: WebGLUniformLocation | null,\n    v0: number,\n    v1: number,\n    v2: number,\n    v3: number\n  ): void;\n\n  uniform1fv(\n    location: WebGLUniformLocation | null,\n    data: Float32Array | ArrayLike<number>,\n    srcOffset?: number,\n    srcLength?: number\n  ): void;\n  uniform2fv(\n    location: WebGLUniformLocation | null,\n    data: Float32Array | ArrayLike<number>,\n    srcOffset?: number,\n    srcLength?: number\n  ): void;\n  uniform3fv(\n    location: WebGLUniformLocation | null,\n    data: Float32Array | ArrayLike<number>,\n    srcOffset?: number,\n    srcLength?: number\n  ): void;\n  uniform4fv(\n    location: WebGLUniformLocation | null,\n    data: Float32Array | ArrayLike<number>,\n    srcOffset?: number,\n    srcLength?: number\n  ): void;\n\n  uniform1iv(\n    location: WebGLUniformLocation | null,\n    data: Int32Array | ArrayLike<number>,\n    srcOffset?: number,\n    srcLength?: number\n  ): void;\n  uniform2iv(\n    location: WebGLUniformLocation | null,\n    data: Int32Array | ArrayLike<number>,\n    srcOffset?: number,\n    srcLength?: number\n  ): void;\n  uniform3iv(\n    location: WebGLUniformLocation | null,\n    data: Int32Array | ArrayLike<number>,\n    srcOffset?: number,\n    srcLength?: number\n  ): void;\n  uniform4iv(\n    location: WebGLUniformLocation | null,\n    data: Int32Array | ArrayLike<number>,\n    srcOffset?: number,\n    srcLength?: number\n  ): void;\n\n  uniform1uiv(\n    location: WebGLUniformLocation | null,\n    data: Uint32Array | ArrayLike<number>,\n    srcOffset?: number,\n    srcLength?: number\n  ): void;\n  uniform2uiv(\n    location: WebGLUniformLocation | null,\n    data: Uint32Array | ArrayLike<number>,\n    srcOffset?: number,\n    srcLength?: number\n  ): void;\n  uniform3uiv(\n    location: WebGLUniformLocation | null,\n    data: Uint32Array | ArrayLike<number>,\n    srcOffset?: number,\n    srcLength?: number\n  ): void;\n  uniform4uiv(\n    location: WebGLUniformLocation | null,\n    data: Uint32Array | ArrayLike<number>,\n    srcOffset?: number,\n    srcLength?: number\n  ): void;\n\n  uniformMatrix2fv(\n    location: WebGLUniformLocation | null,\n    transpose: boolean,\n    data: Float32Array | ArrayLike<number>,\n    srcOffset?: number,\n    srcLength?: number\n  ): void;\n  uniformMatrix3x2fv(\n    location: WebGLUniformLocation | null,\n    transpose: boolean,\n    data: Float32Array | ArrayLike<number>,\n    srcOffset?: number,\n    srcLength?: number\n  ): void;\n  uniformMatrix4x2fv(\n    location: WebGLUniformLocation | null,\n    transpose: boolean,\n    data: Float32Array | ArrayLike<number>,\n    srcOffset?: number,\n    srcLength?: number\n  ): void;\n\n  uniformMatrix2x3fv(\n    location: WebGLUniformLocation | null,\n    transpose: boolean,\n    data: Float32Array | ArrayLike<number>,\n    srcOffset?: number,\n    srcLength?: number\n  ): void;\n  uniformMatrix3fv(\n    location: WebGLUniformLocation | null,\n    transpose: boolean,\n    data: Float32Array | ArrayLike<number>,\n    srcOffset?: number,\n    srcLength?: number\n  ): void;\n  uniformMatrix4x3fv(\n    location: WebGLUniformLocation | null,\n    transpose: boolean,\n    data: Float32Array | ArrayLike<number>,\n    srcOffset?: number,\n    srcLength?: number\n  ): void;\n\n  uniformMatrix2x4fv(\n    location: WebGLUniformLocation | null,\n    transpose: boolean,\n    data: Float32Array | ArrayLike<number>,\n    srcOffset?: number,\n    srcLength?: number\n  ): void;\n  uniformMatrix3x4fv(\n    location: WebGLUniformLocation | null,\n    transpose: boolean,\n    data: Float32Array | ArrayLike<number>,\n    srcOffset?: number,\n    srcLength?: number\n  ): void;\n  uniformMatrix4fv(\n    location: WebGLUniformLocation | null,\n    transpose: boolean,\n    data: Float32Array | ArrayLike<number>,\n    srcOffset?: number,\n    srcLength?: number\n  ): void;\n\n  /* Vertex attribs */\n  vertexAttribI4i(index: number, x: number, y: number, z: number, w: number): void;\n  vertexAttribI4iv(index: number, values: Int32Array | ArrayLike<number>): void;\n  vertexAttribI4ui(index: number, x: number, y: number, z: number, w: number): void;\n  vertexAttribI4uiv(index: number, values: Uint32Array | ArrayLike<number>): void;\n  vertexAttribIPointer(\n    index: number,\n    size: number,\n    type: number,\n    stride: number,\n    offset: number\n  ): void;\n\n  /* Writing to the drawing buffer */\n  vertexAttribDivisor(index: number, divisor: number): void;\n  drawArraysInstanced(mode: number, first: number, count: number, instanceCount: number): void;\n  drawElementsInstanced(\n    mode: number,\n    count: number,\n    type: number,\n    offset: number,\n    instanceCount: number\n  ): void;\n  drawRangeElements(\n    mode: number,\n    start: number,\n    end: number,\n    count: number,\n    type: number,\n    offset: number\n  ): void;\n\n  /* Reading back pixels */\n  // WebGL1:\n  readPixels(\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    format: number,\n    type: number,\n    dstData:\n      | Int8Array\n      | Int16Array\n      | Int32Array\n      | Uint8Array\n      | Uint16Array\n      | Uint32Array\n      | Uint8ClampedArray\n      | Float32Array\n      | Float64Array\n      | DataView\n      | null\n  ): void;\n  // For compatibility with WebGL 1 context in older Typescript versions.\n  readPixels(\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    format: number,\n    type: number,\n    dstData: ArrayBufferView | null\n  ): void;\n  // WebGL2:\n  readPixels(\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    format: number,\n    type: number,\n    offset: number\n  ): void;\n  readPixels(\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    format: number,\n    type: number,\n    dstData: ArrayBufferView,\n    dstOffset: number\n  ): void;\n\n  /* Multiple Render Targets */\n  drawBuffers(buffers: number[]): void;\n\n  clearBufferfv(\n    buffer: number,\n    drawbuffer: number,\n    values: Float32Array | ArrayLike<number>,\n    srcOffset?: number\n  ): void;\n  clearBufferiv(\n    buffer: number,\n    drawbuffer: number,\n    values: Int32Array | ArrayLike<number>,\n    srcOffset?: number\n  ): void;\n  clearBufferuiv(\n    buffer: number,\n    drawbuffer: number,\n    values: Uint32Array | ArrayLike<number>,\n    srcOffset?: number\n  ): void;\n\n  clearBufferfi(buffer: number, drawbuffer: number, depth: number, stencil: number): void;\n\n  /* Query Objects */\n  createQuery(): WebGLQuery | null;\n  deleteQuery(query: WebGLQuery | null): void;\n  isQuery(query: WebGLQuery | null): boolean; //[WebGLHandlesContextLoss]\n  beginQuery(target: number, query: WebGLQuery): void;\n  endQuery(target: number): void;\n  getQuery(target: number, pname: number): WebGLQuery | null;\n  getQueryParameter(query: WebGLQuery, pname: number): any;\n\n  /* Sampler Objects */\n  createSampler(): WebGLSampler | null;\n  deleteSampler(sampler: WebGLSampler | null): void;\n  isSampler(sampler: WebGLSampler | null): boolean; //[WebGLHandlesContextLoss]\n  bindSampler(unit: number, sampler: WebGLSampler | null): void;\n  samplerParameteri(sampler: WebGLSampler, pname: number, param: number): void;\n  samplerParameterf(sampler: WebGLSampler, pname: number, param: number): void;\n  getSamplerParameter(sampler: WebGLSampler, pname: number): any;\n\n  /* Sync objects */\n  fenceSync(condition: number, flags: number): WebGLSync | null;\n  isSync(sync: WebGLSync | null): boolean; //[WebGLHandlesContextLoss]\n  deleteSync(sync: WebGLSync | null): void;\n  clientWaitSync(sync: WebGLSync, flags: number, timeout: number): number;\n  waitSync(sync: WebGLSync, flags: number, timeout: number): void;\n  getSyncParameter(sync: WebGLSync, pname: number): any;\n\n  /* Transform Feedback */\n  createTransformFeedback(): WebGLTransformFeedback | null;\n  deleteTransformFeedback(tf: WebGLTransformFeedback | null): void;\n  isTransformFeedback(tf: WebGLTransformFeedback | null): boolean; //[WebGLHandlesContextLoss]\n  bindTransformFeedback(target: number, tf: WebGLTransformFeedback | null): void;\n  beginTransformFeedback(primitiveMode: number): void;\n  endTransformFeedback(): void;\n  transformFeedbackVaryings(program: WebGLProgram, varyings: string[], bufferMode: number): void;\n  getTransformFeedbackVarying(program: WebGLProgram, index: number): WebGLActiveInfo | null;\n  pauseTransformFeedback(): void;\n  resumeTransformFeedback(): void;\n\n  /* Uniform Buffer Objects and Transform Feedback Buffers */\n  bindBufferBase(target: number, index: number, buffer: WebGLBuffer | null): void;\n  bindBufferRange(\n    target: number,\n    index: number,\n    buffer: WebGLBuffer | null,\n    offset: number,\n    size: number\n  ): void;\n  getIndexedParameter(target: number, index: number): any;\n  getUniformIndices(program: WebGLProgram, uniformNames: string[]): number[] | null;\n  getActiveUniforms(program: WebGLProgram, uniformIndices: number[], pname: number): any;\n  getUniformBlockIndex(program: WebGLProgram, uniformBlockName: string): number;\n  getActiveUniformBlockParameter(\n    program: WebGLProgram,\n    uniformBlockIndex: number,\n    pname: number\n  ): any;\n  getActiveUniformBlockName(program: WebGLProgram, uniformBlockIndex: number): string | null;\n  uniformBlockBinding(\n    program: WebGLProgram,\n    uniformBlockIndex: number,\n    uniformBlockBinding: number\n  ): void;\n\n  /* Vertex Array Objects */\n  createVertexArray(): WebGLVertexArrayObject | null;\n  deleteVertexArray(vertexArray: WebGLVertexArrayObject | null): void;\n  isVertexArray(vertexArray: WebGLVertexArrayObject | null): boolean; //[WebGLHandlesContextLoss]\n  bindVertexArray(array: WebGLVertexArrayObject | null): void;\n}\n\ninterface WebGLQuery extends WebGLObject {}\ninterface WebGLSampler extends WebGLObject {}\ninterface WebGLSync extends WebGLObject {}\ninterface WebGLTransformFeedback extends WebGLObject {}\ninterface WebGLVertexArrayObject extends WebGLObject {}\n"]}
\ No newline at end of file
+{"version":3,"file":"WebGL2RenderingContext.js","sourceRoot":"","sources":["../src/WebGL2RenderingContext.ts"],"names":[],"mappings":"","sourcesContent":["// TODO: copy-paste from https://github.com/DefinitelyTyped/DefinitelyTyped/blob/5344bfc80508c53a23dae37b860fb0c905ff7b24/types/webgl2/index.d.ts\nimport { WebGLObject } from './types';\nexport default interface WebGL2RenderingCOntext extends WebGLRenderingContext {\n  readonly READ_BUFFER: number; // 0x0C02\n  readonly UNPACK_ROW_LENGTH: number; // 0x0CF2\n  readonly UNPACK_SKIP_ROWS: number; // 0x0CF3\n  readonly UNPACK_SKIP_PIXELS: number; // 0x0CF4\n  readonly PACK_ROW_LENGTH: number; // 0x0D02\n  readonly PACK_SKIP_ROWS: number; // 0x0D03\n  readonly PACK_SKIP_PIXELS: number; // 0x0D04\n  readonly COLOR: number; // 0x1800\n  readonly DEPTH: number; // 0x1801\n  readonly STENCIL: number; // 0x1802\n  readonly RED: number; // 0x1903\n  readonly RGB8: number; // 0x8051\n  readonly RGBA8: number; // 0x8058\n  readonly RGB10_A2: number; // 0x8059\n  readonly TEXTURE_BINDING_3D: number; // 0x806A\n  readonly UNPACK_SKIP_IMAGES: number; // 0x806D\n  readonly UNPACK_IMAGE_HEIGHT: number; // 0x806E\n  readonly TEXTURE_3D: number; // 0x806F\n  readonly TEXTURE_WRAP_R: number; // 0x8072\n  readonly MAX_3D_TEXTURE_SIZE: number; // 0x8073\n  readonly UNSIGNED_INT_2_10_10_10_REV: number; // 0x8368\n  readonly MAX_ELEMENTS_VERTICES: number; // 0x80E8\n  readonly MAX_ELEMENTS_INDICES: number; // 0x80E9\n  readonly TEXTURE_MIN_LOD: number; // 0x813A\n  readonly TEXTURE_MAX_LOD: number; // 0x813B\n  readonly TEXTURE_BASE_LEVEL: number; // 0x813C\n  readonly TEXTURE_MAX_LEVEL: number; // 0x813D\n  readonly MIN: number; // 0x8007\n  readonly MAX: number; // 0x8008\n  readonly DEPTH_COMPONENT24: number; // 0x81A6\n  readonly MAX_TEXTURE_LOD_BIAS: number; // 0x84FD\n  readonly TEXTURE_COMPARE_MODE: number; // 0x884C\n  readonly TEXTURE_COMPARE_FUNC: number; // 0x884D\n  readonly CURRENT_QUERY: number; // 0x8865\n  readonly QUERY_RESULT: number; // 0x8866\n  readonly QUERY_RESULT_AVAILABLE: number; // 0x8867\n  readonly STREAM_READ: number; // 0x88E1\n  readonly STREAM_COPY: number; // 0x88E2\n  readonly STATIC_READ: number; // 0x88E5\n  readonly STATIC_COPY: number; // 0x88E6\n  readonly DYNAMIC_READ: number; // 0x88E9\n  readonly DYNAMIC_COPY: number; // 0x88EA\n  readonly MAX_DRAW_BUFFERS: number; // 0x8824\n  readonly DRAW_BUFFER0: number; // 0x8825\n  readonly DRAW_BUFFER1: number; // 0x8826\n  readonly DRAW_BUFFER2: number; // 0x8827\n  readonly DRAW_BUFFER3: number; // 0x8828\n  readonly DRAW_BUFFER4: number; // 0x8829\n  readonly DRAW_BUFFER5: number; // 0x882A\n  readonly DRAW_BUFFER6: number; // 0x882B\n  readonly DRAW_BUFFER7: number; // 0x882C\n  readonly DRAW_BUFFER8: number; // 0x882D\n  readonly DRAW_BUFFER9: number; // 0x882E\n  readonly DRAW_BUFFER10: number; // 0x882F\n  readonly DRAW_BUFFER11: number; // 0x8830\n  readonly DRAW_BUFFER12: number; // 0x8831\n  readonly DRAW_BUFFER13: number; // 0x8832\n  readonly DRAW_BUFFER14: number; // 0x8833\n  readonly DRAW_BUFFER15: number; // 0x8834\n  readonly MAX_FRAGMENT_UNIFORM_COMPONENTS: number; // 0x8B49\n  readonly MAX_VERTEX_UNIFORM_COMPONENTS: number; // 0x8B4A\n  readonly SAMPLER_3D: number; // 0x8B5F\n  readonly SAMPLER_2D_SHADOW: number; // 0x8B62\n  readonly FRAGMENT_SHADER_DERIVATIVE_HINT: number; // 0x8B8B\n  readonly PIXEL_PACK_BUFFER: number; // 0x88EB\n  readonly PIXEL_UNPACK_BUFFER: number; // 0x88EC\n  readonly PIXEL_PACK_BUFFER_BINDING: number; // 0x88ED\n  readonly PIXEL_UNPACK_BUFFER_BINDING: number; // 0x88EF\n  readonly FLOAT_MAT2x3: number; // 0x8B65\n  readonly FLOAT_MAT2x4: number; // 0x8B66\n  readonly FLOAT_MAT3x2: number; // 0x8B67\n  readonly FLOAT_MAT3x4: number; // 0x8B68\n  readonly FLOAT_MAT4x2: number; // 0x8B69\n  readonly FLOAT_MAT4x3: number; // 0x8B6A\n  readonly SRGB: number; // 0x8C40\n  readonly SRGB8: number; // 0x8C41\n  readonly SRGB8_ALPHA8: number; // 0x8C43\n  readonly COMPARE_REF_TO_TEXTURE: number; // 0x884E\n  readonly RGBA32F: number; // 0x8814\n  readonly RGB32F: number; // 0x8815\n  readonly RGBA16F: number; // 0x881A\n  readonly RGB16F: number; // 0x881B\n  readonly VERTEX_ATTRIB_ARRAY_INTEGER: number; // 0x88FD\n  readonly MAX_ARRAY_TEXTURE_LAYERS: number; // 0x88FF\n  readonly MIN_PROGRAM_TEXEL_OFFSET: number; // 0x8904\n  readonly MAX_PROGRAM_TEXEL_OFFSET: number; // 0x8905\n  readonly MAX_VARYING_COMPONENTS: number; // 0x8B4B\n  readonly TEXTURE_2D_ARRAY: number; // 0x8C1A\n  readonly TEXTURE_BINDING_2D_ARRAY: number; // 0x8C1D\n  readonly R11F_G11F_B10F: number; // 0x8C3A\n  readonly UNSIGNED_INT_10F_11F_11F_REV: number; // 0x8C3B\n  readonly RGB9_E5: number; // 0x8C3D\n  readonly UNSIGNED_INT_5_9_9_9_REV: number; // 0x8C3E\n  readonly TRANSFORM_FEEDBACK_BUFFER_MODE: number; // 0x8C7F\n  readonly MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS: number; // 0x8C80\n  readonly TRANSFORM_FEEDBACK_VARYINGS: number; // 0x8C83\n  readonly TRANSFORM_FEEDBACK_BUFFER_START: number; // 0x8C84\n  readonly TRANSFORM_FEEDBACK_BUFFER_SIZE: number; // 0x8C85\n  readonly TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN: number; // 0x8C88\n  readonly RASTERIZER_DISCARD: number; // 0x8C89\n  readonly MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS: number; // 0x8C8A\n  readonly MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS: number; // 0x8C8B\n  readonly INTERLEAVED_ATTRIBS: number; // 0x8C8C\n  readonly SEPARATE_ATTRIBS: number; // 0x8C8D\n  readonly TRANSFORM_FEEDBACK_BUFFER: number; // 0x8C8E\n  readonly TRANSFORM_FEEDBACK_BUFFER_BINDING: number; // 0x8C8F\n  readonly RGBA32UI: number; // 0x8D70\n  readonly RGB32UI: number; // 0x8D71\n  readonly RGBA16UI: number; // 0x8D76\n  readonly RGB16UI: number; // 0x8D77\n  readonly RGBA8UI: number; // 0x8D7C\n  readonly RGB8UI: number; // 0x8D7D\n  readonly RGBA32I: number; // 0x8D82\n  readonly RGB32I: number; // 0x8D83\n  readonly RGBA16I: number; // 0x8D88\n  readonly RGB16I: number; // 0x8D89\n  readonly RGBA8I: number; // 0x8D8E\n  readonly RGB8I: number; // 0x8D8F\n  readonly RED_INTEGER: number; // 0x8D94\n  readonly RGB_INTEGER: number; // 0x8D98\n  readonly RGBA_INTEGER: number; // 0x8D99\n  readonly SAMPLER_2D_ARRAY: number; // 0x8DC1\n  readonly SAMPLER_2D_ARRAY_SHADOW: number; // 0x8DC4\n  readonly SAMPLER_CUBE_SHADOW: number; // 0x8DC5\n  readonly UNSIGNED_INT_VEC2: number; // 0x8DC6\n  readonly UNSIGNED_INT_VEC3: number; // 0x8DC7\n  readonly UNSIGNED_INT_VEC4: number; // 0x8DC8\n  readonly INT_SAMPLER_2D: number; // 0x8DCA\n  readonly INT_SAMPLER_3D: number; // 0x8DCB\n  readonly INT_SAMPLER_CUBE: number; // 0x8DCC\n  readonly INT_SAMPLER_2D_ARRAY: number; // 0x8DCF\n  readonly UNSIGNED_INT_SAMPLER_2D: number; // 0x8DD2\n  readonly UNSIGNED_INT_SAMPLER_3D: number; // 0x8DD3\n  readonly UNSIGNED_INT_SAMPLER_CUBE: number; // 0x8DD4\n  readonly UNSIGNED_INT_SAMPLER_2D_ARRAY: number; // 0x8DD7\n  readonly DEPTH_COMPONENT32F: number; // 0x8CAC\n  readonly DEPTH32F_STENCIL8: number; // 0x8CAD\n  readonly FLOAT_32_UNSIGNED_INT_24_8_REV: number; // 0x8DAD\n  readonly FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING: number; // 0x8210\n  readonly FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE: number; // 0x8211\n  readonly FRAMEBUFFER_ATTACHMENT_RED_SIZE: number; // 0x8212\n  readonly FRAMEBUFFER_ATTACHMENT_GREEN_SIZE: number; // 0x8213\n  readonly FRAMEBUFFER_ATTACHMENT_BLUE_SIZE: number; // 0x8214\n  readonly FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE: number; // 0x8215\n  readonly FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE: number; // 0x8216\n  readonly FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE: number; // 0x8217\n  readonly FRAMEBUFFER_DEFAULT: number; // 0x8218\n  //readonly DEPTH_STENCIL_ATTACHMENT: number;                      // 0x821A /* Already defined in WebGL1 constants */\n  //readonly DEPTH_STENCIL: number;                                 // 0x84F9 /* Already defined in WebGL1 constants */\n  readonly UNSIGNED_INT_24_8: number; // 0x84FA\n  readonly DEPTH24_STENCIL8: number; // 0x88F0\n  readonly UNSIGNED_NORMALIZED: number; // 0x8C17\n  readonly DRAW_FRAMEBUFFER_BINDING: number; // 0x8CA6 /* Same as FRAMEBUFFER_BINDING */\n  readonly READ_FRAMEBUFFER: number; // 0x8CA8\n  readonly DRAW_FRAMEBUFFER: number; // 0x8CA9\n  readonly READ_FRAMEBUFFER_BINDING: number; // 0x8CAA\n  readonly RENDERBUFFER_SAMPLES: number; // 0x8CAB\n  readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER: number; // 0x8CD4\n  readonly MAX_COLOR_ATTACHMENTS: number; // 0x8CDF\n  readonly COLOR_ATTACHMENT1: number; // 0x8CE1\n  readonly COLOR_ATTACHMENT2: number; // 0x8CE2\n  readonly COLOR_ATTACHMENT3: number; // 0x8CE3\n  readonly COLOR_ATTACHMENT4: number; // 0x8CE4\n  readonly COLOR_ATTACHMENT5: number; // 0x8CE5\n  readonly COLOR_ATTACHMENT6: number; // 0x8CE6\n  readonly COLOR_ATTACHMENT7: number; // 0x8CE7\n  readonly COLOR_ATTACHMENT8: number; // 0x8CE8\n  readonly COLOR_ATTACHMENT9: number; // 0x8CE9\n  readonly COLOR_ATTACHMENT10: number; // 0x8CEA\n  readonly COLOR_ATTACHMENT11: number; // 0x8CEB\n  readonly COLOR_ATTACHMENT12: number; // 0x8CEC\n  readonly COLOR_ATTACHMENT13: number; // 0x8CED\n  readonly COLOR_ATTACHMENT14: number; // 0x8CEE\n  readonly COLOR_ATTACHMENT15: number; // 0x8CEF\n  readonly FRAMEBUFFER_INCOMPLETE_MULTISAMPLE: number; // 0x8D56\n  readonly MAX_SAMPLES: number; // 0x8D57\n  readonly HALF_FLOAT: number; // 0x140B\n  readonly RG: number; // 0x8227\n  readonly RG_INTEGER: number; // 0x8228\n  readonly R8: number; // 0x8229\n  readonly RG8: number; // 0x822B\n  readonly R16F: number; // 0x822D\n  readonly R32F: number; // 0x822E\n  readonly RG16F: number; // 0x822F\n  readonly RG32F: number; // 0x8230\n  readonly R8I: number; // 0x8231\n  readonly R8UI: number; // 0x8232\n  readonly R16I: number; // 0x8233\n  readonly R16UI: number; // 0x8234\n  readonly R32I: number; // 0x8235\n  readonly R32UI: number; // 0x8236\n  readonly RG8I: number; // 0x8237\n  readonly RG8UI: number; // 0x8238\n  readonly RG16I: number; // 0x8239\n  readonly RG16UI: number; // 0x823A\n  readonly RG32I: number; // 0x823B\n  readonly RG32UI: number; // 0x823C\n  readonly VERTEX_ARRAY_BINDING: number; // 0x85B5\n  readonly R8_SNORM: number; // 0x8F94\n  readonly RG8_SNORM: number; // 0x8F95\n  readonly RGB8_SNORM: number; // 0x8F96\n  readonly RGBA8_SNORM: number; // 0x8F97\n  readonly SIGNED_NORMALIZED: number; // 0x8F9C\n  readonly COPY_READ_BUFFER: number; // 0x8F36\n  readonly COPY_WRITE_BUFFER: number; // 0x8F37\n  readonly COPY_READ_BUFFER_BINDING: number; // 0x8F36 /* Same as COPY_READ_BUFFER */\n  readonly COPY_WRITE_BUFFER_BINDING: number; // 0x8F37 /* Same as COPY_WRITE_BUFFER */\n  readonly UNIFORM_BUFFER: number; // 0x8A11\n  readonly UNIFORM_BUFFER_BINDING: number; // 0x8A28\n  readonly UNIFORM_BUFFER_START: number; // 0x8A29\n  readonly UNIFORM_BUFFER_SIZE: number; // 0x8A2A\n  readonly MAX_VERTEX_UNIFORM_BLOCKS: number; // 0x8A2B\n  readonly MAX_FRAGMENT_UNIFORM_BLOCKS: number; // 0x8A2D\n  readonly MAX_COMBINED_UNIFORM_BLOCKS: number; // 0x8A2E\n  readonly MAX_UNIFORM_BUFFER_BINDINGS: number; // 0x8A2F\n  readonly MAX_UNIFORM_BLOCK_SIZE: number; // 0x8A30\n  readonly MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS: number; // 0x8A31\n  readonly MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS: number; // 0x8A33\n  readonly UNIFORM_BUFFER_OFFSET_ALIGNMENT: number; // 0x8A34\n  readonly ACTIVE_UNIFORM_BLOCKS: number; // 0x8A36\n  readonly UNIFORM_TYPE: number; // 0x8A37\n  readonly UNIFORM_SIZE: number; // 0x8A38\n  readonly UNIFORM_BLOCK_INDEX: number; // 0x8A3A\n  readonly UNIFORM_OFFSET: number; // 0x8A3B\n  readonly UNIFORM_ARRAY_STRIDE: number; // 0x8A3C\n  readonly UNIFORM_MATRIX_STRIDE: number; // 0x8A3D\n  readonly UNIFORM_IS_ROW_MAJOR: number; // 0x8A3E\n  readonly UNIFORM_BLOCK_BINDING: number; // 0x8A3F\n  readonly UNIFORM_BLOCK_DATA_SIZE: number; // 0x8A40\n  readonly UNIFORM_BLOCK_ACTIVE_UNIFORMS: number; // 0x8A42\n  readonly UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES: number; // 0x8A43\n  readonly UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER: number; // 0x8A44\n  readonly UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER: number; // 0x8A46\n  readonly INVALID_INDEX: number; // 0xFFFFFFFF\n  readonly MAX_VERTEX_OUTPUT_COMPONENTS: number; // 0x9122\n  readonly MAX_FRAGMENT_INPUT_COMPONENTS: number; // 0x9125\n  readonly MAX_SERVER_WAIT_TIMEOUT: number; // 0x9111\n  readonly OBJECT_TYPE: number; // 0x9112\n  readonly SYNC_CONDITION: number; // 0x9113\n  readonly SYNC_STATUS: number; // 0x9114\n  readonly SYNC_FLAGS: number; // 0x9115\n  readonly SYNC_FENCE: number; // 0x9116\n  readonly SYNC_GPU_COMMANDS_COMPLETE: number; // 0x9117\n  readonly UNSIGNALED: number; // 0x9118\n  readonly SIGNALED: number; // 0x9119\n  readonly ALREADY_SIGNALED: number; // 0x911A\n  readonly TIMEOUT_EXPIRED: number; // 0x911B\n  readonly CONDITION_SATISFIED: number; // 0x911C\n  readonly WAIT_FAILED: number; // 0x911D\n  readonly SYNC_FLUSH_COMMANDS_BIT: number; // 0x00000001\n  readonly VERTEX_ATTRIB_ARRAY_DIVISOR: number; // 0x88FE\n  readonly ANY_SAMPLES_PASSED: number; // 0x8C2F\n  readonly ANY_SAMPLES_PASSED_CONSERVATIVE: number; // 0x8D6A\n  readonly SAMPLER_BINDING: number; // 0x8919\n  readonly RGB10_A2UI: number; // 0x906F\n  readonly INT_2_10_10_10_REV: number; // 0x8D9F\n  readonly TRANSFORM_FEEDBACK: number; // 0x8E22\n  readonly TRANSFORM_FEEDBACK_PAUSED: number; // 0x8E23\n  readonly TRANSFORM_FEEDBACK_ACTIVE: number; // 0x8E24\n  readonly TRANSFORM_FEEDBACK_BINDING: number; // 0x8E25\n  readonly TEXTURE_IMMUTABLE_FORMAT: number; // 0x912F\n  readonly MAX_ELEMENT_INDEX: number; // 0x8D6B\n  readonly TEXTURE_IMMUTABLE_LEVELS: number; // 0x82DF\n\n  readonly TIMEOUT_IGNORED: number; // -1\n\n  /* WebGL-specific enums */\n  readonly MAX_CLIENT_WAIT_TIMEOUT_WEBGL: number; // 0x9247\n\n  /* Buffer objects */\n  // WebGL1:\n  bufferData(\n    target: number,\n    sizeOrData:\n      | number\n      | Int8Array\n      | Int16Array\n      | Int32Array\n      | Uint8Array\n      | Uint16Array\n      | Uint32Array\n      | Uint8ClampedArray\n      | Float32Array\n      | Float64Array\n      | DataView\n      | ArrayBuffer\n      | null,\n    usage: number\n  ): void;\n  bufferSubData(\n    target: number,\n    dstByteOffset: number,\n    srcData:\n      | Int8Array\n      | Int16Array\n      | Int32Array\n      | Uint8Array\n      | Uint16Array\n      | Uint32Array\n      | Uint8ClampedArray\n      | Float32Array\n      | Float64Array\n      | DataView\n      | ArrayBuffer\n      | null\n  ): void;\n  // For compatibility with WebGL 1 context in older Typescript versions.\n  bufferData(target: number, data: ArrayBufferView, usage: number): void;\n  bufferSubData(target: number, dstByteOffset: number, srcData: ArrayBufferView): void;\n  // WebGL2:\n  bufferData(\n    target: number,\n    srcData:\n      | Int8Array\n      | Int16Array\n      | Int32Array\n      | Uint8Array\n      | Uint16Array\n      | Uint32Array\n      | Uint8ClampedArray\n      | Float32Array\n      | Float64Array\n      | DataView\n      | ArrayBuffer\n      | null,\n    usage: number,\n    srcOffset: number,\n    length?: number\n  ): void;\n  bufferSubData(\n    target: number,\n    dstByteOffset: number,\n    srcData: ArrayBufferView,\n    srcOffset: number,\n    length?: number\n  ): void;\n\n  copyBufferSubData(\n    readTarget: number,\n    writeTarget: number,\n    readOffset: number,\n    writeOffset: number,\n    size: number\n  ): void;\n  // MapBufferRange, in particular its read-only and write-only modes,\n  // can not be exposed safely to JavaScript. GetBufferSubData\n  // replaces it for the purpose of fetching data back from the GPU.\n  getBufferSubData(\n    target: number,\n    srcByteOffset: number,\n    dstBuffer: ArrayBufferView,\n    dstOffset?: number,\n    length?: number\n  ): void;\n\n  /* Framebuffer objects */\n  blitFramebuffer(\n    srcX0: number,\n    srcY0: number,\n    srcX1: number,\n    srcY1: number,\n    dstX0: number,\n    dstY0: number,\n    dstX1: number,\n    dstY1: number,\n    mask: number,\n    filter: number\n  ): void;\n  framebufferTextureLayer(\n    target: number,\n    attachment: number,\n    texture: WebGLTexture | null,\n    level: number,\n    layer: number\n  ): void;\n  invalidateFramebuffer(target: number, attachments: number[]): void;\n  invalidateSubFramebuffer(\n    target: number,\n    attachments: number[],\n    x: number,\n    y: number,\n    width: number,\n    height: number\n  ): void;\n  readBuffer(src: number): void;\n\n  /* Renderbuffer objects */\n  getInternalformatParameter(target: number, internalformat: number, pname: number): any;\n  renderbufferStorageMultisample(\n    target: number,\n    samples: number,\n    internalformat: number,\n    width: number,\n    height: number\n  ): void;\n\n  /* Texture objects */\n  texStorage2D(\n    target: number,\n    levels: number,\n    internalformat: number,\n    width: number,\n    height: number\n  ): void;\n  texStorage3D(\n    target: number,\n    levels: number,\n    internalformat: number,\n    width: number,\n    height: number,\n    depth: number\n  ): void;\n\n  // WebGL1 legacy entrypoints:\n  texImage2D(\n    target: number,\n    level: number,\n    internalformat: number,\n    width: number,\n    height: number,\n    border: number,\n    format: number,\n    type: number,\n    pixels?: ArrayBufferView | null\n  ): void;\n  texImage2D(\n    target: number,\n    level: number,\n    internalformat: number,\n    format: number,\n    type: number,\n    source: ImageData | HTMLImageElement | HTMLCanvasElement | HTMLVideoElement\n  ): void; // May throw DOMException\n  texImage2D(\n    target: number,\n    level: number,\n    internalformat: number,\n    format: number,\n    type: number,\n    source: ImageBitmap | ImageData | HTMLImageElement | HTMLCanvasElement | HTMLVideoElement\n  ): void; // May throw DOMException\n\n  texSubImage2D(\n    target: number,\n    level: number,\n    xoffset: number,\n    yoffset: number,\n    width: number,\n    height: number,\n    format: number,\n    type: number,\n    pixels?: ArrayBufferView | null\n  ): void;\n  texSubImage2D(\n    target: number,\n    level: number,\n    xoffset: number,\n    yoffset: number,\n    format: number,\n    type: number,\n    source: ImageData | HTMLImageElement | HTMLCanvasElement | HTMLVideoElement\n  ): void; // May throw DOMException\n  texSubImage2D(\n    target: number,\n    level: number,\n    xoffset: number,\n    yoffset: number,\n    format: number,\n    type: number,\n    source: ImageBitmap | ImageData | HTMLImageElement | HTMLCanvasElement | HTMLVideoElement\n  ): void; // May throw DOMException\n\n  // WebGL2 entrypoints:\n  texImage2D(\n    target: number,\n    level: number,\n    internalformat: number,\n    width: number,\n    height: number,\n    border: number,\n    format: number,\n    type: number,\n    pboOffset: number\n  ): void;\n  texImage2D(\n    target: number,\n    level: number,\n    internalformat: number,\n    width: number,\n    height: number,\n    border: number,\n    format: number,\n    type: number,\n    source: ImageBitmap | ImageData | HTMLImageElement | HTMLCanvasElement | HTMLVideoElement\n  ): void; // May throw DOMException\n  texImage2D(\n    target: number,\n    level: number,\n    internalformat: number,\n    width: number,\n    height: number,\n    border: number,\n    format: number,\n    type: number,\n    srcData: ArrayBufferView,\n    srcOffset: number\n  ): void;\n\n  texImage3D(\n    target: number,\n    level: number,\n    internalformat: number,\n    width: number,\n    height: number,\n    depth: number,\n    border: number,\n    format: number,\n    type: number,\n    pboOffset: number\n  ): void;\n  texImage3D(\n    target: number,\n    level: number,\n    internalformat: number,\n    width: number,\n    height: number,\n    depth: number,\n    border: number,\n    format: number,\n    type: number,\n    source: ImageBitmap | ImageData | HTMLImageElement | HTMLCanvasElement | HTMLVideoElement\n  ): void; // May throw DOMException\n  texImage3D(\n    target: number,\n    level: number,\n    internalformat: number,\n    width: number,\n    height: number,\n    depth: number,\n    border: number,\n    format: number,\n    type: number,\n    srcData: ArrayBufferView | null\n  ): void;\n  texImage3D(\n    target: number,\n    level: number,\n    internalformat: number,\n    width: number,\n    height: number,\n    depth: number,\n    border: number,\n    format: number,\n    type: number,\n    srcData: ArrayBufferView,\n    srcOffset: number\n  ): void;\n\n  texSubImage2D(\n    target: number,\n    level: number,\n    xoffset: number,\n    yoffset: number,\n    width: number,\n    height: number,\n    format: number,\n    type: number,\n    pboOffset: number\n  ): void;\n  texSubImage2D(\n    target: number,\n    level: number,\n    xoffset: number,\n    yoffset: number,\n    width: number,\n    height: number,\n    format: number,\n    type: number,\n    source: ImageBitmap | ImageData | HTMLImageElement | HTMLCanvasElement | HTMLVideoElement\n  ): void; // May throw DOMException\n  texSubImage2D(\n    target: number,\n    level: number,\n    xoffset: number,\n    yoffset: number,\n    width: number,\n    height: number,\n    format: number,\n    type: number,\n    srcData: ArrayBufferView,\n    srcOffset: number\n  ): void;\n\n  texSubImage3D(\n    target: number,\n    level: number,\n    xoffset: number,\n    yoffset: number,\n    zoffset: number,\n    width: number,\n    height: number,\n    depth: number,\n    format: number,\n    type: number,\n    pboOffset: number\n  ): void;\n  texSubImage3D(\n    target: number,\n    level: number,\n    xoffset: number,\n    yoffset: number,\n    zoffset: number,\n    width: number,\n    height: number,\n    depth: number,\n    format: number,\n    type: number,\n    source: ImageBitmap | ImageData | HTMLImageElement | HTMLCanvasElement | HTMLVideoElement\n  ): void; // May throw DOMException\n  texSubImage3D(\n    target: number,\n    level: number,\n    xoffset: number,\n    yoffset: number,\n    zoffset: number,\n    width: number,\n    height: number,\n    depth: number,\n    format: number,\n    type: number,\n    srcData: ArrayBufferView | null,\n    srcOffset?: number\n  ): void;\n\n  copyTexSubImage3D(\n    target: number,\n    level: number,\n    xoffset: number,\n    yoffset: number,\n    zoffset: number,\n    x: number,\n    y: number,\n    width: number,\n    height: number\n  ): void;\n\n  compressedTexImage2D(\n    target: number,\n    level: number,\n    internalformat: number,\n    width: number,\n    height: number,\n    border: number,\n    imageSize: number,\n    offset: number\n  ): void;\n  compressedTexImage2D(\n    target: number,\n    level: number,\n    internalformat: number,\n    width: number,\n    height: number,\n    border: number,\n    srcData:\n      | Int8Array\n      | Int16Array\n      | Int32Array\n      | Uint8Array\n      | Uint16Array\n      | Uint32Array\n      | Uint8ClampedArray\n      | Float32Array\n      | Float64Array\n      | DataView\n      | null,\n    srcOffset?: number,\n    srcLengthOverride?: number\n  ): void;\n  // For compatibility with WebGL 1 context in older Typescript versions.\n  compressedTexImage2D(\n    target: number,\n    level: number,\n    internalformat: number,\n    width: number,\n    height: number,\n    border: number,\n    srcData: ArrayBufferView,\n    srcOffset?: number,\n    srcLengthOverride?: number\n  ): void;\n\n  compressedTexImage3D(\n    target: number,\n    level: number,\n    internalformat: number,\n    width: number,\n    height: number,\n    depth: number,\n    border: number,\n    imageSize: number,\n    offset: number\n  ): void;\n  compressedTexImage3D(\n    target: number,\n    level: number,\n    internalformat: number,\n    width: number,\n    height: number,\n    depth: number,\n    border: number,\n    srcData: ArrayBufferView,\n    srcOffset?: number,\n    srcLengthOverride?: number\n  ): void;\n\n  compressedTexSubImage2D(\n    target: number,\n    level: number,\n    xoffset: number,\n    yoffset: number,\n    width: number,\n    height: number,\n    format: number,\n    imageSize: number,\n    offset: number\n  ): void;\n  compressedTexSubImage2D(\n    target: number,\n    level: number,\n    xoffset: number,\n    yoffset: number,\n    width: number,\n    height: number,\n    format: number,\n    srcData:\n      | Int8Array\n      | Int16Array\n      | Int32Array\n      | Uint8Array\n      | Uint16Array\n      | Uint32Array\n      | Uint8ClampedArray\n      | Float32Array\n      | Float64Array\n      | DataView\n      | null,\n    srcOffset?: number,\n    srcLengthOverride?: number\n  ): void;\n  // For compatibility with WebGL 1 context in older Typescript versions.\n  compressedTexSubImage2D(\n    target: number,\n    level: number,\n    xoffset: number,\n    yoffset: number,\n    width: number,\n    height: number,\n    format: number,\n    srcData: ArrayBufferView | null,\n    srcOffset?: number,\n    srcLengthOverride?: number\n  ): void;\n\n  compressedTexSubImage3D(\n    target: number,\n    level: number,\n    xoffset: number,\n    yoffset: number,\n    zoffset: number,\n    width: number,\n    height: number,\n    depth: number,\n    format: number,\n    imageSize: number,\n    offset: number\n  ): void;\n  compressedTexSubImage3D(\n    target: number,\n    level: number,\n    xoffset: number,\n    yoffset: number,\n    zoffset: number,\n    width: number,\n    height: number,\n    depth: number,\n    format: number,\n    srcData: ArrayBufferView,\n    srcOffset?: number,\n    srcLengthOverride?: number\n  ): void;\n\n  /* Programs and shaders */\n  getFragDataLocation(program: WebGLProgram, name: string): number;\n\n  /* Uniforms */\n  uniform1ui(location: WebGLUniformLocation | null, v0: number): void;\n  uniform2ui(location: WebGLUniformLocation | null, v0: number, v1: number): void;\n  uniform3ui(location: WebGLUniformLocation | null, v0: number, v1: number, v2: number): void;\n  uniform4ui(\n    location: WebGLUniformLocation | null,\n    v0: number,\n    v1: number,\n    v2: number,\n    v3: number\n  ): void;\n\n  uniform1fv(\n    location: WebGLUniformLocation | null,\n    data: Float32Array | ArrayLike<number>,\n    srcOffset?: number,\n    srcLength?: number\n  ): void;\n  uniform2fv(\n    location: WebGLUniformLocation | null,\n    data: Float32Array | ArrayLike<number>,\n    srcOffset?: number,\n    srcLength?: number\n  ): void;\n  uniform3fv(\n    location: WebGLUniformLocation | null,\n    data: Float32Array | ArrayLike<number>,\n    srcOffset?: number,\n    srcLength?: number\n  ): void;\n  uniform4fv(\n    location: WebGLUniformLocation | null,\n    data: Float32Array | ArrayLike<number>,\n    srcOffset?: number,\n    srcLength?: number\n  ): void;\n\n  uniform1iv(\n    location: WebGLUniformLocation | null,\n    data: Int32Array | ArrayLike<number>,\n    srcOffset?: number,\n    srcLength?: number\n  ): void;\n  uniform2iv(\n    location: WebGLUniformLocation | null,\n    data: Int32Array | ArrayLike<number>,\n    srcOffset?: number,\n    srcLength?: number\n  ): void;\n  uniform3iv(\n    location: WebGLUniformLocation | null,\n    data: Int32Array | ArrayLike<number>,\n    srcOffset?: number,\n    srcLength?: number\n  ): void;\n  uniform4iv(\n    location: WebGLUniformLocation | null,\n    data: Int32Array | ArrayLike<number>,\n    srcOffset?: number,\n    srcLength?: number\n  ): void;\n\n  uniform1uiv(\n    location: WebGLUniformLocation | null,\n    data: Uint32Array | ArrayLike<number>,\n    srcOffset?: number,\n    srcLength?: number\n  ): void;\n  uniform2uiv(\n    location: WebGLUniformLocation | null,\n    data: Uint32Array | ArrayLike<number>,\n    srcOffset?: number,\n    srcLength?: number\n  ): void;\n  uniform3uiv(\n    location: WebGLUniformLocation | null,\n    data: Uint32Array | ArrayLike<number>,\n    srcOffset?: number,\n    srcLength?: number\n  ): void;\n  uniform4uiv(\n    location: WebGLUniformLocation | null,\n    data: Uint32Array | ArrayLike<number>,\n    srcOffset?: number,\n    srcLength?: number\n  ): void;\n\n  uniformMatrix2fv(\n    location: WebGLUniformLocation | null,\n    transpose: boolean,\n    data: Float32Array | ArrayLike<number>,\n    srcOffset?: number,\n    srcLength?: number\n  ): void;\n  uniformMatrix3x2fv(\n    location: WebGLUniformLocation | null,\n    transpose: boolean,\n    data: Float32Array | ArrayLike<number>,\n    srcOffset?: number,\n    srcLength?: number\n  ): void;\n  uniformMatrix4x2fv(\n    location: WebGLUniformLocation | null,\n    transpose: boolean,\n    data: Float32Array | ArrayLike<number>,\n    srcOffset?: number,\n    srcLength?: number\n  ): void;\n\n  uniformMatrix2x3fv(\n    location: WebGLUniformLocation | null,\n    transpose: boolean,\n    data: Float32Array | ArrayLike<number>,\n    srcOffset?: number,\n    srcLength?: number\n  ): void;\n  uniformMatrix3fv(\n    location: WebGLUniformLocation | null,\n    transpose: boolean,\n    data: Float32Array | ArrayLike<number>,\n    srcOffset?: number,\n    srcLength?: number\n  ): void;\n  uniformMatrix4x3fv(\n    location: WebGLUniformLocation | null,\n    transpose: boolean,\n    data: Float32Array | ArrayLike<number>,\n    srcOffset?: number,\n    srcLength?: number\n  ): void;\n\n  uniformMatrix2x4fv(\n    location: WebGLUniformLocation | null,\n    transpose: boolean,\n    data: Float32Array | ArrayLike<number>,\n    srcOffset?: number,\n    srcLength?: number\n  ): void;\n  uniformMatrix3x4fv(\n    location: WebGLUniformLocation | null,\n    transpose: boolean,\n    data: Float32Array | ArrayLike<number>,\n    srcOffset?: number,\n    srcLength?: number\n  ): void;\n  uniformMatrix4fv(\n    location: WebGLUniformLocation | null,\n    transpose: boolean,\n    data: Float32Array | ArrayLike<number>,\n    srcOffset?: number,\n    srcLength?: number\n  ): void;\n\n  /* Vertex attribs */\n  vertexAttribI4i(index: number, x: number, y: number, z: number, w: number): void;\n  vertexAttribI4iv(index: number, values: Int32Array | ArrayLike<number>): void;\n  vertexAttribI4ui(index: number, x: number, y: number, z: number, w: number): void;\n  vertexAttribI4uiv(index: number, values: Uint32Array | ArrayLike<number>): void;\n  vertexAttribIPointer(\n    index: number,\n    size: number,\n    type: number,\n    stride: number,\n    offset: number\n  ): void;\n\n  /* Writing to the drawing buffer */\n  vertexAttribDivisor(index: number, divisor: number): void;\n  drawArraysInstanced(mode: number, first: number, count: number, instanceCount: number): void;\n  drawElementsInstanced(\n    mode: number,\n    count: number,\n    type: number,\n    offset: number,\n    instanceCount: number\n  ): void;\n  drawRangeElements(\n    mode: number,\n    start: number,\n    end: number,\n    count: number,\n    type: number,\n    offset: number\n  ): void;\n\n  /* Reading back pixels */\n  // WebGL1:\n  readPixels(\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    format: number,\n    type: number,\n    dstData:\n      | Int8Array\n      | Int16Array\n      | Int32Array\n      | Uint8Array\n      | Uint16Array\n      | Uint32Array\n      | Uint8ClampedArray\n      | Float32Array\n      | Float64Array\n      | DataView\n      | null\n  ): void;\n  // For compatibility with WebGL 1 context in older Typescript versions.\n  readPixels(\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    format: number,\n    type: number,\n    dstData: ArrayBufferView | null\n  ): void;\n  // WebGL2:\n  readPixels(\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    format: number,\n    type: number,\n    offset: number\n  ): void;\n  readPixels(\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    format: number,\n    type: number,\n    dstData: ArrayBufferView,\n    dstOffset: number\n  ): void;\n\n  /* Multiple Render Targets */\n  drawBuffers(buffers: number[]): void;\n\n  clearBufferfv(\n    buffer: number,\n    drawbuffer: number,\n    values: Float32Array | ArrayLike<number>,\n    srcOffset?: number\n  ): void;\n  clearBufferiv(\n    buffer: number,\n    drawbuffer: number,\n    values: Int32Array | ArrayLike<number>,\n    srcOffset?: number\n  ): void;\n  clearBufferuiv(\n    buffer: number,\n    drawbuffer: number,\n    values: Uint32Array | ArrayLike<number>,\n    srcOffset?: number\n  ): void;\n\n  clearBufferfi(buffer: number, drawbuffer: number, depth: number, stencil: number): void;\n\n  /* Query Objects */\n  createQuery(): WebGLQuery | null;\n  deleteQuery(query: WebGLQuery | null): void;\n  isQuery(query: WebGLQuery | null): boolean; //[WebGLHandlesContextLoss]\n  beginQuery(target: number, query: WebGLQuery): void;\n  endQuery(target: number): void;\n  getQuery(target: number, pname: number): WebGLQuery | null;\n  getQueryParameter(query: WebGLQuery, pname: number): any;\n\n  /* Sampler Objects */\n  createSampler(): WebGLSampler | null;\n  deleteSampler(sampler: WebGLSampler | null): void;\n  isSampler(sampler: WebGLSampler | null): boolean; //[WebGLHandlesContextLoss]\n  bindSampler(unit: number, sampler: WebGLSampler | null): void;\n  samplerParameteri(sampler: WebGLSampler, pname: number, param: number): void;\n  samplerParameterf(sampler: WebGLSampler, pname: number, param: number): void;\n  getSamplerParameter(sampler: WebGLSampler, pname: number): any;\n\n  /* Sync objects */\n  fenceSync(condition: number, flags: number): WebGLSync | null;\n  isSync(sync: WebGLSync | null): boolean; //[WebGLHandlesContextLoss]\n  deleteSync(sync: WebGLSync | null): void;\n  clientWaitSync(sync: WebGLSync, flags: number, timeout: number): number;\n  waitSync(sync: WebGLSync, flags: number, timeout: number): void;\n  getSyncParameter(sync: WebGLSync, pname: number): any;\n\n  /* Transform Feedback */\n  createTransformFeedback(): WebGLTransformFeedback | null;\n  deleteTransformFeedback(tf: WebGLTransformFeedback | null): void;\n  isTransformFeedback(tf: WebGLTransformFeedback | null): boolean; //[WebGLHandlesContextLoss]\n  bindTransformFeedback(target: number, tf: WebGLTransformFeedback | null): void;\n  beginTransformFeedback(primitiveMode: number): void;\n  endTransformFeedback(): void;\n  transformFeedbackVaryings(program: WebGLProgram, varyings: string[], bufferMode: number): void;\n  getTransformFeedbackVarying(program: WebGLProgram, index: number): WebGLActiveInfo | null;\n  pauseTransformFeedback(): void;\n  resumeTransformFeedback(): void;\n\n  /* Uniform Buffer Objects and Transform Feedback Buffers */\n  bindBufferBase(target: number, index: number, buffer: WebGLBuffer | null): void;\n  bindBufferRange(\n    target: number,\n    index: number,\n    buffer: WebGLBuffer | null,\n    offset: number,\n    size: number\n  ): void;\n  getIndexedParameter(target: number, index: number): any;\n  getUniformIndices(program: WebGLProgram, uniformNames: string[]): number[] | null;\n  getActiveUniforms(program: WebGLProgram, uniformIndices: number[], pname: number): any;\n  getUniformBlockIndex(program: WebGLProgram, uniformBlockName: string): number;\n  getActiveUniformBlockParameter(\n    program: WebGLProgram,\n    uniformBlockIndex: number,\n    pname: number\n  ): any;\n  getActiveUniformBlockName(program: WebGLProgram, uniformBlockIndex: number): string | null;\n  uniformBlockBinding(\n    program: WebGLProgram,\n    uniformBlockIndex: number,\n    uniformBlockBinding: number\n  ): void;\n\n  /* Vertex Array Objects */\n  createVertexArray(): WebGLVertexArrayObject | null;\n  deleteVertexArray(vertexArray: WebGLVertexArrayObject | null): void;\n  isVertexArray(vertexArray: WebGLVertexArrayObject | null): boolean; //[WebGLHandlesContextLoss]\n  bindVertexArray(array: WebGLVertexArrayObject | null): void;\n}\n\ninterface WebGLQuery extends WebGLObject {}\ninterface WebGLSampler extends WebGLObject {}\ninterface WebGLSync extends WebGLObject {}\ninterface WebGLTransformFeedback extends WebGLObject {}\ninterface WebGLVertexArrayObject extends WebGLObject {}\n"]}
\ No newline at end of file
diff --git a/node_modules/expo-gl/build/types.d.ts b/node_modules/expo-gl/build/types.d.ts
new file mode 100644
index 0000000..f584b49
--- /dev/null
+++ b/node_modules/expo-gl/build/types.d.ts
@@ -0,0 +1,2 @@
+export interface WebGLObject {
+}
diff --git a/node_modules/expo-gl/build/types.js b/node_modules/expo-gl/build/types.js
new file mode 100644
index 0000000..718fd38
--- /dev/null
+++ b/node_modules/expo-gl/build/types.js
@@ -0,0 +1,2 @@
+export {};
+//# sourceMappingURL=types.js.map
\ No newline at end of file
diff --git a/node_modules/expo-gl/build/types.js.map b/node_modules/expo-gl/build/types.js.map
new file mode 100644
index 0000000..4fc88f2
--- /dev/null
+++ b/node_modules/expo-gl/build/types.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"types.js","sourceRoot":"","sources":["../src/types.ts"],"names":[],"mappings":"","sourcesContent":["// WebGLObject was removed from lib.dom.ts in v4.2 - copied from the old lib.dom.ts\n// ref: https://github.com/microsoft/TypeScript/blob/bc76e7f03c6a80706246f7c35e392bfc88a93ac3/lib/lib.dom.d.ts#L17355-L17361\nexport interface WebGLObject {}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\ndeclare let WebGLObject: {\n  prototype: WebGLObject;\n  new (): WebGLObject;\n};\n"]}
\ No newline at end of file
diff --git a/node_modules/expo-gl/ios/EXGL.podspec b/node_modules/expo-gl/ios/EXGL.podspec
index e95c5ae..45c0191 100644
--- a/node_modules/expo-gl/ios/EXGL.podspec
+++ b/node_modules/expo-gl/ios/EXGL.podspec
@@ -10,10 +10,9 @@ Pod::Spec.new do |s|
   s.license         = package['license']
   s.author          = package['author']
   s.homepage        = package['homepage']
-  s.platform        = :ios, '11.0'
+  s.platform        = :ios, '12.0'
   s.source          = { git: 'https://github.com/expo/expo-gl.git' }
 
-  s.dependency 'UMCore'
   s.dependency 'ExpoModulesCore'
   s.dependency 'EXGL_CPP'
 
diff --git a/node_modules/expo-gl/ios/EXGL.xcframework/Info.plist b/node_modules/expo-gl/ios/EXGL.xcframework/Info.plist
deleted file mode 100644
index ba85572..0000000
--- a/node_modules/expo-gl/ios/EXGL.xcframework/Info.plist
+++ /dev/null
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
-<plist version="1.0">
-<dict>
-	<key>AvailableLibraries</key>
-	<array>
-		<dict>
-			<key>LibraryIdentifier</key>
-			<string>ios-arm64</string>
-			<key>LibraryPath</key>
-			<string>EXGL.framework</string>
-			<key>SupportedArchitectures</key>
-			<array>
-				<string>arm64</string>
-			</array>
-			<key>SupportedPlatform</key>
-			<string>ios</string>
-		</dict>
-		<dict>
-			<key>LibraryIdentifier</key>
-			<string>ios-arm64_x86_64-simulator</string>
-			<key>LibraryPath</key>
-			<string>EXGL.framework</string>
-			<key>SupportedArchitectures</key>
-			<array>
-				<string>arm64</string>
-				<string>x86_64</string>
-			</array>
-			<key>SupportedPlatform</key>
-			<string>ios</string>
-			<key>SupportedPlatformVariant</key>
-			<string>simulator</string>
-		</dict>
-	</array>
-	<key>CFBundlePackageType</key>
-	<string>XFWK</string>
-	<key>XCFrameworkFormatVersion</key>
-	<string>1.0</string>
-</dict>
-</plist>
diff --git a/node_modules/expo-gl/ios/EXGL.xcframework/ios-arm64/EXGL.framework/EXGL b/node_modules/expo-gl/ios/EXGL.xcframework/ios-arm64/EXGL.framework/EXGL
deleted file mode 100644
index edd1e5d..0000000
Binary files a/node_modules/expo-gl/ios/EXGL.xcframework/ios-arm64/EXGL.framework/EXGL and /dev/null differ
diff --git a/node_modules/expo-gl/ios/EXGL.xcframework/ios-arm64/EXGL.framework/Info.plist b/node_modules/expo-gl/ios/EXGL.xcframework/ios-arm64/EXGL.framework/Info.plist
deleted file mode 100644
index a875eab..0000000
Binary files a/node_modules/expo-gl/ios/EXGL.xcframework/ios-arm64/EXGL.framework/Info.plist and /dev/null differ
diff --git a/node_modules/expo-gl/ios/EXGL.xcframework/ios-arm64_x86_64-simulator/EXGL.framework/EXGL b/node_modules/expo-gl/ios/EXGL.xcframework/ios-arm64_x86_64-simulator/EXGL.framework/EXGL
deleted file mode 100644
index be69ee3..0000000
Binary files a/node_modules/expo-gl/ios/EXGL.xcframework/ios-arm64_x86_64-simulator/EXGL.framework/EXGL and /dev/null differ
diff --git a/node_modules/expo-gl/ios/EXGL.xcframework/ios-arm64_x86_64-simulator/EXGL.framework/Info.plist b/node_modules/expo-gl/ios/EXGL.xcframework/ios-arm64_x86_64-simulator/EXGL.framework/Info.plist
deleted file mode 100644
index dffd2fa..0000000
Binary files a/node_modules/expo-gl/ios/EXGL.xcframework/ios-arm64_x86_64-simulator/EXGL.framework/Info.plist and /dev/null differ
diff --git a/node_modules/expo-gl/ios/EXGL/EXGLContext.h b/node_modules/expo-gl/ios/EXGL/EXGLContext.h
index eaeafa7..c4d8173 100644
--- a/node_modules/expo-gl/ios/EXGL/EXGLContext.h
+++ b/node_modules/expo-gl/ios/EXGL/EXGLContext.h
@@ -2,7 +2,7 @@
 
 #import <OpenGLES/EAGL.h>
 #import <EXGL_CPP/UEXGL.h>
-#import <UMCore/UMModuleRegistry.h>
+#import <ExpoModulesCore/EXModuleRegistry.h>
 
 @class EXGLContext;
 
@@ -17,13 +17,13 @@
 
 @interface EXGLContext : NSObject
 
-- (nullable instancetype)initWithDelegate:(nullable id<EXGLContextDelegate>)delegate andModuleRegistry:(nonnull UMModuleRegistry *)moduleRegistry;
+- (nullable instancetype)initWithDelegate:(nullable id<EXGLContextDelegate>)delegate andModuleRegistry:(nonnull EXModuleRegistry *)moduleRegistry;
 - (void)initialize:(nullable void(^)(BOOL))callback;
 - (BOOL)isInitialized;
 - (nullable EAGLContext *)createSharedEAGLContext;
 - (void)runAsync:(nonnull void(^)(void))callback;
 - (void)runInEAGLContext:(nonnull EAGLContext*)context callback:(nonnull void(^)(void))callback;
-- (void)takeSnapshotWithOptions:(nonnull NSDictionary *)options resolve:(nonnull UMPromiseResolveBlock)resolve reject:(nonnull UMPromiseRejectBlock)reject;
+- (void)takeSnapshotWithOptions:(nonnull NSDictionary *)options resolve:(nonnull EXPromiseResolveBlock)resolve reject:(nonnull EXPromiseRejectBlock)reject;
 - (void)destroy;
 
 // "protected"
diff --git a/node_modules/expo-gl/ios/EXGL/EXGLContext.m b/node_modules/expo-gl/ios/EXGL/EXGLContext.m
index 984ec19..6d07fbe 100644
--- a/node_modules/expo-gl/ios/EXGL/EXGLContext.m
+++ b/node_modules/expo-gl/ios/EXGL/EXGLContext.m
@@ -3,9 +3,9 @@
 #import <EXGL/EXGLContext.h>
 #import <EXGL/EXGLObjectManager.h>
 
-#import <UMCore/UMUtilities.h>
-#import <UMCore/UMUIManager.h>
-#import <UMCore/UMJavaScriptContextProvider.h>
+#import <ExpoModulesCore/EXUtilities.h>
+#import <ExpoModulesCore/EXUIManager.h>
+#import <ExpoModulesCore/EXJavaScriptContextProvider.h>
 #import <ExpoModulesCore/EXFileSystemInterface.h>
 
 #include <OpenGLES/ES3/gl.h>
@@ -16,14 +16,14 @@
 @interface EXGLContext ()
 
 @property (nonatomic, strong) dispatch_queue_t glQueue;
-@property (nonatomic, weak) UMModuleRegistry *moduleRegistry;
+@property (nonatomic, weak) EXModuleRegistry *moduleRegistry;
 @property (nonatomic, weak) EXGLObjectManager *objectManager;
 
 @end
 
 @implementation EXGLContext
 
-- (instancetype)initWithDelegate:(id<EXGLContextDelegate>)delegate andModuleRegistry:(nonnull UMModuleRegistry *)moduleRegistry
+- (instancetype)initWithDelegate:(id<EXGLContextDelegate>)delegate andModuleRegistry:(nonnull EXModuleRegistry *)moduleRegistry
 {
   if (self = [super init]) {
     self.delegate = delegate;
@@ -65,8 +65,8 @@ - (void)runAsync:(void(^)(void))callback
 
 - (void)initialize:(void(^)(BOOL))callback
 {
-  id<UMUIManager> uiManager = [_moduleRegistry getModuleImplementingProtocol:@protocol(UMUIManager)];
-  id<UMJavaScriptContextProvider> jsContextProvider = [_moduleRegistry getModuleImplementingProtocol:@protocol(UMJavaScriptContextProvider)];
+  id<EXUIManager> uiManager = [_moduleRegistry getModuleImplementingProtocol:@protocol(EXUIManager)];
+  id<EXJavaScriptContextProvider> jsContextProvider = [_moduleRegistry getModuleImplementingProtocol:@protocol(EXJavaScriptContextProvider)];
 
   void *jsRuntimePtr = [jsContextProvider javaScriptRuntimePointer];
 
@@ -76,7 +76,7 @@ - (void)initialize:(void(^)(BOOL))callback
 
     [uiManager dispatchOnClientThread:^{
       EXGLContext *self = weakSelf;
-      id<UMUIManager> uiManager = weakUIManager;
+      id<EXUIManager> uiManager = weakUIManager;
 
       if (!self || !uiManager) {
         BLOCK_SAFE_RUN(callback, NO);
@@ -97,7 +97,7 @@ - (void)initialize:(void(^)(BOOL))callback
     }];
   } else {
     BLOCK_SAFE_RUN(callback, NO);
-    UMLogWarn(@"EXGL: Can only run on JavaScriptCore! Do you have 'Remote Debugging' enabled in your app's Developer Menu (https://reactnative.dev/docs/debugging)? EXGL is not supported while using Remote Debugging, you will need to disable it to use EXGL.");
+    EXLogWarn(@"EXGL: Can only run on JavaScriptCore! Do you have 'Remote Debugging' enabled in your app's Developer Menu (https://reactnative.dev/docs/debugging)? EXGL is not supported while using Remote Debugging, you will need to disable it to use EXGL.");
   }
 }
 
@@ -140,8 +140,8 @@ - (void)destroy
 // - `format`: "jpeg" or "png" - specifies what type of compression and file extension should be used.
 // - `compress`: A value in 0 - 1 range specyfing compression level. JPEG format only.
 - (void)takeSnapshotWithOptions:(nonnull NSDictionary *)options
-                        resolve:(UMPromiseResolveBlock)resolve
-                         reject:(UMPromiseRejectBlock)reject
+                        resolve:(EXPromiseResolveBlock)resolve
+                         reject:(EXPromiseRejectBlock)reject
 {
   [self flush];
 
@@ -174,7 +174,7 @@ - (void)takeSnapshotWithOptions:(nonnull NSDictionary *)options
       reject(
              @"E_GL_NO_FRAMEBUFFER",
              nil,
-             UMErrorWithMessage(@"No framebuffer bound. Create and bind one to take a snapshot from it.")
+             EXErrorWithMessage(@"No framebuffer bound. Create and bind one to take a snapshot from it.")
              );
       return;
     }
@@ -182,7 +182,7 @@ - (void)takeSnapshotWithOptions:(nonnull NSDictionary *)options
       reject(
              @"E_GL_INVALID_VIEWPORT",
              nil,
-             UMErrorWithMessage(@"Rect's width and height must be greater than 0. If you didn't set `rect` option, check if the viewport is set correctly.")
+             EXErrorWithMessage(@"Rect's width and height must be greater than 0. If you didn't set `rect` option, check if the viewport is set correctly.")
              );
       return;
     }
@@ -203,7 +203,7 @@ - (void)takeSnapshotWithOptions:(nonnull NSDictionary *)options
                                         providerRef, NULL, true, kCGRenderingIntentDefault);
 
     // Begin image context
-    CGFloat scale = [UMUtilities screenScale];
+    CGFloat scale = [EXUtilities screenScale];
     NSInteger widthInPoints = width / scale;
     NSInteger heightInPoints = height / scale;
     UIGraphicsBeginImageContextWithOptions(CGSizeMake(widthInPoints, heightInPoints), NO, scale);
@@ -231,7 +231,7 @@ - (void)takeSnapshotWithOptions:(nonnull NSDictionary *)options
     NSString *extension;
 
     if ([format isEqualToString:@"webp"]) {
-      UMLogWarn(@"iOS doesn't support 'webp' representation, so 'takeSnapshot' won't work with that format. The image is going to be exported as 'png', but consider using a different code for iOS. Check this docs to learn how to do platform specific code (https://reactnative.dev/docs/platform-specific-code)");
+      EXLogWarn(@"iOS doesn't support 'webp' representation, so 'takeSnapshot' won't work with that format. The image is going to be exported as 'png', but consider using a different code for iOS. Check this docs to learn how to do platform specific code (https://reactnative.dev/docs/platform-specific-code)");
       imageData = UIImagePNGRepresentation(image);
       extension = @".png";
     }
diff --git a/node_modules/expo-gl/ios/EXGL/EXGLObjectManager.h b/node_modules/expo-gl/ios/EXGL/EXGLObjectManager.h
index 990828f..51ef7c0 100644
--- a/node_modules/expo-gl/ios/EXGL/EXGLObjectManager.h
+++ b/node_modules/expo-gl/ios/EXGL/EXGLObjectManager.h
@@ -1,14 +1,14 @@
 // Copyright 2016-present 650 Industries. All rights reserved.
 
-#import <UMCore/UMExportedModule.h>
-#import <UMCore/UMModuleRegistryConsumer.h>
+#import <ExpoModulesCore/EXExportedModule.h>
+#import <ExpoModulesCore/EXModuleRegistryConsumer.h>
 
-#import <UMCore/UMUIManager.h>
+#import <ExpoModulesCore/EXUIManager.h>
 #import <ExpoModulesCore/EXFileSystemInterface.h>
 
-@interface EXGLObjectManager : UMExportedModule <UMModuleRegistryConsumer>
+@interface EXGLObjectManager : EXExportedModule <EXModuleRegistryConsumer>
 
-@property (nonatomic, weak, nullable) id<UMUIManager> uiManager;
+@property (nonatomic, weak, nullable) id<EXUIManager> uiManager;
 @property (nonatomic, weak, nullable) id<EXFileSystemInterface> fileSystem;
 
 - (void)saveContext:(nonnull id)glContext;
diff --git a/node_modules/expo-gl/ios/EXGL/EXGLObjectManager.m b/node_modules/expo-gl/ios/EXGL/EXGLObjectManager.m
index 4947bee..171888b 100644
--- a/node_modules/expo-gl/ios/EXGL/EXGLObjectManager.m
+++ b/node_modules/expo-gl/ios/EXGL/EXGLObjectManager.m
@@ -1,7 +1,7 @@
 // Copyright 2016-present 650 Industries. All rights reserved.
 
-#import <UMCore/UMModuleRegistry.h>
-#import <UMCore/UMUIManager.h>
+#import <ExpoModulesCore/EXModuleRegistry.h>
+#import <ExpoModulesCore/EXUIManager.h>
 #import <ExpoModulesCore/EXCameraInterface.h>
 
 #import <EXGL/EXGLObjectManager.h>
@@ -11,7 +11,7 @@
 
 @interface EXGLObjectManager ()
 
-@property (nonatomic, weak) UMModuleRegistry *moduleRegistry;
+@property (nonatomic, weak) EXModuleRegistry *moduleRegistry;
 @property (nonatomic, strong) NSMutableDictionary<NSNumber *, EXGLContext *> *glContexts;
 @property (nonatomic, strong) NSMutableDictionary<NSNumber *, EXGLObject *> *objects; // Key is `EXGLObjectId`
 
@@ -19,7 +19,7 @@ @interface EXGLObjectManager ()
 
 @implementation EXGLObjectManager
 
-UM_REGISTER_MODULE();
+EX_REGISTER_MODULE();
 
 + (const NSString *)exportedModuleName
 {
@@ -40,10 +40,10 @@ - (dispatch_queue_t)methodQueue
   return dispatch_queue_create("host.exp.exponent.GLObjectManager", DISPATCH_QUEUE_SERIAL);
 }
 
-- (void)setModuleRegistry:(UMModuleRegistry *)moduleRegistry
+- (void)setModuleRegistry:(EXModuleRegistry *)moduleRegistry
 {
   _moduleRegistry = moduleRegistry;
-  _uiManager = [moduleRegistry getModuleImplementingProtocol:@protocol(UMUIManager)];
+  _uiManager = [moduleRegistry getModuleImplementingProtocol:@protocol(EXUIManager)];
   _fileSystem = [moduleRegistry getModuleImplementingProtocol:@protocol(EXFileSystemInterface)];
 }
 
@@ -74,16 +74,16 @@ - (void)dealloc
 
 # pragma mark - Snapshots
 
-UM_EXPORT_METHOD_AS(takeSnapshotAsync,
+EX_EXPORT_METHOD_AS(takeSnapshotAsync,
                     takeSnapshotWithContextId:(nonnull NSNumber *)exglCtxId
                     andOptions:(nonnull NSDictionary *)options
-                    resolver:(UMPromiseResolveBlock)resolve
-                    rejecter:(UMPromiseRejectBlock)reject)
+                    resolver:(EXPromiseResolveBlock)resolve
+                    rejecter:(EXPromiseRejectBlock)reject)
 {
   EXGLContext *glContext = [self getContextWithId:exglCtxId];
   
   if (glContext == nil) {
-    reject(@"E_GL_BAD_VIEW_TAG", nil, UMErrorWithMessage(@"ExponentGLObjectManager.takeSnapshotAsync: EXGLContext not found for given context id."));
+    reject(@"E_GL_BAD_VIEW_TAG", nil, EXErrorWithMessage(@"ExponentGLObjectManager.takeSnapshotAsync: EXGLContext not found for given context id."));
     return;
   }
   
@@ -92,9 +92,9 @@ - (void)dealloc
 
 # pragma mark - Headless Context
 
-UM_EXPORT_METHOD_AS(createContextAsync,
-                    createContext:(UMPromiseResolveBlock)resolve
-                    reject:(UMPromiseRejectBlock)reject)
+EX_EXPORT_METHOD_AS(createContextAsync,
+                    createContext:(EXPromiseResolveBlock)resolve
+                    reject:(EXPromiseRejectBlock)reject)
 {
   EXGLContext *glContext = [[EXGLContext alloc] initWithDelegate:nil andModuleRegistry:_moduleRegistry];
   
@@ -105,16 +105,16 @@ - (void)dealloc
       reject(
              @"E_GL_CONTEXT_NOT_INITIALIZED",
              nil,
-             UMErrorWithMessage(@"ExponentGLObjectManager.createContextAsync: Unexpected error occurred when initializing headless context")
+             EXErrorWithMessage(@"ExponentGLObjectManager.createContextAsync: Unexpected error occurred when initializing headless context")
              );
     }
   }];
 }
 
-UM_EXPORT_METHOD_AS(destroyContextAsync,
+EX_EXPORT_METHOD_AS(destroyContextAsync,
                     destroyContextWithId:(nonnull NSNumber *)exglCtxId
-                    resolve:(UMPromiseResolveBlock)resolve
-                    reject:(UMPromiseRejectBlock)reject)
+                    resolve:(EXPromiseResolveBlock)resolve
+                    reject:(EXPromiseRejectBlock)reject)
 {
   EXGLContext *glContext = [self getContextWithId:exglCtxId];
   
@@ -128,31 +128,31 @@ - (void)dealloc
 
 # pragma mark - Camera integration
 
-UM_EXPORT_METHOD_AS(destroyObjectAsync,
+EX_EXPORT_METHOD_AS(destroyObjectAsync,
                     destroyObjectAsync:(nonnull NSNumber *)exglObjId
-                    resolve:(UMPromiseResolveBlock)resolve
-                    reject:(UMPromiseRejectBlock)reject)
+                    resolve:(EXPromiseResolveBlock)resolve
+                    reject:(EXPromiseRejectBlock)reject)
 {
   _objects[exglObjId] = nil;
   resolve(@(YES));
 }
 
-UM_EXPORT_METHOD_AS(createCameraTextureAsync,
+EX_EXPORT_METHOD_AS(createCameraTextureAsync,
                     createTextureForContextWithId:(nonnull NSNumber *)exglCtxId
                     andCameraWithReactTag:(nonnull NSNumber *)cameraViewTag
-                    resolver:(UMPromiseResolveBlock)resolve
-                    rejecter:(UMPromiseRejectBlock)reject)
+                    resolver:(EXPromiseResolveBlock)resolve
+                    rejecter:(EXPromiseRejectBlock)reject)
 {
   [_uiManager executeUIBlock:^(id view) {
     EXGLContext *glContext = [self getContextWithId:exglCtxId];
     id<EXCameraInterface> cameraView = (id<EXCameraInterface>)view;
     
     if (glContext == nil) {
-      reject(@"E_GL_BAD_VIEW_TAG", nil, UMErrorWithMessage(@"ExponentGLObjectManager.createCameraTextureAsync: Expected an EXGLView"));
+      reject(@"E_GL_BAD_VIEW_TAG", nil, EXErrorWithMessage(@"ExponentGLObjectManager.createCameraTextureAsync: Expected an EXGLView"));
       return;
     }
     if (cameraView == nil) {
-      reject(@"E_GL_BAD_CAMERA_VIEW_TAG", nil, UMErrorWithMessage(@"ExponentGLObjectManager.createCameraTextureAsync: Expected an EXCamera"));
+      reject(@"E_GL_BAD_CAMERA_VIEW_TAG", nil, EXErrorWithMessage(@"ExponentGLObjectManager.createCameraTextureAsync: Expected an EXCamera"));
       return;
     }
     
diff --git a/node_modules/expo-gl/ios/EXGL/EXGLView.h b/node_modules/expo-gl/ios/EXGL/EXGLView.h
index 01cd184..17759e6 100644
--- a/node_modules/expo-gl/ios/EXGL/EXGLView.h
+++ b/node_modules/expo-gl/ios/EXGL/EXGLView.h
@@ -2,20 +2,20 @@
 
 #import <EXGL_CPP/UEXGL.h>
 #import <EXGL/EXGLContext.h>
-#import <UMCore/UMModuleRegistry.h>
+#import <ExpoModulesCore/EXModuleRegistry.h>
 
 NS_ASSUME_NONNULL_BEGIN
 
 @interface EXGLView : UIView <EXGLContextDelegate>
 
-- (instancetype)initWithModuleRegistry:(UMModuleRegistry *)moduleRegistry;
+- (instancetype)initWithModuleRegistry:(EXModuleRegistry *)moduleRegistry;
 - (UEXGLContextId)exglCtxId;
 
 // AR
 - (void)setArSessionManager:(id)arSessionManager;
 - (void)maybeStopARSession;
 
-@property (nonatomic, copy, nullable) UMDirectEventBlock onSurfaceCreate;
+@property (nonatomic, copy, nullable) EXDirectEventBlock onSurfaceCreate;
 @property (nonatomic, assign) NSNumber *msaaSamples;
 
 // "protected"
diff --git a/node_modules/expo-gl/ios/EXGL/EXGLView.m b/node_modules/expo-gl/ios/EXGL/EXGLView.m
index 5384376..e7ca617 100644
--- a/node_modules/expo-gl/ios/EXGL/EXGLView.m
+++ b/node_modules/expo-gl/ios/EXGL/EXGLView.m
@@ -1,6 +1,6 @@
 // Copyright 2016-present 650 Industries. All rights reserved.
 
-#import <UMCore/UMUtilities.h>
+#import <ExpoModulesCore/EXUtilities.h>
 #import <EXGL/EXGLView.h>
 #import <EXGL/EXGLContext.h>
 
@@ -40,14 +40,14 @@ + (Class)layerClass {
   return [CAEAGLLayer class];
 }
 
-- (instancetype)initWithModuleRegistry:(UMModuleRegistry *)moduleRegistry
+- (instancetype)initWithModuleRegistry:(EXModuleRegistry *)moduleRegistry
 {
   if ((self = [super init])) {
     _isLayouted = NO;
     _renderbufferPresented = YES;
     _viewBuffersSize = CGSizeZero;
     
-    self.contentScaleFactor = [UMUtilities screenScale];
+    self.contentScaleFactor = [EXUtilities screenScale];
     
     // Initialize properties of our backing CAEAGLLayer
     CAEAGLLayer *eaglLayer = (CAEAGLLayer *) self.layer;
@@ -102,7 +102,7 @@ - (void)layoutSubviews
   [self maybeCallSurfaceCreated];
 }
 
-- (void)setOnSurfaceCreate:(UMDirectEventBlock)onSurfaceCreate
+- (void)setOnSurfaceCreate:(EXDirectEventBlock)onSurfaceCreate
 {
   _onSurfaceCreate = onSurfaceCreate;
   [self maybeCallSurfaceCreated];
diff --git a/node_modules/expo-gl/ios/EXGL/EXGLViewManager.h b/node_modules/expo-gl/ios/EXGL/EXGLViewManager.h
index c46124d..e38a5a4 100644
--- a/node_modules/expo-gl/ios/EXGL/EXGLViewManager.h
+++ b/node_modules/expo-gl/ios/EXGL/EXGLViewManager.h
@@ -1,8 +1,8 @@
 // Copyright 2016-present 650 Industries. All rights reserved.
 
-#import <UMCore/UMViewManager.h>
-#import <UMCore/UMModuleRegistryConsumer.h>
+#import <ExpoModulesCore/EXViewManager.h>
+#import <ExpoModulesCore/EXModuleRegistryConsumer.h>
 
-@interface EXGLViewManager : UMViewManager <UMModuleRegistryConsumer>
+@interface EXGLViewManager : EXViewManager <EXModuleRegistryConsumer>
 
 @end
diff --git a/node_modules/expo-gl/ios/EXGL/EXGLViewManager.m b/node_modules/expo-gl/ios/EXGL/EXGLViewManager.m
index 566aeaa..8db7164 100644
--- a/node_modules/expo-gl/ios/EXGL/EXGLViewManager.m
+++ b/node_modules/expo-gl/ios/EXGL/EXGLViewManager.m
@@ -2,17 +2,17 @@
 
 #import <EXGL/EXGLView.h>
 #import <EXGL/EXGLViewManager.h>
-#import <UMCore/UMUIManager.h>
+#import <ExpoModulesCore/EXUIManager.h>
 
 @interface EXGLViewManager ()
 
-@property (nonatomic, weak) UMModuleRegistry *moduleRegistry;
+@property (nonatomic, weak) EXModuleRegistry *moduleRegistry;
 
 @end
 
 @implementation EXGLViewManager
 
-UM_EXPORT_MODULE(ExponentGLViewManager);
+EX_EXPORT_MODULE(ExponentGLViewManager);
 
 - (UIView *)view
 {
@@ -29,12 +29,12 @@ - (NSString *)viewName
   return @[@"onSurfaceCreate"];
 }
 
-UM_VIEW_PROPERTY(msaaSamples, NSNumber *, EXGLView)
+EX_VIEW_PROPERTY(msaaSamples, NSNumber *, EXGLView)
 {
   [view setMsaaSamples:value];
 }
 
-- (void)setModuleRegistry:(UMModuleRegistry *)moduleRegistry
+- (void)setModuleRegistry:(EXModuleRegistry *)moduleRegistry
 {
   _moduleRegistry = moduleRegistry;
 }
